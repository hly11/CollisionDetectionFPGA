

================================================================
== Vivado HLS Report for 'image_filter'
================================================================
* Date:           Thu Jun  4 17:29:30 2015

* Version:        2015.1 (Build 1215546 on Mon Apr 27 19:24:50 PM 2015)
* Project:        image_filter
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |   6.00|      6.47|        0.75|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    ?|    ?|    ?|    ?| dataflow |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
+---------------------------+-----+-----+---------+--------------+--------+
|         RTL Ports         | Dir | Bits| Protocol| Source Object| C Type |
+---------------------------+-----+-----+---------+--------------+--------+
|s_axi_control_bus_AWVALID  |  in |    1|  s_axi  |  control_bus | scalar |
|s_axi_control_bus_AWREADY  | out |    1|  s_axi  |  control_bus | scalar |
|s_axi_control_bus_AWADDR   |  in |    6|  s_axi  |  control_bus | scalar |
|s_axi_control_bus_WVALID   |  in |    1|  s_axi  |  control_bus | scalar |
|s_axi_control_bus_WREADY   | out |    1|  s_axi  |  control_bus | scalar |
|s_axi_control_bus_WDATA    |  in |   32|  s_axi  |  control_bus | scalar |
|s_axi_control_bus_WSTRB    |  in |    4|  s_axi  |  control_bus | scalar |
|s_axi_control_bus_ARVALID  |  in |    1|  s_axi  |  control_bus | scalar |
|s_axi_control_bus_ARREADY  | out |    1|  s_axi  |  control_bus | scalar |
|s_axi_control_bus_ARADDR   |  in |    6|  s_axi  |  control_bus | scalar |
|s_axi_control_bus_RVALID   | out |    1|  s_axi  |  control_bus | scalar |
|s_axi_control_bus_RREADY   |  in |    1|  s_axi  |  control_bus | scalar |
|s_axi_control_bus_RDATA    | out |   32|  s_axi  |  control_bus | scalar |
|s_axi_control_bus_RRESP    | out |    2|  s_axi  |  control_bus | scalar |
|s_axi_control_bus_BVALID   | out |    1|  s_axi  |  control_bus | scalar |
|s_axi_control_bus_BREADY   |  in |    1|  s_axi  |  control_bus | scalar |
|s_axi_control_bus_BRESP    | out |    2|  s_axi  |  control_bus | scalar |
+---------------------------+-----+-----+---------+--------------+--------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 8
* Pipeline: 0
* Dataflow Pipeline: 1
  DF-Pipeline-0: Size = 8, States = { 1 2 3 4 5 6 7 8 }

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
* FSM state operations: 

 <State 1>: 2.57ns
ST_1: cols2_read [1/1] 1.00ns
Mat.exit20:21  %cols2_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %cols2)

ST_1: rows2_read [1/1] 1.00ns
Mat.exit20:22  %rows2_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %rows2)

ST_1: cols_read [1/1] 1.00ns
Mat.exit20:23  %cols_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %cols)

ST_1: rows_read [1/1] 1.00ns
Mat.exit20:24  %rows_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %rows)

ST_1: img_0_1_data_stream_0_V [1/1] 0.00ns
Mat.exit20:25  %img_0_1_data_stream_0_V = alloca float, align 4

ST_1: img_resized_data_stream_0_V [1/1] 0.00ns
Mat.exit20:28  %img_resized_data_stream_0_V = alloca float, align 4

ST_1: img_0_2_data_stream_0_V [1/1] 0.00ns
Mat.exit20:31  %img_0_2_data_stream_0_V = alloca float, align 4

ST_1: call_ret [1/1] 0.00ns
Mat.exit20:41  %call_ret = call fastcc { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } @image_filter_Block_Mat.exit2020_proc(i32 %rows_read, i32 %cols_read, i32 %rows2_read, i32 %cols2_read)

ST_1: img_0_1_rows_V_channel [1/1] 0.00ns
Mat.exit20:42  %img_0_1_rows_V_channel = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 0

ST_1: img_0_1_rows_V_channel1 [1/1] 0.00ns
Mat.exit20:43  %img_0_1_rows_V_channel1 = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 1

ST_1: img_0_1_cols_V_channel [1/1] 0.00ns
Mat.exit20:44  %img_0_1_cols_V_channel = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 2

ST_1: img_0_1_cols_V_channel1 [1/1] 0.00ns
Mat.exit20:45  %img_0_1_cols_V_channel1 = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 3

ST_1: img_resized_rows_V_channel [1/1] 0.00ns
Mat.exit20:46  %img_resized_rows_V_channel = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 4

ST_1: img_resized_rows_V_channel1 [1/1] 0.00ns
Mat.exit20:47  %img_resized_rows_V_channel1 = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 5

ST_1: img_resized_cols_V_channel [1/1] 0.00ns
Mat.exit20:48  %img_resized_cols_V_channel = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 6

ST_1: img_resized_cols_V_channel1 [1/1] 0.00ns
Mat.exit20:49  %img_resized_cols_V_channel1 = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 7

ST_1: img_0_2_rows_V_channel [1/1] 0.00ns
Mat.exit20:50  %img_0_2_rows_V_channel = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 8

ST_1: img_0_2_cols_V_channel [1/1] 0.00ns
Mat.exit20:51  %img_0_2_cols_V_channel = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 9

ST_1: stg_27 [2/2] 1.57ns
Mat.exit20:52  call fastcc void @"image_filter_AXIvideo2Mat<32, 480, 640, 5>"(i32* %bus_input_axis_V_data_V, i4* %bus_input_axis_V_keep_V, i4* %bus_input_axis_V_strb_V, i1* %bus_input_axis_V_user_V, i1* %bus_input_axis_V_last_V, i1* %bus_input_axis_V_id_V, i1* %bus_input_axis_V_dest_V, i12 %img_0_1_rows_V_channel, i12 %img_0_1_cols_V_channel, float* %img_0_1_data_stream_0_V)

ST_1: stg_28 [2/2] 1.57ns
Mat.exit20:53  call fastcc void @"image_filter_AXIvideo2Mat<32, 480, 640, 5>.1"(i32* %bus_input2_axis_V_data_V, i4* %bus_input2_axis_V_keep_V, i4* %bus_input2_axis_V_strb_V, i1* %bus_input2_axis_V_user_V, i1* %bus_input2_axis_V_last_V, i1* %bus_input2_axis_V_id_V, i1* %bus_input2_axis_V_dest_V, i12 %img_0_2_rows_V_channel, i12 %img_0_2_cols_V_channel, float* %img_0_2_data_stream_0_V)


 <State 2>: 0.00ns
ST_2: stg_29 [1/2] 0.00ns
Mat.exit20:52  call fastcc void @"image_filter_AXIvideo2Mat<32, 480, 640, 5>"(i32* %bus_input_axis_V_data_V, i4* %bus_input_axis_V_keep_V, i4* %bus_input_axis_V_strb_V, i1* %bus_input_axis_V_user_V, i1* %bus_input_axis_V_last_V, i1* %bus_input_axis_V_id_V, i1* %bus_input_axis_V_dest_V, i12 %img_0_1_rows_V_channel, i12 %img_0_1_cols_V_channel, float* %img_0_1_data_stream_0_V)

ST_2: stg_30 [1/2] 0.00ns
Mat.exit20:53  call fastcc void @"image_filter_AXIvideo2Mat<32, 480, 640, 5>.1"(i32* %bus_input2_axis_V_data_V, i4* %bus_input2_axis_V_keep_V, i4* %bus_input2_axis_V_strb_V, i1* %bus_input2_axis_V_user_V, i1* %bus_input2_axis_V_last_V, i1* %bus_input2_axis_V_id_V, i1* %bus_input2_axis_V_dest_V, i12 %img_0_2_rows_V_channel, i12 %img_0_2_cols_V_channel, float* %img_0_2_data_stream_0_V)


 <State 3>: 0.00ns
ST_3: stg_31 [2/2] 0.00ns
Mat.exit20:54  call fastcc void @image_filter_Resize_Test(i12 %img_0_1_rows_V_channel1, i12 %img_0_1_cols_V_channel1, float* %img_0_1_data_stream_0_V, i12 %img_resized_rows_V_channel, i12 %img_resized_cols_V_channel, float* %img_resized_data_stream_0_V)


 <State 4>: 0.00ns
ST_4: stg_32 [1/2] 0.00ns
Mat.exit20:54  call fastcc void @image_filter_Resize_Test(i12 %img_0_1_rows_V_channel1, i12 %img_0_1_cols_V_channel1, float* %img_0_1_data_stream_0_V, i12 %img_resized_rows_V_channel, i12 %img_resized_cols_V_channel, float* %img_resized_data_stream_0_V)


 <State 5>: 0.00ns
ST_5: tmp_loc_channel [2/2] 0.00ns
Mat.exit20:55  %tmp_loc_channel = call fastcc i64 @image_filter_Loop_1_proc(float* %img_resized_data_stream_0_V, float* %img_0_2_data_stream_0_V, i12 %img_resized_cols_V_channel1, i12 %img_resized_rows_V_channel1)


 <State 6>: 2.71ns
ST_6: tmp_loc_channel [1/2] 0.00ns
Mat.exit20:55  %tmp_loc_channel = call fastcc i64 @image_filter_Loop_1_proc(float* %img_resized_data_stream_0_V, float* %img_0_2_data_stream_0_V, i12 %img_resized_cols_V_channel1, i12 %img_resized_rows_V_channel1)

ST_6: p_0_i_i_loc_channel [2/2] 2.71ns
Mat.exit20:56  %p_0_i_i_loc_channel = call fastcc float @image_filter_Block_.loopexit24.i_proc1(i64 %tmp_loc_channel)


 <State 7>: 3.09ns
ST_7: p_0_i_i_loc_channel [1/2] 3.09ns
Mat.exit20:56  %p_0_i_i_loc_channel = call fastcc float @image_filter_Block_.loopexit24.i_proc1(i64 %tmp_loc_channel)

ST_7: res [2/2] 0.00ns
Mat.exit20:57  %res = call fastcc float @image_filter_sqrtf1(float %p_0_i_i_loc_channel)


 <State 8>: 3.39ns
ST_8: stg_38 [1/1] 0.00ns
Mat.exit20:0  call void (...)* @_ssdm_op_SpecDataflowPipeline(i32 -1, [1 x i8]* @p_str1806) nounwind

ST_8: stg_39 [1/1] 0.00ns
Mat.exit20:1  call void (...)* @_ssdm_op_SpecBitsMap(i32* %bus_input_axis_V_data_V), !map !7

ST_8: stg_40 [1/1] 0.00ns
Mat.exit20:2  call void (...)* @_ssdm_op_SpecBitsMap(i4* %bus_input_axis_V_keep_V), !map !11

ST_8: stg_41 [1/1] 0.00ns
Mat.exit20:3  call void (...)* @_ssdm_op_SpecBitsMap(i4* %bus_input_axis_V_strb_V), !map !15

ST_8: stg_42 [1/1] 0.00ns
Mat.exit20:4  call void (...)* @_ssdm_op_SpecBitsMap(i1* %bus_input_axis_V_user_V), !map !19

ST_8: stg_43 [1/1] 0.00ns
Mat.exit20:5  call void (...)* @_ssdm_op_SpecBitsMap(i1* %bus_input_axis_V_last_V), !map !23

ST_8: stg_44 [1/1] 0.00ns
Mat.exit20:6  call void (...)* @_ssdm_op_SpecBitsMap(i1* %bus_input_axis_V_id_V), !map !27

ST_8: stg_45 [1/1] 0.00ns
Mat.exit20:7  call void (...)* @_ssdm_op_SpecBitsMap(i1* %bus_input_axis_V_dest_V), !map !31

ST_8: stg_46 [1/1] 0.00ns
Mat.exit20:8  call void (...)* @_ssdm_op_SpecBitsMap(i32* %bus_input2_axis_V_data_V), !map !35

ST_8: stg_47 [1/1] 0.00ns
Mat.exit20:9  call void (...)* @_ssdm_op_SpecBitsMap(i4* %bus_input2_axis_V_keep_V), !map !39

ST_8: stg_48 [1/1] 0.00ns
Mat.exit20:10  call void (...)* @_ssdm_op_SpecBitsMap(i4* %bus_input2_axis_V_strb_V), !map !43

ST_8: stg_49 [1/1] 0.00ns
Mat.exit20:11  call void (...)* @_ssdm_op_SpecBitsMap(i1* %bus_input2_axis_V_user_V), !map !47

ST_8: stg_50 [1/1] 0.00ns
Mat.exit20:12  call void (...)* @_ssdm_op_SpecBitsMap(i1* %bus_input2_axis_V_last_V), !map !51

ST_8: stg_51 [1/1] 0.00ns
Mat.exit20:13  call void (...)* @_ssdm_op_SpecBitsMap(i1* %bus_input2_axis_V_id_V), !map !55

ST_8: stg_52 [1/1] 0.00ns
Mat.exit20:14  call void (...)* @_ssdm_op_SpecBitsMap(i1* %bus_input2_axis_V_dest_V), !map !59

ST_8: stg_53 [1/1] 0.00ns
Mat.exit20:15  call void (...)* @_ssdm_op_SpecBitsMap(i32 %rows), !map !63

ST_8: stg_54 [1/1] 0.00ns
Mat.exit20:16  call void (...)* @_ssdm_op_SpecBitsMap(i32 %cols), !map !69

ST_8: stg_55 [1/1] 0.00ns
Mat.exit20:17  call void (...)* @_ssdm_op_SpecBitsMap(i32 %rows2), !map !73

ST_8: stg_56 [1/1] 0.00ns
Mat.exit20:18  call void (...)* @_ssdm_op_SpecBitsMap(i32 %cols2), !map !77

ST_8: stg_57 [1/1] 0.00ns
Mat.exit20:19  call void (...)* @_ssdm_op_SpecBitsMap(float 0.000000e+00) nounwind, !map !81

ST_8: stg_58 [1/1] 0.00ns
Mat.exit20:20  call void (...)* @_ssdm_op_SpecTopModule([13 x i8]* @str) nounwind

ST_8: empty [1/1] 0.00ns
Mat.exit20:26  %empty = call i32 (...)* @_ssdm_op_SpecChannel([25 x i8]* @str50, i32 1, [1 x i8]* @str51, [1 x i8]* @str51, i32 1, i32 1, float* %img_0_1_data_stream_0_V, float* %img_0_1_data_stream_0_V)

ST_8: stg_60 [1/1] 0.00ns
Mat.exit20:27  call void (...)* @_ssdm_op_SpecInterface(float* %img_0_1_data_stream_0_V, [8 x i8]* @str52, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str53, [1 x i8]* @str53, [8 x i8]* @str52)

ST_8: empty_19 [1/1] 0.00ns
Mat.exit20:29  %empty_19 = call i32 (...)* @_ssdm_op_SpecChannel([29 x i8]* @str54, i32 1, [1 x i8]* @str55, [1 x i8]* @str55, i32 1, i32 1, float* %img_resized_data_stream_0_V, float* %img_resized_data_stream_0_V)

ST_8: stg_62 [1/1] 0.00ns
Mat.exit20:30  call void (...)* @_ssdm_op_SpecInterface(float* %img_resized_data_stream_0_V, [8 x i8]* @str56, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str57, [1 x i8]* @str57, [8 x i8]* @str56)

ST_8: empty_20 [1/1] 0.00ns
Mat.exit20:32  %empty_20 = call i32 (...)* @_ssdm_op_SpecChannel([25 x i8]* @str58, i32 1, [1 x i8]* @str59, [1 x i8]* @str59, i32 20000, i32 20000, float* %img_0_2_data_stream_0_V, float* %img_0_2_data_stream_0_V)

ST_8: stg_64 [1/1] 0.00ns
Mat.exit20:33  call void (...)* @_ssdm_op_SpecInterface(float* %img_0_2_data_stream_0_V, [8 x i8]* @str60, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str61, [1 x i8]* @str61, [8 x i8]* @str60)

ST_8: stg_65 [1/1] 0.00ns
Mat.exit20:34  call void (...)* @_ssdm_op_SpecInterface(i32* %bus_input_axis_V_data_V, i4* %bus_input_axis_V_keep_V, i4* %bus_input_axis_V_strb_V, i1* %bus_input_axis_V_user_V, i1* %bus_input_axis_V_last_V, i1* %bus_input_axis_V_id_V, i1* %bus_input_axis_V_dest_V, [5 x i8]* @p_str1808, i32 0, i32 0, i32 0, i32 0, [15 x i8]* @p_str1809, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806) nounwind

ST_8: stg_66 [1/1] 0.00ns
Mat.exit20:35  call void (...)* @_ssdm_op_SpecInterface(i32* %bus_input2_axis_V_data_V, i4* %bus_input2_axis_V_keep_V, i4* %bus_input2_axis_V_strb_V, i1* %bus_input2_axis_V_user_V, i1* %bus_input2_axis_V_last_V, i1* %bus_input2_axis_V_id_V, i1* %bus_input2_axis_V_dest_V, [5 x i8]* @p_str1808, i32 0, i32 0, i32 0, i32 0, [16 x i8]* @p_str1810, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806) nounwind

ST_8: stg_67 [1/1] 0.00ns
Mat.exit20:36  call void (...)* @_ssdm_op_SpecInterface(i32 %rows2, [10 x i8]* @p_str1811, i32 0, i32 0, i32 0, i32 0, [12 x i8]* @p_str1812, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806) nounwind

ST_8: stg_68 [1/1] 0.00ns
Mat.exit20:37  call void (...)* @_ssdm_op_SpecInterface(i32 %cols2, [10 x i8]* @p_str1811, i32 0, i32 0, i32 0, i32 0, [12 x i8]* @p_str1812, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806) nounwind

ST_8: stg_69 [1/1] 0.00ns
Mat.exit20:38  call void (...)* @_ssdm_op_SpecInterface(i32 %rows, [10 x i8]* @p_str1811, i32 0, i32 0, i32 0, i32 0, [12 x i8]* @p_str1812, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806) nounwind

ST_8: stg_70 [1/1] 0.00ns
Mat.exit20:39  call void (...)* @_ssdm_op_SpecInterface(i32 %cols, [10 x i8]* @p_str1811, i32 0, i32 0, i32 0, i32 0, [12 x i8]* @p_str1812, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806) nounwind

ST_8: stg_71 [1/1] 0.00ns
Mat.exit20:40  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str1811, i32 0, i32 0, i32 0, i32 0, [12 x i8]* @p_str1812, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806) nounwind

ST_8: res [1/2] 3.39ns
Mat.exit20:57  %res = call fastcc float @image_filter_sqrtf1(float %p_0_i_i_loc_channel)

ST_8: stg_73 [1/1] 0.00ns
Mat.exit20:58  ret float %res



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
