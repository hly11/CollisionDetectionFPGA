

================================================================
== Vivado HLS Report for 'image_filter_Loop_1_proc'
================================================================
* Date:           Thu Jun  4 17:29:29 2015

* Version:        2015.1 (Build 1215546 on Mon Apr 27 19:24:50 PM 2015)
* Project:        image_filter
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |   6.00|      5.08|        0.75|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |             |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1     |    ?|    ?|         ?|          -|          -|     ?|    no    |
        | + Loop 1.1  |    ?|    ?|        23|          1|          1|     ?|    yes   |
        +-------------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 23


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 26
* Pipeline: 1
  Pipeline-0: II = 1, D = 23, States = { 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (or_cond_45)
3 --> 
	26  / (!tmp_6) | (tmp_6 & !tmp_8)
	4  / (tmp_6 & tmp_8)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	3  / true
26 --> 
	2  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: acc_V_1 [1/1] 0.00ns
newFuncRoot:0  %acc_V_1 = alloca i64, align 8

ST_1: p_Val2_s [1/1] 0.00ns
newFuncRoot:1  %p_Val2_s = alloca i64, align 8

ST_1: stg_29 [1/1] 0.00ns
newFuncRoot:2  call void (...)* @_ssdm_op_SpecInterface(float* %img_0_2_data_stream_0_V, [8 x i8]* @str60, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str61, [1 x i8]* @str61, [8 x i8]* @str60)

ST_1: stg_30 [1/1] 0.00ns
newFuncRoot:3  call void (...)* @_ssdm_op_SpecInterface(float* %img_resized_data_stream_0_V, [8 x i8]* @str56, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str57, [1 x i8]* @str57, [8 x i8]* @str56)

ST_1: p_read_3 [1/1] 0.00ns
newFuncRoot:4  %p_read_3 = call i12 @_ssdm_op_Read.ap_auto.i12(i12 %p_read1)

ST_1: p_read_4 [1/1] 0.00ns
newFuncRoot:5  %p_read_4 = call i12 @_ssdm_op_Read.ap_auto.i12(i12 %p_read)

ST_1: stg_33 [1/1] 1.57ns
newFuncRoot:6  store i64 0, i64* %p_Val2_s, align 8

ST_1: stg_34 [1/1] 1.57ns
newFuncRoot:7  store i64 0, i64* %acc_V_1, align 8

ST_1: stg_35 [1/1] 1.57ns
newFuncRoot:8  br label %0


 <State 2>: 5.08ns
ST_2: i_0_i [1/1] 0.00ns
:0  %i_0_i = phi i9 [ 0, %newFuncRoot ], [ %i, %.loopexit.i ]

ST_2: i_0_i_cast_cast [1/1] 0.00ns
:1  %i_0_i_cast_cast = zext i9 %i_0_i to i12

ST_2: tmp_1 [1/1] 2.03ns
:2  %tmp_1 = icmp ult i9 %i_0_i, -32

ST_2: tmp_3 [1/1] 2.14ns
:3  %tmp_3 = icmp ult i12 %i_0_i_cast_cast, %p_read_3

ST_2: or_cond_45 [1/1] 1.37ns
:4  %or_cond_45 = and i1 %tmp_1, %tmp_3

ST_2: i [1/1] 1.84ns
:5  %i = add i9 %i_0_i, 1

ST_2: stg_42 [1/1] 1.57ns
:6  br i1 %or_cond_45, label %.preheader.i, label %.loopexit24.i.exitStub

ST_2: acc_V_1_load [1/1] 0.00ns
.loopexit24.i.exitStub:0  %acc_V_1_load = load i64* %acc_V_1, align 8

ST_2: stg_44 [1/1] 0.00ns
.loopexit24.i.exitStub:1  ret i64 %acc_V_1_load


 <State 3>: 3.44ns
ST_3: asd_0_i [1/1] 0.00ns
.preheader.i:0  %asd_0_i = phi i10 [ %asd, %_ifconv ], [ 0, %0 ]

ST_3: asd_0_i_cast_cast [1/1] 0.00ns
.preheader.i:1  %asd_0_i_cast_cast = zext i10 %asd_0_i to i12

ST_3: tmp_6 [1/1] 2.07ns
.preheader.i:2  %tmp_6 = icmp ult i10 %asd_0_i, -384

ST_3: asd [1/1] 1.84ns
.preheader.i:3  %asd = add i10 %asd_0_i, 1

ST_3: stg_49 [1/1] 0.00ns
.preheader.i:4  br i1 %tmp_6, label %1, label %.loopexit.i

ST_3: tmp [1/1] 0.00ns
:0  %tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str1807)

ST_3: tmp_8 [1/1] 2.14ns
:1  %tmp_8 = icmp ult i12 %asd_0_i_cast_cast, %p_read_4

ST_3: stg_52 [1/1] 0.00ns
:2  br i1 %tmp_8, label %_ifconv, label %.loopexit.i


 <State 4>: 2.62ns
ST_4: tmp_9 [1/1] 0.00ns
_ifconv:2  %tmp_9 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str1843)

ST_4: stg_54 [1/1] 0.00ns
_ifconv:3  call void (...)* @_ssdm_op_SpecProtocol(i32 0, [1 x i8]* @p_str1806) nounwind

ST_4: img_resized_data_stream_0_V_r [1/1] 2.62ns
_ifconv:4  %img_resized_data_stream_0_V_r = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %img_resized_data_stream_0_V)

ST_4: empty [1/1] 0.00ns
_ifconv:5  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str1843, i32 %tmp_9)

ST_4: img_0_2_data_stream_0_V_read [1/1] 2.62ns
_ifconv:8  %img_0_2_data_stream_0_V_read = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %img_0_2_data_stream_0_V)


 <State 5>: 4.35ns
ST_5: temp [9/9] 4.35ns
_ifconv:9  %temp = fsub float %img_resized_data_stream_0_V_r, %img_0_2_data_stream_0_V_read


 <State 6>: 4.35ns
ST_6: temp [8/9] 4.35ns
_ifconv:9  %temp = fsub float %img_resized_data_stream_0_V_r, %img_0_2_data_stream_0_V_read


 <State 7>: 4.35ns
ST_7: temp [7/9] 4.35ns
_ifconv:9  %temp = fsub float %img_resized_data_stream_0_V_r, %img_0_2_data_stream_0_V_read


 <State 8>: 4.35ns
ST_8: temp [6/9] 4.35ns
_ifconv:9  %temp = fsub float %img_resized_data_stream_0_V_r, %img_0_2_data_stream_0_V_read


 <State 9>: 4.35ns
ST_9: temp [5/9] 4.35ns
_ifconv:9  %temp = fsub float %img_resized_data_stream_0_V_r, %img_0_2_data_stream_0_V_read


 <State 10>: 4.35ns
ST_10: temp [4/9] 4.35ns
_ifconv:9  %temp = fsub float %img_resized_data_stream_0_V_r, %img_0_2_data_stream_0_V_read


 <State 11>: 4.35ns
ST_11: temp [3/9] 4.35ns
_ifconv:9  %temp = fsub float %img_resized_data_stream_0_V_r, %img_0_2_data_stream_0_V_read


 <State 12>: 4.35ns
ST_12: temp [2/9] 4.35ns
_ifconv:9  %temp = fsub float %img_resized_data_stream_0_V_r, %img_0_2_data_stream_0_V_read


 <State 13>: 4.35ns
ST_13: temp [1/9] 4.35ns
_ifconv:9  %temp = fsub float %img_resized_data_stream_0_V_r, %img_0_2_data_stream_0_V_read


 <State 14>: 4.35ns
ST_14: v_assign [5/5] 4.35ns
_ifconv:10  %v_assign = fmul float %temp, %temp


 <State 15>: 4.35ns
ST_15: v_assign [4/5] 4.35ns
_ifconv:10  %v_assign = fmul float %temp, %temp


 <State 16>: 4.35ns
ST_16: v_assign [3/5] 4.35ns
_ifconv:10  %v_assign = fmul float %temp, %temp


 <State 17>: 4.35ns
ST_17: v_assign [2/5] 4.35ns
_ifconv:10  %v_assign = fmul float %temp, %temp


 <State 18>: 4.35ns
ST_18: v_assign [1/5] 4.35ns
_ifconv:10  %v_assign = fmul float %temp, %temp


 <State 19>: 4.44ns
ST_19: d_assign [2/2] 4.44ns
_ifconv:11  %d_assign = fpext float %v_assign to double


 <State 20>: 4.44ns
ST_20: d_assign [1/2] 4.44ns
_ifconv:11  %d_assign = fpext float %v_assign to double

ST_20: ireg_V [1/1] 0.00ns
_ifconv:12  %ireg_V = bitcast double %d_assign to i64

ST_20: tmp_147 [1/1] 0.00ns
_ifconv:13  %tmp_147 = trunc i64 %ireg_V to i63

ST_20: isneg [1/1] 0.00ns
_ifconv:15  %isneg = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V, i32 63)

ST_20: exp_tmp_V [1/1] 0.00ns
_ifconv:16  %exp_tmp_V = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V, i32 52, i32 62)

ST_20: tmp_149 [1/1] 0.00ns
_ifconv:18  %tmp_149 = trunc i64 %ireg_V to i52


 <State 21>: 4.53ns
ST_21: tmp_15 [1/1] 0.00ns
_ifconv:17  %tmp_15 = zext i11 %exp_tmp_V to i12

ST_21: tmp_16 [1/1] 0.00ns
_ifconv:19  %tmp_16 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_149)

ST_21: p_Result_s [1/1] 0.00ns
_ifconv:20  %p_Result_s = zext i53 %tmp_16 to i54

ST_21: man_V_1 [1/1] 3.16ns
_ifconv:21  %man_V_1 = sub i54 0, %p_Result_s

ST_21: p_Val2_44 [1/1] 1.37ns
_ifconv:22  %p_Val2_44 = select i1 %isneg, i54 %man_V_1, i54 %p_Result_s

ST_21: tmp_18 [1/1] 2.70ns
_ifconv:23  %tmp_18 = icmp eq i63 %tmp_147, 0

ST_21: F2 [1/1] 1.84ns
_ifconv:24  %F2 = sub i12 1075, %tmp_15

ST_21: tmp_20 [1/1] 2.14ns
_ifconv:25  %tmp_20 = icmp sgt i12 %F2, 32

ST_21: tmp_21 [1/1] 1.84ns
_ifconv:26  %tmp_21 = add i12 -32, %F2

ST_21: tmp_22 [1/1] 1.84ns
_ifconv:27  %tmp_22 = sub i12 32, %F2

ST_21: tmp_23 [1/1] 2.14ns
_ifconv:30  %tmp_23 = icmp eq i12 %F2, 32

ST_21: tmp_34 [1/1] 1.84ns
_ifconv:43  %tmp_34 = add i12 -33, %F2

ST_21: tmp_34_cast [1/1] 0.00ns
_ifconv:44  %tmp_34_cast = zext i12 %tmp_34 to i32

ST_21: tmp_151 [1/1] 0.00ns
_ifconv:45  %tmp_151 = call i1 @_ssdm_op_BitSelect.i1.i54.i32(i54 %p_Val2_44, i32 %tmp_34_cast)


 <State 22>: 4.93ns
ST_22: sh_amt [1/1] 1.37ns
_ifconv:28  %sh_amt = select i1 %tmp_20, i12 %tmp_21, i12 %tmp_22

ST_22: sh_amt_cast [1/1] 0.00ns
_ifconv:29  %sh_amt_cast = sext i12 %sh_amt to i32

ST_22: tmp_25 [1/1] 2.14ns
_ifconv:32  %tmp_25 = icmp ult i12 %sh_amt, 54

ST_22: tmp_150 [1/1] 0.00ns
_ifconv:33  %tmp_150 = call i6 @_ssdm_op_PartSelect.i6.i12.i32.i32(i12 %sh_amt, i32 6, i32 11)

ST_22: icmp [1/1] 1.94ns
_ifconv:34  %icmp = icmp eq i6 %tmp_150, 0

ST_22: tmp_28 [1/1] 0.00ns
_ifconv:35  %tmp_28 = zext i32 %sh_amt_cast to i54

ST_22: tmp_29 [1/1] 3.56ns
_ifconv:36  %tmp_29 = ashr i54 %p_Val2_44, %tmp_28

ST_22: this_assign_cast [1/1] 1.37ns
_ifconv:37  %this_assign_cast = select i1 %isneg, i54 -1, i54 0

ST_22: tmp_33 [1/1] 2.14ns
_ifconv:42  %tmp_33 = icmp sgt i12 %tmp_21, 54

ST_22: qb [1/1] 1.37ns
_ifconv:46  %qb = select i1 %tmp_33, i1 %isneg, i1 %tmp_151

ST_22: sel_tmp1 [1/1] 1.37ns
_ifconv:50  %sel_tmp1 = xor i1 %tmp_18, true

ST_22: sel_tmp2 [1/1] 1.37ns
_ifconv:51  %sel_tmp2 = and i1 %tmp_23, %sel_tmp1

ST_22: sel_tmp6_demorgan [1/1] 1.37ns
_ifconv:52  %sel_tmp6_demorgan = or i1 %tmp_18, %tmp_23


 <State 23>: 4.53ns
ST_23: tmp_24 [1/1] 0.00ns
_ifconv:31  %tmp_24 = sext i54 %p_Val2_44 to i64

ST_23: tmp_31 [1/1] 0.00ns
_ifconv:38  %tmp_31 = zext i32 %sh_amt_cast to i64

ST_23: tmp_32 [1/1] 3.56ns
_ifconv:39  %tmp_32 = shl i64 %tmp_24, %tmp_31

ST_23: p_Val2_3 [1/1] 1.37ns
_ifconv:40  %p_Val2_3 = select i1 %tmp_25, i54 %tmp_29, i54 %this_assign_cast

ST_23: p_Val2_3_cast [1/1] 0.00ns
_ifconv:41  %p_Val2_3_cast = sext i54 %p_Val2_3 to i55

ST_23: tmp_37_cast [1/1] 0.00ns
_ifconv:47  %tmp_37_cast = zext i1 %qb to i55

ST_23: p_Val2_5 [1/1] 3.16ns
_ifconv:48  %p_Val2_5 = add i55 %tmp_37_cast, %p_Val2_3_cast

ST_23: sel_tmp6 [1/1] 1.37ns
_ifconv:53  %sel_tmp6 = xor i1 %sel_tmp6_demorgan, true

ST_23: sel_tmp7 [1/1] 1.37ns
_ifconv:54  %sel_tmp7 = and i1 %tmp_20, %sel_tmp6

ST_23: sel_tmp13_demorgan [1/1] 1.37ns
_ifconv:55  %sel_tmp13_demorgan = or i1 %sel_tmp6_demorgan, %tmp_20

ST_23: sel_tmp13 [1/1] 1.37ns
_ifconv:56  %sel_tmp13 = xor i1 %sel_tmp13_demorgan, true

ST_23: sel_tmp14 [1/1] 1.37ns
_ifconv:57  %sel_tmp14 = and i1 %icmp, %sel_tmp13

ST_23: newSel3 [1/1] 1.37ns
_ifconv:60  %newSel3 = select i1 %sel_tmp2, i54 %p_Val2_44, i54 0


 <State 24>: 2.74ns
ST_24: p_Val2_5_cast [1/1] 0.00ns
_ifconv:49  %p_Val2_5_cast = sext i55 %p_Val2_5 to i64

ST_24: newSel [1/1] 1.37ns
_ifconv:58  %newSel = select i1 %sel_tmp14, i64 %tmp_32, i64 %p_Val2_5_cast

ST_24: or_cond [1/1] 1.37ns
_ifconv:59  %or_cond = or i1 %sel_tmp14, %sel_tmp7

ST_24: newSel3_cast [1/1] 0.00ns
_ifconv:61  %newSel3_cast = sext i54 %newSel3 to i64

ST_24: p_Val2_45 [1/1] 1.37ns
_ifconv:62  %p_Val2_45 = select i1 %or_cond, i64 %newSel, i64 %newSel3_cast


 <State 25>: 4.97ns
ST_25: p_Val2_load [1/1] 0.00ns
_ifconv:0  %p_Val2_load = load i64* %p_Val2_s, align 8

ST_25: stg_125 [1/1] 0.00ns
_ifconv:1  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1806) nounwind

ST_25: tmp_12 [1/1] 0.00ns
_ifconv:6  %tmp_12 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str1843)

ST_25: stg_127 [1/1] 0.00ns
_ifconv:7  call void (...)* @_ssdm_op_SpecProtocol(i32 0, [1 x i8]* @p_str1806) nounwind

ST_25: empty_46 [1/1] 0.00ns
_ifconv:14  %empty_46 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str1843, i32 %tmp_12)

ST_25: acc_V [1/1] 3.40ns
_ifconv:63  %acc_V = add i64 %p_Val2_load, %p_Val2_45

ST_25: empty_47 [1/1] 0.00ns
_ifconv:64  %empty_47 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str1807, i32 %tmp)

ST_25: stg_131 [1/1] 1.57ns
_ifconv:65  store i64 %acc_V, i64* %p_Val2_s, align 8

ST_25: stg_132 [1/1] 1.57ns
_ifconv:66  store i64 %acc_V, i64* %acc_V_1, align 8

ST_25: stg_133 [1/1] 0.00ns
_ifconv:67  br label %.preheader.i


 <State 26>: 0.00ns
ST_26: stg_134 [1/1] 0.00ns
.loopexit.i:0  br label %0



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
