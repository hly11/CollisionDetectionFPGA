

================================================================
== Vivado HLS Report for 'image_filter_Resize_Test'
================================================================
* Date:           Thu Jun  4 17:29:28 2015

* Version:        2015.1 (Build 1215546 on Mon Apr 27 19:24:50 PM 2015)
* Project:        image_filter
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |   6.00|      6.47|        0.75|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |             |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1     |    ?|    ?|         ?|          -|          -|     ?|    no    |
        | + Loop 1.1  |    ?|    ?|        76|          1|          1|     ?|    yes   |
        +-------------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 76


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 128
* Pipeline: 1
  Pipeline-0: II = 1, D = 76, States = { 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / (!exitcond1)
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / true
81 --> 
	82  / true
82 --> 
	83  / true
83 --> 
	84  / true
84 --> 
	85  / true
85 --> 
	86  / true
86 --> 
	87  / true
87 --> 
	88  / true
88 --> 
	89  / true
89 --> 
	90  / true
90 --> 
	91  / true
91 --> 
	92  / true
92 --> 
	93  / true
93 --> 
	94  / true
94 --> 
	95  / true
95 --> 
	52  / (exitcond)
	96  / (!exitcond)
96 --> 
	97  / true
97 --> 
	98  / true
98 --> 
	99  / true
99 --> 
	100  / true
100 --> 
	101  / true
101 --> 
	102  / true
102 --> 
	103  / true
103 --> 
	104  / true
104 --> 
	105  / true
105 --> 
	106  / true
106 --> 
	107  / true
107 --> 
	108  / true
108 --> 
	109  / true
109 --> 
	110  / true
110 --> 
	111  / true
111 --> 
	112  / true
112 --> 
	113  / true
113 --> 
	114  / true
114 --> 
	115  / true
115 --> 
	116  / true
116 --> 
	117  / true
117 --> 
	118  / true
118 --> 
	119  / true
119 --> 
	120  / true
120 --> 
	121  / true
121 --> 
	122  / true
122 --> 
	123  / true
123 --> 
	124  / true
124 --> 
	125  / true
125 --> 
	126  / true
126 --> 
	127  / true
127 --> 
	128  / true
128 --> 
	53  / true
* FSM state operations: 

 <State 1>: 5.19ns
ST_1: row_wr [1/1] 0.00ns
LineBuffer.exit:0  %row_wr = alloca i1, align 1

ST_1: row_rd [1/1] 0.00ns
LineBuffer.exit:1  %row_rd = alloca i1, align 1

ST_1: pre_fx [1/1] 0.00ns
LineBuffer.exit:2  %pre_fx = alloca i16, align 2

ST_1: pre_fy [1/1] 0.00ns
LineBuffer.exit:3  %pre_fy = alloca i16, align 2

ST_1: x [1/1] 0.00ns
LineBuffer.exit:4  %x = alloca i16, align 2

ST_1: win_val_0_val_1_0 [1/1] 0.00ns
LineBuffer.exit:5  %win_val_0_val_1_0 = alloca float, align 4

ST_1: win_val_0_val_1_0_5 [1/1] 0.00ns
LineBuffer.exit:6  %win_val_0_val_1_0_5 = alloca float, align 4

ST_1: win_val_1_val_1_0 [1/1] 0.00ns
LineBuffer.exit:7  %win_val_1_val_1_0 = alloca float, align 4

ST_1: win_val_1_val_1_0_3 [1/1] 0.00ns
LineBuffer.exit:8  %win_val_1_val_1_0_3 = alloca float, align 4

ST_1: tmp_122 [1/1] 0.00ns
LineBuffer.exit:9  %tmp_122 = alloca float, align 4

ST_1: p_dst_cols_V_read_1 [1/1] 0.00ns
LineBuffer.exit:12  %p_dst_cols_V_read_1 = call i12 @_ssdm_op_Read.ap_auto.i12(i12 %p_dst_cols_V_read)

ST_1: p_dst_rows_V_read_1 [1/1] 0.00ns
LineBuffer.exit:13  %p_dst_rows_V_read_1 = call i12 @_ssdm_op_Read.ap_auto.i12(i12 %p_dst_rows_V_read)

ST_1: p_src_cols_V_read_1 [1/1] 0.00ns
LineBuffer.exit:14  %p_src_cols_V_read_1 = call i12 @_ssdm_op_Read.ap_auto.i12(i12 %p_src_cols_V_read)

ST_1: p_src_rows_V_read_1 [1/1] 0.00ns
LineBuffer.exit:15  %p_src_rows_V_read_1 = call i12 @_ssdm_op_Read.ap_auto.i12(i12 %p_src_rows_V_read)

ST_1: k_buf_val_val_0_0 [1/1] 0.00ns
LineBuffer.exit:16  %k_buf_val_val_0_0 = alloca [641 x float], align 4

ST_1: k_buf_val_val_1_0 [1/1] 0.00ns
LineBuffer.exit:17  %k_buf_val_val_1_0 = alloca [641 x float], align 4

ST_1: tmp_s [1/1] 0.00ns
LineBuffer.exit:22  %tmp_s = call i28 @_ssdm_op_BitConcatenate.i28.i12.i16(i12 %p_dst_rows_V_read_1, i16 0)

ST_1: tmp_2 [1/1] 0.00ns
LineBuffer.exit:23  %tmp_2 = call i44 @_ssdm_op_BitConcatenate.i44.i12.i32(i12 %p_src_rows_V_read_1, i32 0)

ST_1: tmp_20_cast [1/1] 0.00ns
LineBuffer.exit:24  %tmp_20_cast = zext i28 %tmp_s to i44

ST_1: tmp_3 [48/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_1: tmp_4 [1/1] 0.00ns
LineBuffer.exit:27  %tmp_4 = call i28 @_ssdm_op_BitConcatenate.i28.i12.i16(i12 %p_dst_cols_V_read_1, i16 0)

ST_1: tmp_5 [1/1] 0.00ns
LineBuffer.exit:28  %tmp_5 = call i44 @_ssdm_op_BitConcatenate.i44.i12.i32(i12 %p_src_cols_V_read_1, i32 0)

ST_1: tmp_27_cast [1/1] 0.00ns
LineBuffer.exit:29  %tmp_27_cast = zext i28 %tmp_4 to i44

ST_1: tmp_6 [48/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast

ST_1: stg_153 [1/1] 1.57ns
LineBuffer.exit:74  store i16 0, i16* %x, align 2

ST_1: stg_154 [1/1] 1.57ns
LineBuffer.exit:75  store i16 -10, i16* %pre_fy, align 2

ST_1: stg_155 [1/1] 1.57ns
LineBuffer.exit:76  store i16 -10, i16* %pre_fx, align 2

ST_1: stg_156 [1/1] 1.57ns
LineBuffer.exit:77  store i1 false, i1* %row_rd, align 1

ST_1: stg_157 [1/1] 1.57ns
LineBuffer.exit:78  store i1 false, i1* %row_wr, align 1


 <State 2>: 5.19ns
ST_2: tmp_3 [47/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_2: tmp_6 [47/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 3>: 5.19ns
ST_3: tmp_3 [46/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_3: tmp_6 [46/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 4>: 5.19ns
ST_4: tmp_3 [45/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_4: tmp_6 [45/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 5>: 5.19ns
ST_5: tmp_3 [44/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_5: tmp_6 [44/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 6>: 5.19ns
ST_6: tmp_3 [43/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_6: tmp_6 [43/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 7>: 5.19ns
ST_7: tmp_3 [42/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_7: tmp_6 [42/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 8>: 5.19ns
ST_8: tmp_3 [41/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_8: tmp_6 [41/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 9>: 5.19ns
ST_9: tmp_3 [40/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_9: tmp_6 [40/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 10>: 5.19ns
ST_10: tmp_3 [39/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_10: tmp_6 [39/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 11>: 5.19ns
ST_11: tmp_3 [38/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_11: tmp_6 [38/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 12>: 5.19ns
ST_12: tmp_3 [37/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_12: tmp_6 [37/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 13>: 5.19ns
ST_13: tmp_3 [36/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_13: tmp_6 [36/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 14>: 5.19ns
ST_14: tmp_3 [35/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_14: tmp_6 [35/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 15>: 5.19ns
ST_15: tmp_3 [34/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_15: tmp_6 [34/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 16>: 5.19ns
ST_16: tmp_3 [33/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_16: tmp_6 [33/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 17>: 5.19ns
ST_17: tmp_3 [32/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_17: tmp_6 [32/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 18>: 5.19ns
ST_18: tmp_3 [31/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_18: tmp_6 [31/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 19>: 5.19ns
ST_19: tmp_3 [30/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_19: tmp_6 [30/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 20>: 5.19ns
ST_20: tmp_3 [29/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_20: tmp_6 [29/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 21>: 5.19ns
ST_21: tmp_3 [28/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_21: tmp_6 [28/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 22>: 5.19ns
ST_22: tmp_3 [27/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_22: tmp_6 [27/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 23>: 5.19ns
ST_23: tmp_3 [26/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_23: tmp_6 [26/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 24>: 5.19ns
ST_24: tmp_3 [25/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_24: tmp_6 [25/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 25>: 5.19ns
ST_25: tmp_3 [24/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_25: tmp_6 [24/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 26>: 5.19ns
ST_26: tmp_3 [23/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_26: tmp_6 [23/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 27>: 5.19ns
ST_27: tmp_3 [22/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_27: tmp_6 [22/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 28>: 5.19ns
ST_28: tmp_3 [21/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_28: tmp_6 [21/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 29>: 5.19ns
ST_29: tmp_3 [20/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_29: tmp_6 [20/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 30>: 5.19ns
ST_30: tmp_3 [19/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_30: tmp_6 [19/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 31>: 5.19ns
ST_31: tmp_3 [18/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_31: tmp_6 [18/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 32>: 5.19ns
ST_32: tmp_3 [17/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_32: tmp_6 [17/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 33>: 5.19ns
ST_33: tmp_3 [16/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_33: tmp_6 [16/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 34>: 5.19ns
ST_34: tmp_3 [15/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_34: tmp_6 [15/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 35>: 5.19ns
ST_35: tmp_3 [14/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_35: tmp_6 [14/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 36>: 5.19ns
ST_36: tmp_3 [13/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_36: tmp_6 [13/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 37>: 5.19ns
ST_37: tmp_3 [12/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_37: tmp_6 [12/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 38>: 5.19ns
ST_38: tmp_3 [11/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_38: tmp_6 [11/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 39>: 5.19ns
ST_39: tmp_3 [10/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_39: tmp_6 [10/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 40>: 5.19ns
ST_40: tmp_3 [9/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_40: tmp_6 [9/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 41>: 5.19ns
ST_41: tmp_3 [8/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_41: tmp_6 [8/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 42>: 5.19ns
ST_42: tmp_3 [7/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_42: tmp_6 [7/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 43>: 5.19ns
ST_43: tmp_3 [6/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_43: tmp_6 [6/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 44>: 5.19ns
ST_44: tmp_3 [5/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_44: tmp_6 [5/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 45>: 5.19ns
ST_45: tmp_3 [4/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_45: tmp_6 [4/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 46>: 5.19ns
ST_46: tmp_3 [3/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_46: tmp_6 [3/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 47>: 5.19ns
ST_47: tmp_3 [2/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_47: tmp_6 [2/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast


 <State 48>: 5.19ns
ST_48: tmp_3 [1/48] 5.19ns
LineBuffer.exit:25  %tmp_3 = udiv i44 %tmp_2, %tmp_20_cast

ST_48: row_rate_V [1/1] 0.00ns
LineBuffer.exit:26  %row_rate_V = trunc i44 %tmp_3 to i32

ST_48: tmp_6 [1/48] 5.19ns
LineBuffer.exit:30  %tmp_6 = udiv i44 %tmp_5, %tmp_27_cast

ST_48: col_rate_V [1/1] 0.00ns
LineBuffer.exit:31  %col_rate_V = trunc i44 %tmp_6 to i32

ST_48: tmp [1/1] 0.00ns
LineBuffer.exit:32  %tmp = call i1 @_ssdm_op_BitSelect.i1.i44.i32(i44 %tmp_3, i32 31)

ST_48: p_lshr_f1 [1/1] 0.00ns
LineBuffer.exit:37  %p_lshr_f1 = call i31 @_ssdm_op_PartSelect.i31.i44.i32.i32(i44 %tmp_3, i32 1, i32 31)

ST_48: tmp_58 [1/1] 0.00ns
LineBuffer.exit:46  %tmp_58 = call i1 @_ssdm_op_BitSelect.i1.i44.i32(i44 %tmp_6, i32 31)

ST_48: p_lshr_f [1/1] 0.00ns
LineBuffer.exit:51  %p_lshr_f = call i31 @_ssdm_op_PartSelect.i31.i44.i32.i32(i44 %tmp_6, i32 1, i32 31)


 <State 49>: 4.88ns
ST_49: p_neg1 [1/1] 2.44ns
LineBuffer.exit:33  %p_neg1 = sub i32 0, %row_rate_V

ST_49: p_lshr1 [1/1] 0.00ns
LineBuffer.exit:34  %p_lshr1 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %p_neg1, i32 1, i32 31)

ST_49: tmp_11 [1/1] 0.00ns
LineBuffer.exit:35  %tmp_11 = zext i31 %p_lshr1 to i32

ST_49: p_neg_t1 [1/1] 2.44ns
LineBuffer.exit:36  %p_neg_t1 = sub i32 0, %tmp_11

ST_49: p_neg [1/1] 2.44ns
LineBuffer.exit:47  %p_neg = sub i32 0, %col_rate_V

ST_49: p_lshr [1/1] 0.00ns
LineBuffer.exit:48  %p_lshr = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %p_neg, i32 1, i32 31)

ST_49: tmp_36 [1/1] 0.00ns
LineBuffer.exit:49  %tmp_36 = zext i31 %p_lshr to i32

ST_49: p_neg_t [1/1] 2.44ns
LineBuffer.exit:50  %p_neg_t = sub i32 0, %tmp_36


 <State 50>: 3.81ns
ST_50: tmp_14 [1/1] 0.00ns
LineBuffer.exit:38  %tmp_14 = zext i31 %p_lshr_f1 to i32

ST_50: tmp_7 [1/1] 1.37ns
LineBuffer.exit:39  %tmp_7 = select i1 %tmp, i32 %p_neg_t1, i32 %tmp_14

ST_50: tmp_31_cast [1/1] 0.00ns
LineBuffer.exit:40  %tmp_31_cast = sext i32 %tmp_7 to i33

ST_50: p_Val2_1 [1/1] 2.44ns
LineBuffer.exit:41  %p_Val2_1 = add i33 -32768, %tmp_31_cast

ST_50: p_Val2_2 [1/1] 0.00ns
LineBuffer.exit:42  %p_Val2_2 = call i20 @_ssdm_op_PartSelect.i20.i33.i32.i32(i33 %p_Val2_1, i32 6, i32 25)

ST_50: tmp_50 [1/1] 0.00ns
LineBuffer.exit:43  %tmp_50 = call i1 @_ssdm_op_BitSelect.i1.i33.i32(i33 %p_Val2_1, i32 5)

ST_50: tmp_41 [1/1] 0.00ns
LineBuffer.exit:52  %tmp_41 = zext i31 %p_lshr_f to i32

ST_50: tmp_1 [1/1] 1.37ns
LineBuffer.exit:53  %tmp_1 = select i1 %tmp_58, i32 %p_neg_t, i32 %tmp_41

ST_50: tmp_37_cast [1/1] 0.00ns
LineBuffer.exit:54  %tmp_37_cast = sext i32 %tmp_1 to i33

ST_50: p_Val2_5 [1/1] 2.44ns
LineBuffer.exit:55  %p_Val2_5 = add i33 -32768, %tmp_37_cast

ST_50: p_Val2_6 [1/1] 0.00ns
LineBuffer.exit:56  %p_Val2_6 = call i20 @_ssdm_op_PartSelect.i20.i33.i32.i32(i33 %p_Val2_5, i32 6, i32 25)

ST_50: tmp_74 [1/1] 0.00ns
LineBuffer.exit:57  %tmp_74 = call i1 @_ssdm_op_BitSelect.i1.i33.i32(i33 %p_Val2_5, i32 5)


 <State 51>: 2.52ns
ST_51: stg_278 [1/1] 0.00ns
LineBuffer.exit:10  call void (...)* @_ssdm_op_SpecInterface(float* %p_dst_data_stream_V, [8 x i8]* @str56, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str57, [1 x i8]* @str57, [8 x i8]* @str56)

ST_51: stg_279 [1/1] 0.00ns
LineBuffer.exit:11  call void (...)* @_ssdm_op_SpecInterface(float* %p_src_data_stream_V, [8 x i8]* @str52, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str53, [1 x i8]* @str53, [8 x i8]* @str52)

ST_51: rbegin_i [1/1] 0.00ns
LineBuffer.exit:18  %rbegin_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([71 x i8]* @p_str1) nounwind

ST_51: rend_i [1/1] 0.00ns
LineBuffer.exit:19  %rend_i = call i32 (...)* @_ssdm_op_SpecRegionEnd([71 x i8]* @p_str1, i32 %rbegin_i) nounwind

ST_51: srows_cast [1/1] 0.00ns
LineBuffer.exit:20  %srows_cast = zext i12 %p_src_rows_V_read_1 to i13

ST_51: scols_cast [1/1] 0.00ns
LineBuffer.exit:21  %scols_cast = zext i12 %p_src_cols_V_read_1 to i13

ST_51: tmp_9 [1/1] 0.00ns
LineBuffer.exit:44  %tmp_9 = zext i1 %tmp_50 to i20

ST_51: p_Val2_13 [1/1] 2.08ns
LineBuffer.exit:45  %p_Val2_13 = add i20 %p_Val2_2, %tmp_9

ST_51: tmp_8 [1/1] 0.00ns
LineBuffer.exit:58  %tmp_8 = zext i1 %tmp_74 to i20

ST_51: p_Val2_14 [1/1] 2.08ns
LineBuffer.exit:59  %p_Val2_14 = add i20 %p_Val2_6, %tmp_8

ST_51: sx [1/1] 1.84ns
LineBuffer.exit:60  %sx = add i13 -1, %scols_cast

ST_51: tmp_41_cast [1/1] 0.00ns
LineBuffer.exit:61  %tmp_41_cast = sext i13 %sx to i16

ST_51: sy [1/1] 1.84ns
LineBuffer.exit:62  %sy = add i13 -1, %srows_cast

ST_51: tmp_42_cast [1/1] 0.00ns
LineBuffer.exit:63  %tmp_42_cast = sext i13 %sy to i16

ST_51: tmp_10 [1/1] 0.00ns
LineBuffer.exit:64  %tmp_10 = zext i12 %p_dst_cols_V_read_1 to i13

ST_51: tmp_12 [1/1] 1.84ns
LineBuffer.exit:65  %tmp_12 = add i13 1, %tmp_10

ST_51: tmp_13 [1/1] 0.00ns
LineBuffer.exit:66  %tmp_13 = zext i12 %p_dst_rows_V_read_1 to i13

ST_51: tmp_15 [1/1] 1.84ns
LineBuffer.exit:67  %tmp_15 = add i13 1, %tmp_13

ST_51: tmp_16 [1/1] 2.52ns
LineBuffer.exit:68  %tmp_16 = icmp sgt i32 %row_rate_V, 65536

ST_51: tmp_17 [1/1] 2.52ns
LineBuffer.exit:69  %tmp_17 = icmp sgt i32 %col_rate_V, 65536

ST_51: tmp_21 [1/1] 0.00ns
LineBuffer.exit:70  %tmp_21 = call i26 @_ssdm_op_BitConcatenate.i26.i20.i6(i20 %p_Val2_13, i6 0)

ST_51: tmp_60_cast [1/1] 0.00ns
LineBuffer.exit:71  %tmp_60_cast = sext i26 %tmp_21 to i32

ST_51: tmp_24 [1/1] 0.00ns
LineBuffer.exit:72  %tmp_24 = call i26 @_ssdm_op_BitConcatenate.i26.i20.i6(i20 %p_Val2_14, i6 0)

ST_51: tmp_62_cast [1/1] 0.00ns
LineBuffer.exit:73  %tmp_62_cast = sext i26 %tmp_24 to i32

ST_51: stg_302 [1/1] 1.57ns
LineBuffer.exit:79  br label %.loopexit25


 <State 52>: 3.55ns
ST_52: p_Val2_9 [1/1] 0.00ns
.loopexit25:0  %p_Val2_9 = phi i13 [ 0, %LineBuffer.exit ], [ %i, %.preheader746 ]

ST_52: exitcond1 [1/1] 2.18ns
.loopexit25:1  %exitcond1 = icmp eq i13 %p_Val2_9, %tmp_15

ST_52: i [1/1] 1.96ns
.loopexit25:2  %i = add i13 %p_Val2_9, 1

ST_52: stg_306 [1/1] 0.00ns
.loopexit25:3  br i1 %exitcond1, label %6, label %.preheader746.preheader

ST_52: tmp_18 [1/1] 1.96ns
.preheader746.preheader:0  %tmp_18 = add i13 %p_Val2_9, -1

ST_52: tmp_45_cast [1/1] 0.00ns
.preheader746.preheader:1  %tmp_45_cast = sext i13 %tmp_18 to i16

ST_52: tmp_19 [1/1] 2.18ns
.preheader746.preheader:2  %tmp_19 = icmp eq i13 %p_Val2_9, 0

ST_52: row_wr_2 [1/1] 2.18ns
.preheader746.preheader:3  %row_wr_2 = icmp ne i13 %p_Val2_9, 0

ST_52: tmp_22 [1/1] 0.00ns
.preheader746.preheader:4  %tmp_22 = call i29 @_ssdm_op_BitConcatenate.i29.i13.i16(i13 %p_Val2_9, i16 0)

ST_52: tmp_51_cast [1/1] 0.00ns
.preheader746.preheader:5  %tmp_51_cast = zext i29 %tmp_22 to i32

ST_52: stg_313 [1/1] 1.57ns
.preheader746.preheader:6  br label %.preheader746

ST_52: stg_314 [1/1] 0.00ns
:0  ret void


 <State 53>: 4.62ns
ST_53: p_Val2_12 [1/1] 0.00ns
.preheader746:0  %p_Val2_12 = phi i13 [ 0, %.preheader746.preheader ], [ %j, %._crit_edge758 ]

ST_53: exitcond [1/1] 2.18ns
.preheader746:2  %exitcond = icmp eq i13 %p_Val2_12, %tmp_12

ST_53: j [1/1] 1.96ns
.preheader746:3  %j = add i13 %p_Val2_12, 1

ST_53: tmp_20 [1/1] 0.00ns
:0  %tmp_20 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str1805)

ST_53: stg_319 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1806) nounwind

ST_53: stg_320 [1/1] 1.57ns
:2  br i1 %tmp_16, label %_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit, label %._crit_edge

ST_53: tmp_23 [33/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_53: tmp_25 [1/1] 0.00ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:0  %tmp_25 = call i29 @_ssdm_op_BitConcatenate.i29.i13.i16(i13 %p_Val2_12, i16 0)

ST_53: tmp_55_cast [1/1] 0.00ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:1  %tmp_55_cast = zext i29 %tmp_25 to i32

ST_53: tmp_26 [33/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 54>: 4.62ns
ST_54: tmp_23 [32/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_54: tmp_26 [32/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 55>: 4.62ns
ST_55: tmp_23 [31/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_55: tmp_26 [31/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 56>: 4.62ns
ST_56: tmp_23 [30/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_56: tmp_26 [30/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 57>: 4.62ns
ST_57: tmp_23 [29/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_57: tmp_26 [29/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 58>: 4.62ns
ST_58: tmp_23 [28/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_58: tmp_26 [28/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 59>: 4.62ns
ST_59: tmp_23 [27/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_59: tmp_26 [27/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 60>: 4.62ns
ST_60: tmp_23 [26/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_60: tmp_26 [26/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 61>: 4.62ns
ST_61: tmp_23 [25/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_61: tmp_26 [25/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 62>: 4.62ns
ST_62: tmp_23 [24/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_62: tmp_26 [24/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 63>: 4.62ns
ST_63: tmp_23 [23/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_63: tmp_26 [23/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 64>: 4.62ns
ST_64: tmp_23 [22/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_64: tmp_26 [22/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 65>: 4.62ns
ST_65: tmp_23 [21/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_65: tmp_26 [21/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 66>: 4.62ns
ST_66: tmp_23 [20/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_66: tmp_26 [20/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 67>: 4.62ns
ST_67: tmp_23 [19/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_67: tmp_26 [19/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 68>: 4.62ns
ST_68: tmp_23 [18/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_68: tmp_26 [18/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 69>: 4.62ns
ST_69: tmp_23 [17/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_69: tmp_26 [17/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 70>: 4.62ns
ST_70: tmp_23 [16/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_70: tmp_26 [16/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 71>: 4.62ns
ST_71: tmp_23 [15/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_71: tmp_26 [15/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 72>: 4.62ns
ST_72: tmp_23 [14/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_72: tmp_26 [14/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 73>: 4.62ns
ST_73: tmp_23 [13/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_73: tmp_26 [13/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 74>: 4.62ns
ST_74: tmp_23 [12/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_74: tmp_26 [12/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 75>: 4.62ns
ST_75: tmp_23 [11/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_75: tmp_26 [11/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 76>: 4.62ns
ST_76: tmp_23 [10/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_76: tmp_26 [10/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 77>: 4.62ns
ST_77: tmp_23 [9/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_77: tmp_26 [9/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 78>: 4.62ns
ST_78: tmp_23 [8/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_78: tmp_26 [8/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 79>: 4.62ns
ST_79: tmp_23 [7/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_79: tmp_26 [7/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 80>: 4.62ns
ST_80: tmp_23 [6/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_80: tmp_26 [6/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 81>: 4.62ns
ST_81: tmp_23 [5/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_81: tmp_26 [5/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 82>: 4.62ns
ST_82: tmp_23 [4/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_82: tmp_26 [4/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 83>: 4.62ns
ST_83: tmp_23 [3/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_83: tmp_26 [3/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 84>: 4.62ns
ST_84: tmp_23 [2/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_84: tmp_26 [2/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V


 <State 85>: 4.62ns
ST_85: stg_387 [1/1] 0.00ns
.preheader746:4  br i1 %exitcond, label %.loopexit25, label %0

ST_85: tmp_23 [1/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:0  %tmp_23 = udiv i32 %tmp_51_cast, %row_rate_V

ST_85: tmp_90 [1/1] 0.00ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:1  %tmp_90 = trunc i32 %tmp_23 to i13

ST_85: tmp_27 [1/1] 1.96ns
:0  %tmp_27 = add i13 %p_Val2_12, -1

ST_85: stg_391 [1/1] 1.57ns
:1  br label %_ifconv

ST_85: tmp_26 [1/33] 4.62ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:2  %tmp_26 = udiv i32 %tmp_55_cast, %col_rate_V

ST_85: tmp_100 [1/1] 0.00ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:3  %tmp_100 = trunc i32 %tmp_26 to i13

ST_85: tmp_43 [1/1] 2.18ns
_ifconv:50  %tmp_43 = icmp eq i13 %p_Val2_12, 0

ST_85: tmp_44 [1/1] 1.96ns
_ifconv:64  %tmp_44 = add i13 -1, %p_Val2_12

ST_85: col_wr_1 [1/1] 2.18ns
_ifconv:69  %col_wr_1 = icmp ne i13 %p_Val2_12, 0


 <State 86>: 3.72ns
ST_86: stg_397 [1/1] 1.57ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit:2  br label %._crit_edge

ST_86: dy [1/1] 0.00ns
._crit_edge:0  %dy = phi i13 [ %tmp_90, %_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit ], [ %tmp_18, %0 ]

ST_86: stg_399 [1/1] 0.00ns
._crit_edge:1  br i1 %tmp_17, label %_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21, label %1

ST_86: stg_400 [1/1] 1.57ns
_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21:4  br label %_ifconv

ST_86: dx [1/1] 0.00ns
_ifconv:0  %dx = phi i13 [ %tmp_100, %_ZNK13ap_fixed_baseILi33ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvsEv.exit21 ], [ %tmp_27, %1 ]

ST_86: OP1_V [1/1] 0.00ns
_ifconv:6  %OP1_V = sext i13 %dy to i32

ST_86: p_Val2_s [5/5] 2.15ns
_ifconv:7  %p_Val2_s = mul i32 %row_rate_V, %OP1_V

ST_86: OP1_V_1 [1/1] 0.00ns
_ifconv:9  %OP1_V_1 = sext i13 %dx to i32

ST_86: p_Val2_10 [5/5] 2.15ns
_ifconv:10  %p_Val2_10 = mul i32 %col_rate_V, %OP1_V_1


 <State 87>: 2.15ns
ST_87: p_Val2_s [4/5] 2.15ns
_ifconv:7  %p_Val2_s = mul i32 %row_rate_V, %OP1_V

ST_87: p_Val2_10 [4/5] 2.15ns
_ifconv:10  %p_Val2_10 = mul i32 %col_rate_V, %OP1_V_1


 <State 88>: 2.15ns
ST_88: p_Val2_s [3/5] 2.15ns
_ifconv:7  %p_Val2_s = mul i32 %row_rate_V, %OP1_V

ST_88: p_Val2_10 [3/5] 2.15ns
_ifconv:10  %p_Val2_10 = mul i32 %col_rate_V, %OP1_V_1


 <State 89>: 2.15ns
ST_89: p_Val2_s [2/5] 2.15ns
_ifconv:7  %p_Val2_s = mul i32 %row_rate_V, %OP1_V

ST_89: p_Val2_10 [2/5] 2.15ns
_ifconv:10  %p_Val2_10 = mul i32 %col_rate_V, %OP1_V_1


 <State 90>: 4.59ns
ST_90: p_Val2_s [1/5] 2.15ns
_ifconv:7  %p_Val2_s = mul i32 %row_rate_V, %OP1_V

ST_90: p_Val2_7 [1/1] 2.44ns
_ifconv:8  %p_Val2_7 = add i32 %p_Val2_s, %tmp_60_cast

ST_90: p_Val2_10 [1/5] 2.15ns
_ifconv:10  %p_Val2_10 = mul i32 %col_rate_V, %OP1_V_1

ST_90: p_Val2_11 [1/1] 2.44ns
_ifconv:11  %p_Val2_11 = add i32 %p_Val2_10, %tmp_62_cast

ST_90: ret_V [1/1] 0.00ns
_ifconv:12  %ret_V = call i16 @_ssdm_op_PartSelect.i16.i32.i32.i32(i32 %p_Val2_11, i32 16, i32 31)

ST_90: tmp_108 [1/1] 0.00ns
_ifconv:13  %tmp_108 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %p_Val2_11, i32 31)

ST_90: tmp_116 [1/1] 0.00ns
_ifconv:14  %tmp_116 = trunc i32 %p_Val2_11 to i16

ST_90: ret_V_2 [1/1] 0.00ns
_ifconv:19  %ret_V_2 = call i16 @_ssdm_op_PartSelect.i16.i32.i32.i32(i32 %p_Val2_7, i32 16, i32 31)

ST_90: tmp_117 [1/1] 0.00ns
_ifconv:20  %tmp_117 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %p_Val2_7, i32 31)

ST_90: tmp_118 [1/1] 0.00ns
_ifconv:21  %tmp_118 = trunc i32 %p_Val2_7 to i16


 <State 91>: 5.02ns
ST_91: tmp_28 [1/1] 2.28ns
_ifconv:15  %tmp_28 = icmp eq i16 %tmp_116, 0

ST_91: ret_V_1 [1/1] 1.96ns
_ifconv:16  %ret_V_1 = add i16 1, %ret_V

ST_91: p_6 [1/1] 1.37ns
_ifconv:17  %p_6 = select i1 %tmp_28, i16 %ret_V, i16 %ret_V_1

ST_91: sx_2 [1/1] 1.37ns
_ifconv:18  %sx_2 = select i1 %tmp_108, i16 %p_6, i16 %ret_V

ST_91: tmp_29 [1/1] 2.28ns
_ifconv:22  %tmp_29 = icmp eq i16 %tmp_118, 0

ST_91: ret_V_3 [1/1] 1.96ns
_ifconv:23  %ret_V_3 = add i16 1, %ret_V_2

ST_91: p_7 [1/1] 1.37ns
_ifconv:24  %p_7 = select i1 %tmp_29, i16 %ret_V_2, i16 %ret_V_3

ST_91: sy_3 [1/1] 1.37ns
_ifconv:25  %sy_3 = select i1 %tmp_117, i16 %p_7, i16 %ret_V_2


 <State 92>: 4.96ns
ST_92: tmp_30 [1/1] 0.00ns
_ifconv:26  %tmp_30 = sext i32 %p_Val2_11 to i33

ST_92: tmp_31 [1/1] 0.00ns
_ifconv:27  %tmp_31 = call i32 @_ssdm_op_BitConcatenate.i32.i16.i16(i16 %sx_2, i16 0)

ST_92: tmp_67_cast [1/1] 0.00ns
_ifconv:28  %tmp_67_cast = sext i32 %tmp_31 to i33

ST_92: r_V_6 [1/1] 2.44ns
_ifconv:29  %r_V_6 = sub nsw i33 %tmp_30, %tmp_67_cast

ST_92: tmp_32 [1/1] 2.52ns
_ifconv:30  %tmp_32 = icmp sgt i33 %r_V_6, 0

ST_92: tmp_119 [1/1] 0.00ns
_ifconv:31  %tmp_119 = trunc i33 %r_V_6 to i18

ST_92: tmp_35 [1/1] 0.00ns
_ifconv:34  %tmp_35 = sext i32 %p_Val2_7 to i33

ST_92: tmp_37 [1/1] 0.00ns
_ifconv:35  %tmp_37 = call i32 @_ssdm_op_BitConcatenate.i32.i16.i16(i16 %sy_3, i16 0)

ST_92: tmp_73_cast [1/1] 0.00ns
_ifconv:36  %tmp_73_cast = sext i32 %tmp_37 to i33

ST_92: r_V_7 [1/1] 2.44ns
_ifconv:37  %r_V_7 = sub nsw i33 %tmp_35, %tmp_73_cast

ST_92: tmp_38 [1/1] 2.52ns
_ifconv:38  %tmp_38 = icmp sgt i33 %r_V_7, 0

ST_92: tmp_120 [1/1] 0.00ns
_ifconv:39  %tmp_120 = trunc i33 %r_V_7 to i18

ST_92: tmp_40 [1/1] 2.28ns
_ifconv:44  %tmp_40 = icmp sgt i16 %sx_2, %tmp_41_cast

ST_92: pre_fx_1 [1/1] 1.37ns
_ifconv:46  %pre_fx_1 = select i1 %tmp_40, i16 %tmp_41_cast, i16 %sx_2

ST_92: tmp_42 [1/1] 2.28ns
_ifconv:47  %tmp_42 = icmp sgt i16 %sy_3, %tmp_42_cast

ST_92: sy_4 [1/1] 1.37ns
_ifconv:49  %sy_4 = select i1 %tmp_42, i16 %tmp_42_cast, i16 %sy_3

ST_92: sel_tmp5 [1/1] 1.37ns
_ifconv:55  %sel_tmp5 = and i1 %tmp_43, %tmp_16


 <State 93>: 5.68ns
ST_93: pre_fx_load [1/1] 0.00ns
_ifconv:3  %pre_fx_load = load i16* %pre_fx, align 2

ST_93: pre_fy_load [1/1] 0.00ns
_ifconv:4  %pre_fy_load = load i16* %pre_fy, align 2

ST_93: row_wr_1 [1/1] 2.28ns
_ifconv:51  %row_wr_1 = icmp eq i16 %sy_4, %tmp_45_cast

ST_93: not_1 [1/1] 2.28ns
_ifconv:52  %not_1 = icmp ne i16 %sy_4, %pre_fy_load

ST_93: pre_fy_1_sy [1/1] 1.37ns
_ifconv:53  %pre_fy_1_sy = select i1 %tmp_19, i16 %pre_fy_load, i16 %sy_4

ST_93: sel_tmp6 [1/1] 1.37ns
_ifconv:56  %sel_tmp6 = select i1 %sel_tmp5, i16 %pre_fy_load, i16 %pre_fy_1_sy

ST_93: pre_fy_5 [1/1] 1.37ns
_ifconv:57  %pre_fy_5 = select i1 %tmp_43, i16 %sel_tmp6, i16 %pre_fy_load

ST_93: pre_fx_2 [1/1] 1.37ns
_ifconv:58  %pre_fx_2 = select i1 %tmp_43, i16 -10, i16 %pre_fx_load

ST_93: tmp4 [1/1] 1.37ns
_ifconv:59  %tmp4 = or i1 %not_1, %sel_tmp5

ST_93: sel_tmp [1/1] 1.37ns
_ifconv:60  %sel_tmp = or i1 %tmp4, %tmp_19

ST_93: row_wr_4 [1/1] 1.37ns
_ifconv:62  %row_wr_4 = select i1 %sel_tmp5, i1 %row_wr_1, i1 %row_wr_2

ST_93: tmp_84_cast [1/1] 0.00ns
_ifconv:65  %tmp_84_cast = sext i13 %tmp_44 to i16

ST_93: col_wr [1/1] 2.28ns
_ifconv:66  %col_wr = icmp eq i16 %pre_fx_1, %tmp_84_cast

ST_93: not_s [1/1] 2.28ns
_ifconv:67  %not_s = icmp ne i16 %pre_fx_1, %pre_fx_2

ST_93: pre_fx_2_sx [1/1] 1.37ns
_ifconv:68  %pre_fx_2_sx = select i1 %tmp_43, i16 -10, i16 %pre_fx_1

ST_93: pre_fx_5 [1/1] 1.37ns
_ifconv:70  %pre_fx_5 = select i1 %tmp_17, i16 %pre_fx_2, i16 %pre_fx_2_sx

ST_93: tmp5 [1/1] 1.37ns
_ifconv:71  %tmp5 = or i1 %not_s, %tmp_17

ST_93: col_wr_2 [1/1] 1.37ns
_ifconv:73  %col_wr_2 = select i1 %tmp_17, i1 %col_wr, i1 %col_wr_1

ST_93: stg_465 [1/1] 1.57ns
._crit_edge758:1  store i16 %pre_fy_5, i16* %pre_fy, align 2

ST_93: stg_466 [1/1] 1.57ns
._crit_edge758:2  store i16 %pre_fx_5, i16* %pre_fx, align 2


 <State 94>: 6.47ns
ST_94: row_wr_load [1/1] 0.00ns
_ifconv:1  %row_wr_load = load i1* %row_wr, align 1

ST_94: row_rd_load [1/1] 0.00ns
_ifconv:2  %row_rd_load = load i1* %row_rd, align 1

ST_94: x_load [1/1] 0.00ns
_ifconv:5  %x_load = load i16* %x, align 2

ST_94: x_1 [1/1] 1.37ns
_ifconv:54  %x_1 = select i1 %tmp_43, i16 0, i16 %x_load

ST_94: row_rd_5 [1/1] 1.37ns
_ifconv:61  %row_rd_5 = select i1 %tmp_43, i1 %sel_tmp, i1 %row_rd_load

ST_94: row_wr_3 [1/1] 1.37ns
_ifconv:63  %row_wr_3 = select i1 %tmp_43, i1 %row_wr_4, i1 %row_wr_load

ST_94: col_rd_2 [1/1] 1.37ns
_ifconv:72  %col_rd_2 = or i1 %tmp5, %tmp_43

ST_94: stg_474 [1/1] 1.57ns
_ifconv:74  br i1 %col_rd_2, label %.preheader745.0, label %._crit_edge752

ST_94: tmp_45 [1/1] 0.00ns
.preheader745.0:0  %tmp_45 = sext i16 %x_1 to i64

ST_94: stg_476 [1/1] 0.00ns
.preheader745.0:1  br i1 %row_rd_5, label %2, label %.preheader744.preheader

ST_94: k_buf_val_val_0_0_addr_1 [1/1] 0.00ns
.preheader744.preheader:0  %k_buf_val_val_0_0_addr_1 = getelementptr [641 x float]* %k_buf_val_val_0_0, i64 0, i64 %tmp_45

ST_94: win_val_0_val_0_0 [2/2] 2.71ns
.preheader744.preheader:1  %win_val_0_val_0_0 = load float* %k_buf_val_val_0_0_addr_1, align 4

ST_94: k_buf_val_val_1_0_addr_1 [1/1] 0.00ns
.preheader744.preheader:2  %k_buf_val_val_1_0_addr_1 = getelementptr [641 x float]* %k_buf_val_val_1_0, i64 0, i64 %tmp_45

ST_94: win_val_1_val_0_0_1 [2/2] 2.71ns
.preheader744.preheader:3  %win_val_1_val_0_0_1 = load float* %k_buf_val_val_1_0_addr_1, align 4

ST_94: k_buf_val_val_0_0_addr [1/1] 0.00ns
:1  %k_buf_val_val_0_0_addr = getelementptr [641 x float]* %k_buf_val_val_0_0, i64 0, i64 %tmp_45

ST_94: win_val_1_val_0_0 [2/2] 2.71ns
:2  %win_val_1_val_0_0 = load float* %k_buf_val_val_0_0_addr, align 4

ST_94: tmp_46 [1/1] 2.28ns
:4  %tmp_46 = icmp slt i16 %sy_4, %tmp_42_cast

ST_94: tmp_47 [1/1] 2.28ns
:5  %tmp_47 = icmp slt i16 %pre_fx_1, %tmp_41_cast

ST_94: or_cond_41 [1/1] 1.37ns
:6  %or_cond_41 = and i1 %tmp_46, %tmp_47

ST_94: stg_486 [1/1] 0.00ns
:7  br i1 %or_cond_41, label %3, label %._crit_edge753

ST_94: stg_487 [1/1] 0.00ns
._crit_edge753:0  br i1 %tmp_47, label %._crit_edge755, label %4

ST_94: stg_488 [1/1] 0.00ns
:0  br i1 %tmp_46, label %5, label %.critedge

ST_94: x_2 [1/1] 1.96ns
.loopexit:2  %x_2 = add i16 %x_1, 1

ST_94: stg_490 [1/1] 1.57ns
.loopexit:6  br label %._crit_edge752

ST_94: storemerge [1/1] 0.00ns
._crit_edge752:0  %storemerge = phi i16 [ %x_2, %.loopexit ], [ %x_1, %_ifconv ]

ST_94: stg_492 [1/1] 1.57ns
._crit_edge752:1  store i16 %storemerge, i16* %x, align 2

ST_94: brmerge_demorgan [1/1] 1.37ns
._crit_edge752:2  %brmerge_demorgan = and i1 %row_wr_3, %col_wr_2

ST_94: stg_494 [1/1] 0.00ns
._crit_edge752:3  br i1 %brmerge_demorgan, label %.preheader.preheader_ifconv, label %._crit_edge758

ST_94: empty_44 [1/1] 0.00ns
._crit_edge758:0  %empty_44 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str1805, i32 %tmp_20)

ST_94: stg_496 [1/1] 1.57ns
._crit_edge758:3  store i1 %row_rd_5, i1* %row_rd, align 1

ST_94: stg_497 [1/1] 1.57ns
._crit_edge758:4  store i1 %row_wr_3, i1* %row_wr, align 1

ST_94: stg_498 [1/1] 0.00ns
._crit_edge758:5  br label %.preheader746


 <State 95>: 4.28ns
ST_95: win_val_0_val_1_0_1 [1/1] 0.00ns
.preheader746:1  %win_val_0_val_1_0_1 = load float* %win_val_0_val_1_0, align 4

ST_95: win_val_0_val_0_0 [1/2] 2.71ns
.preheader744.preheader:1  %win_val_0_val_0_0 = load float* %k_buf_val_val_0_0_addr_1, align 4

ST_95: win_val_1_val_0_0_1 [1/2] 2.71ns
.preheader744.preheader:3  %win_val_1_val_0_0_1 = load float* %k_buf_val_val_1_0_addr_1, align 4

ST_95: stg_502 [1/1] 1.57ns
.preheader744.preheader:4  store float %win_val_0_val_0_0, float* %win_val_0_val_1_0, align 4

ST_95: stg_503 [1/1] 1.57ns
.preheader744.preheader:5  br label %.loopexit

ST_95: win_val_1_val_0_0 [1/2] 2.71ns
:2  %win_val_1_val_0_0 = load float* %k_buf_val_val_0_0_addr, align 4

ST_95: stg_505 [1/1] 1.57ns
:2  br label %.loopexit

ST_95: stg_506 [1/1] 1.57ns
._crit_edge755:0  br i1 %tmp_46, label %.loopexit, label %.critedge

ST_95: stg_507 [1/1] 1.57ns
.critedge:0  store float %win_val_1_val_0_0, float* %win_val_0_val_1_0, align 4

ST_95: stg_508 [1/1] 1.57ns
.critedge:1  br label %.loopexit

ST_95: tmp_34 [1/1] 0.00ns
:0  %tmp_34 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str1843)

ST_95: stg_510 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecProtocol(i32 0, [1 x i8]* @p_str1806) nounwind

ST_95: tmp_146 [1/1] 2.62ns
:2  %tmp_146 = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %p_src_data_stream_V)

ST_95: empty [1/1] 0.00ns
:3  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str1843, i32 %tmp_34)

ST_95: stg_513 [1/1] 0.00ns
:5  store float %tmp_146, float* %tmp_122, align 4

ST_95: stg_514 [1/1] 1.57ns
:6  store float %tmp_146, float* %win_val_0_val_1_0, align 4

ST_95: stg_515 [1/1] 1.57ns
:7  br label %.loopexit

ST_95: win_val_1_val_1_0_2 [1/1] 0.00ns
.loopexit:0  %win_val_1_val_1_0_2 = phi float [ %win_val_1_val_0_0_1, %.preheader744.preheader ], [ %win_val_1_val_0_0, %3 ], [ %win_val_1_val_0_0, %._crit_edge755 ], [ %win_val_1_val_0_0, %.critedge ], [ %win_val_1_val_0_0, %5 ]

ST_95: win_val_1_val_1_0_1 [1/1] 0.00ns
.loopexit:1  %win_val_1_val_1_0_1 = load float* %win_val_1_val_1_0, align 4

ST_95: stg_518 [1/1] 0.00ns
.loopexit:3  store float %win_val_1_val_1_0_1, float* %win_val_1_val_1_0_3, align 4

ST_95: stg_519 [1/1] 0.00ns
.loopexit:4  store float %win_val_1_val_1_0_2, float* %win_val_1_val_1_0, align 4

ST_95: stg_520 [1/1] 0.00ns
.loopexit:5  store float %win_val_0_val_1_0_1, float* %win_val_0_val_1_0_5, align 4


 <State 96>: 4.44ns
ST_96: k_buf_val_val_1_0_addr [1/1] 0.00ns
:0  %k_buf_val_val_1_0_addr = getelementptr [641 x float]* %k_buf_val_val_1_0, i64 0, i64 %tmp_45

ST_96: stg_522 [1/1] 2.71ns
:3  store float %win_val_1_val_0_0, float* %k_buf_val_val_1_0_addr, align 4

ST_96: tmp_122_load [1/1] 0.00ns
:0  %tmp_122_load = load float* %tmp_122, align 4

ST_96: stg_524 [1/1] 2.71ns
:1  store float %tmp_122_load, float* %k_buf_val_val_0_0_addr, align 4

ST_96: stg_525 [1/1] 2.71ns
:4  store float %tmp_146, float* %k_buf_val_val_0_0_addr, align 4

ST_96: win_val_0_val_1_0_load [1/1] 0.00ns
.preheader.preheader_ifconv:0  %win_val_0_val_1_0_load = load float* %win_val_0_val_1_0, align 4

ST_96: win_val_0_val_1_0_5_load [1/1] 0.00ns
.preheader.preheader_ifconv:1  %win_val_0_val_1_0_5_load = load float* %win_val_0_val_1_0_5, align 4

ST_96: win_val_1_val_1_0_load [1/1] 0.00ns
.preheader.preheader_ifconv:2  %win_val_1_val_1_0_load = load float* %win_val_1_val_1_0, align 4

ST_96: win_val_1_val_1_0_3_load [1/1] 0.00ns
.preheader.preheader_ifconv:3  %win_val_1_val_1_0_3_load = load float* %win_val_1_val_1_0_3, align 4

ST_96: d_assign [2/2] 4.44ns
.preheader.preheader_ifconv:7  %d_assign = fpext float %win_val_1_val_1_0_3_load to double

ST_96: d_assign_1 [2/2] 4.44ns
.preheader.preheader_ifconv:62  %d_assign_1 = fpext float %win_val_1_val_1_0_load to double

ST_96: d_assign_2 [2/2] 4.44ns
.preheader.preheader_ifconv:121  %d_assign_2 = fpext float %win_val_0_val_1_0_5_load to double

ST_96: d_assign_3 [2/2] 4.44ns
.preheader.preheader_ifconv:179  %d_assign_3 = fpext float %win_val_0_val_1_0_load to double


 <State 97>: 4.44ns
ST_97: d_assign [1/2] 4.44ns
.preheader.preheader_ifconv:7  %d_assign = fpext float %win_val_1_val_1_0_3_load to double

ST_97: ireg_V [1/1] 0.00ns
.preheader.preheader_ifconv:8  %ireg_V = bitcast double %d_assign to i64

ST_97: tmp_123 [1/1] 0.00ns
.preheader.preheader_ifconv:9  %tmp_123 = trunc i64 %ireg_V to i63

ST_97: tmp_124 [1/1] 0.00ns
.preheader.preheader_ifconv:10  %tmp_124 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V, i32 63)

ST_97: p_Result_5 [1/1] 0.00ns
.preheader.preheader_ifconv:11  %p_Result_5 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V, i32 52, i32 62)

ST_97: tmp_125 [1/1] 0.00ns
.preheader.preheader_ifconv:13  %tmp_125 = trunc i64 %ireg_V to i52

ST_97: d_assign_1 [1/2] 4.44ns
.preheader.preheader_ifconv:62  %d_assign_1 = fpext float %win_val_1_val_1_0_load to double

ST_97: ireg_V_1 [1/1] 0.00ns
.preheader.preheader_ifconv:63  %ireg_V_1 = bitcast double %d_assign_1 to i64

ST_97: tmp_128 [1/1] 0.00ns
.preheader.preheader_ifconv:64  %tmp_128 = trunc i64 %ireg_V_1 to i63

ST_97: tmp_129 [1/1] 0.00ns
.preheader.preheader_ifconv:65  %tmp_129 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_1, i32 63)

ST_97: p_Result_s [1/1] 0.00ns
.preheader.preheader_ifconv:66  %p_Result_s = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_1, i32 52, i32 62)

ST_97: tmp_130 [1/1] 0.00ns
.preheader.preheader_ifconv:68  %tmp_130 = trunc i64 %ireg_V_1 to i52

ST_97: d_assign_2 [1/2] 4.44ns
.preheader.preheader_ifconv:121  %d_assign_2 = fpext float %win_val_0_val_1_0_5_load to double

ST_97: ireg_V_2 [1/1] 0.00ns
.preheader.preheader_ifconv:122  %ireg_V_2 = bitcast double %d_assign_2 to i64

ST_97: tmp_133 [1/1] 0.00ns
.preheader.preheader_ifconv:123  %tmp_133 = trunc i64 %ireg_V_2 to i63

ST_97: tmp_134 [1/1] 0.00ns
.preheader.preheader_ifconv:124  %tmp_134 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_2, i32 63)

ST_97: p_Result_2 [1/1] 0.00ns
.preheader.preheader_ifconv:125  %p_Result_2 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_2, i32 52, i32 62)

ST_97: tmp_135 [1/1] 0.00ns
.preheader.preheader_ifconv:127  %tmp_135 = trunc i64 %ireg_V_2 to i52

ST_97: d_assign_3 [1/2] 4.44ns
.preheader.preheader_ifconv:179  %d_assign_3 = fpext float %win_val_0_val_1_0_load to double

ST_97: ireg_V_3 [1/1] 0.00ns
.preheader.preheader_ifconv:180  %ireg_V_3 = bitcast double %d_assign_3 to i64

ST_97: tmp_138 [1/1] 0.00ns
.preheader.preheader_ifconv:181  %tmp_138 = trunc i64 %ireg_V_3 to i63

ST_97: tmp_139 [1/1] 0.00ns
.preheader.preheader_ifconv:182  %tmp_139 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_3, i32 63)

ST_97: p_Result_4 [1/1] 0.00ns
.preheader.preheader_ifconv:183  %p_Result_4 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_3, i32 52, i32 62)

ST_97: tmp_140 [1/1] 0.00ns
.preheader.preheader_ifconv:185  %tmp_140 = trunc i64 %ireg_V_3 to i52


 <State 98>: 4.53ns
ST_98: tmp_48 [1/1] 0.00ns
.preheader.preheader_ifconv:12  %tmp_48 = zext i11 %p_Result_5 to i12

ST_98: tmp_49 [1/1] 0.00ns
.preheader.preheader_ifconv:14  %tmp_49 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_125)

ST_98: p_Result_9 [1/1] 0.00ns
.preheader.preheader_ifconv:15  %p_Result_9 = zext i53 %tmp_49 to i54

ST_98: man_V_1 [1/1] 3.16ns
.preheader.preheader_ifconv:16  %man_V_1 = sub i54 0, %p_Result_9

ST_98: p_Val2_17 [1/1] 1.37ns
.preheader.preheader_ifconv:17  %p_Val2_17 = select i1 %tmp_124, i54 %man_V_1, i54 %p_Result_9

ST_98: tmp_51 [1/1] 2.70ns
.preheader.preheader_ifconv:18  %tmp_51 = icmp eq i63 %tmp_123, 0

ST_98: F2 [1/1] 1.84ns
.preheader.preheader_ifconv:19  %F2 = sub i12 1075, %tmp_48

ST_98: tmp_52 [1/1] 2.14ns
.preheader.preheader_ifconv:20  %tmp_52 = icmp sgt i12 %F2, 32

ST_98: tmp_53 [1/1] 1.84ns
.preheader.preheader_ifconv:21  %tmp_53 = add i12 -32, %F2

ST_98: tmp_54 [1/1] 1.84ns
.preheader.preheader_ifconv:22  %tmp_54 = sub i12 32, %F2

ST_98: tmp_55 [1/1] 2.14ns
.preheader.preheader_ifconv:25  %tmp_55 = icmp eq i12 %F2, 32

ST_98: tmp_64 [1/1] 1.84ns
.preheader.preheader_ifconv:38  %tmp_64 = add i12 -33, %F2

ST_98: tmp_135_cast [1/1] 0.00ns
.preheader.preheader_ifconv:39  %tmp_135_cast = zext i12 %tmp_64 to i32

ST_98: tmp_127 [1/1] 0.00ns
.preheader.preheader_ifconv:40  %tmp_127 = call i1 @_ssdm_op_BitSelect.i1.i54.i32(i54 %p_Val2_17, i32 %tmp_135_cast)

ST_98: tmp_65 [1/1] 0.00ns
.preheader.preheader_ifconv:67  %tmp_65 = zext i11 %p_Result_s to i12

ST_98: tmp_66 [1/1] 0.00ns
.preheader.preheader_ifconv:69  %tmp_66 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_130)

ST_98: p_Result_1 [1/1] 0.00ns
.preheader.preheader_ifconv:70  %p_Result_1 = zext i53 %tmp_66 to i54

ST_98: man_V_5 [1/1] 3.16ns
.preheader.preheader_ifconv:71  %man_V_5 = sub i54 0, %p_Result_1

ST_98: p_Val2_25 [1/1] 1.37ns
.preheader.preheader_ifconv:72  %p_Val2_25 = select i1 %tmp_129, i54 %man_V_5, i54 %p_Result_1

ST_98: tmp_67 [1/1] 2.70ns
.preheader.preheader_ifconv:73  %tmp_67 = icmp eq i63 %tmp_128, 0

ST_98: F2_1 [1/1] 1.84ns
.preheader.preheader_ifconv:74  %F2_1 = sub i12 1075, %tmp_65

ST_98: tmp_68 [1/1] 2.14ns
.preheader.preheader_ifconv:75  %tmp_68 = icmp sgt i12 %F2_1, 32

ST_98: tmp_69 [1/1] 1.84ns
.preheader.preheader_ifconv:76  %tmp_69 = add i12 -32, %F2_1

ST_98: tmp_70 [1/1] 1.84ns
.preheader.preheader_ifconv:77  %tmp_70 = sub i12 32, %F2_1

ST_98: tmp_71 [1/1] 2.14ns
.preheader.preheader_ifconv:80  %tmp_71 = icmp eq i12 %F2_1, 32

ST_98: tmp_80 [1/1] 1.84ns
.preheader.preheader_ifconv:93  %tmp_80 = add i12 -33, %F2_1

ST_98: tmp_159_cast [1/1] 0.00ns
.preheader.preheader_ifconv:94  %tmp_159_cast = zext i12 %tmp_80 to i32

ST_98: tmp_132 [1/1] 0.00ns
.preheader.preheader_ifconv:95  %tmp_132 = call i1 @_ssdm_op_BitSelect.i1.i54.i32(i54 %p_Val2_25, i32 %tmp_159_cast)

ST_98: tmp_81 [1/1] 0.00ns
.preheader.preheader_ifconv:126  %tmp_81 = zext i11 %p_Result_2 to i12

ST_98: tmp_82 [1/1] 0.00ns
.preheader.preheader_ifconv:128  %tmp_82 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_135)

ST_98: p_Result_3 [1/1] 0.00ns
.preheader.preheader_ifconv:129  %p_Result_3 = zext i53 %tmp_82 to i54

ST_98: man_V_9 [1/1] 3.16ns
.preheader.preheader_ifconv:130  %man_V_9 = sub i54 0, %p_Result_3

ST_98: p_Val2_31 [1/1] 1.37ns
.preheader.preheader_ifconv:131  %p_Val2_31 = select i1 %tmp_134, i54 %man_V_9, i54 %p_Result_3

ST_98: tmp_83 [1/1] 2.70ns
.preheader.preheader_ifconv:132  %tmp_83 = icmp eq i63 %tmp_133, 0

ST_98: F2_2 [1/1] 1.84ns
.preheader.preheader_ifconv:133  %F2_2 = sub i12 1075, %tmp_81

ST_98: tmp_84 [1/1] 2.14ns
.preheader.preheader_ifconv:134  %tmp_84 = icmp sgt i12 %F2_2, 32

ST_98: tmp_85 [1/1] 1.84ns
.preheader.preheader_ifconv:135  %tmp_85 = add i12 -32, %F2_2

ST_98: tmp_86 [1/1] 1.84ns
.preheader.preheader_ifconv:136  %tmp_86 = sub i12 32, %F2_2

ST_98: tmp_87 [1/1] 2.14ns
.preheader.preheader_ifconv:139  %tmp_87 = icmp eq i12 %F2_2, 32

ST_98: tmp_96 [1/1] 1.84ns
.preheader.preheader_ifconv:152  %tmp_96 = add i12 -33, %F2_2

ST_98: tmp_185_cast [1/1] 0.00ns
.preheader.preheader_ifconv:153  %tmp_185_cast = zext i12 %tmp_96 to i32

ST_98: tmp_137 [1/1] 0.00ns
.preheader.preheader_ifconv:154  %tmp_137 = call i1 @_ssdm_op_BitSelect.i1.i54.i32(i54 %p_Val2_31, i32 %tmp_185_cast)

ST_98: tmp_99 [1/1] 0.00ns
.preheader.preheader_ifconv:184  %tmp_99 = zext i11 %p_Result_4 to i12

ST_98: tmp_97 [1/1] 0.00ns
.preheader.preheader_ifconv:186  %tmp_97 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_140)

ST_98: p_Result_6 [1/1] 0.00ns
.preheader.preheader_ifconv:187  %p_Result_6 = zext i53 %tmp_97 to i54

ST_98: man_V_s [1/1] 3.16ns
.preheader.preheader_ifconv:188  %man_V_s = sub i54 0, %p_Result_6

ST_98: p_Val2_35 [1/1] 1.37ns
.preheader.preheader_ifconv:189  %p_Val2_35 = select i1 %tmp_139, i54 %man_V_s, i54 %p_Result_6

ST_98: tmp_101 [1/1] 2.70ns
.preheader.preheader_ifconv:190  %tmp_101 = icmp eq i63 %tmp_138, 0

ST_98: F2_3 [1/1] 1.84ns
.preheader.preheader_ifconv:191  %F2_3 = sub i12 1075, %tmp_99

ST_98: tmp_102 [1/1] 2.14ns
.preheader.preheader_ifconv:192  %tmp_102 = icmp sgt i12 %F2_3, 32

ST_98: tmp_103 [1/1] 1.84ns
.preheader.preheader_ifconv:193  %tmp_103 = add i12 -32, %F2_3

ST_98: tmp_104 [1/1] 1.84ns
.preheader.preheader_ifconv:194  %tmp_104 = sub i12 32, %F2_3

ST_98: tmp_105 [1/1] 2.14ns
.preheader.preheader_ifconv:197  %tmp_105 = icmp eq i12 %F2_3, 32

ST_98: tmp_114 [1/1] 1.84ns
.preheader.preheader_ifconv:211  %tmp_114 = add i12 -33, %F2_3

ST_98: tmp_211_cast [1/1] 0.00ns
.preheader.preheader_ifconv:212  %tmp_211_cast = zext i12 %tmp_114 to i32

ST_98: tmp_143 [1/1] 0.00ns
.preheader.preheader_ifconv:213  %tmp_143 = call i1 @_ssdm_op_BitSelect.i1.i54.i32(i54 %p_Val2_35, i32 %tmp_211_cast)


 <State 99>: 4.93ns
ST_99: sh_amt [1/1] 1.37ns
.preheader.preheader_ifconv:23  %sh_amt = select i1 %tmp_52, i12 %tmp_53, i12 %tmp_54

ST_99: sh_amt_cast [1/1] 0.00ns
.preheader.preheader_ifconv:24  %sh_amt_cast = sext i12 %sh_amt to i32

ST_99: tmp_57 [1/1] 2.14ns
.preheader.preheader_ifconv:27  %tmp_57 = icmp ult i12 %sh_amt, 54

ST_99: tmp_126 [1/1] 0.00ns
.preheader.preheader_ifconv:28  %tmp_126 = call i6 @_ssdm_op_PartSelect.i6.i12.i32.i32(i12 %sh_amt, i32 6, i32 11)

ST_99: icmp [1/1] 1.94ns
.preheader.preheader_ifconv:29  %icmp = icmp eq i6 %tmp_126, 0

ST_99: tmp_59 [1/1] 0.00ns
.preheader.preheader_ifconv:30  %tmp_59 = zext i32 %sh_amt_cast to i54

ST_99: tmp_60 [1/1] 3.56ns
.preheader.preheader_ifconv:31  %tmp_60 = ashr i54 %p_Val2_17, %tmp_59

ST_99: p_8_cast [1/1] 1.37ns
.preheader.preheader_ifconv:32  %p_8_cast = select i1 %tmp_124, i54 -1, i54 0

ST_99: tmp_63 [1/1] 2.14ns
.preheader.preheader_ifconv:37  %tmp_63 = icmp sgt i12 %tmp_53, 54

ST_99: qb [1/1] 1.37ns
.preheader.preheader_ifconv:41  %qb = select i1 %tmp_63, i1 %tmp_124, i1 %tmp_127

ST_99: sel_tmp2 [1/1] 1.37ns
.preheader.preheader_ifconv:45  %sel_tmp2 = xor i1 %tmp_51, true

ST_99: sel_tmp3 [1/1] 1.37ns
.preheader.preheader_ifconv:46  %sel_tmp3 = and i1 %tmp_55, %sel_tmp2

ST_99: sel_tmp32_demorgan [1/1] 1.37ns
.preheader.preheader_ifconv:47  %sel_tmp32_demorgan = or i1 %tmp_51, %tmp_55

ST_99: sh_amt_1 [1/1] 1.37ns
.preheader.preheader_ifconv:78  %sh_amt_1 = select i1 %tmp_68, i12 %tmp_69, i12 %tmp_70

ST_99: sh_amt_1_cast [1/1] 0.00ns
.preheader.preheader_ifconv:79  %sh_amt_1_cast = sext i12 %sh_amt_1 to i32

ST_99: tmp_73 [1/1] 2.14ns
.preheader.preheader_ifconv:82  %tmp_73 = icmp ult i12 %sh_amt_1, 54

ST_99: tmp_131 [1/1] 0.00ns
.preheader.preheader_ifconv:83  %tmp_131 = call i6 @_ssdm_op_PartSelect.i6.i12.i32.i32(i12 %sh_amt_1, i32 6, i32 11)

ST_99: icmp1 [1/1] 1.94ns
.preheader.preheader_ifconv:84  %icmp1 = icmp eq i6 %tmp_131, 0

ST_99: tmp_75 [1/1] 0.00ns
.preheader.preheader_ifconv:85  %tmp_75 = zext i32 %sh_amt_1_cast to i54

ST_99: tmp_76 [1/1] 3.56ns
.preheader.preheader_ifconv:86  %tmp_76 = ashr i54 %p_Val2_25, %tmp_75

ST_99: p_9_cast [1/1] 1.37ns
.preheader.preheader_ifconv:87  %p_9_cast = select i1 %tmp_129, i54 -1, i54 0

ST_99: tmp_79 [1/1] 2.14ns
.preheader.preheader_ifconv:92  %tmp_79 = icmp sgt i12 %tmp_69, 54

ST_99: qb_1 [1/1] 1.37ns
.preheader.preheader_ifconv:96  %qb_1 = select i1 %tmp_79, i1 %tmp_129, i1 %tmp_132

ST_99: sel_tmp1 [1/1] 1.37ns
.preheader.preheader_ifconv:100  %sel_tmp1 = xor i1 %tmp_67, true

ST_99: sel_tmp10 [1/1] 1.37ns
.preheader.preheader_ifconv:101  %sel_tmp10 = and i1 %tmp_71, %sel_tmp1

ST_99: sel_tmp50_demorgan [1/1] 1.37ns
.preheader.preheader_ifconv:102  %sel_tmp50_demorgan = or i1 %tmp_67, %tmp_71

ST_99: sh_amt_2 [1/1] 1.37ns
.preheader.preheader_ifconv:137  %sh_amt_2 = select i1 %tmp_84, i12 %tmp_85, i12 %tmp_86

ST_99: sh_amt_2_cast [1/1] 0.00ns
.preheader.preheader_ifconv:138  %sh_amt_2_cast = sext i12 %sh_amt_2 to i32

ST_99: tmp_89 [1/1] 2.14ns
.preheader.preheader_ifconv:141  %tmp_89 = icmp ult i12 %sh_amt_2, 54

ST_99: tmp_136 [1/1] 0.00ns
.preheader.preheader_ifconv:142  %tmp_136 = call i6 @_ssdm_op_PartSelect.i6.i12.i32.i32(i12 %sh_amt_2, i32 6, i32 11)

ST_99: icmp2 [1/1] 1.94ns
.preheader.preheader_ifconv:143  %icmp2 = icmp eq i6 %tmp_136, 0

ST_99: tmp_91 [1/1] 0.00ns
.preheader.preheader_ifconv:144  %tmp_91 = zext i32 %sh_amt_2_cast to i54

ST_99: tmp_92 [1/1] 3.56ns
.preheader.preheader_ifconv:145  %tmp_92 = ashr i54 %p_Val2_31, %tmp_91

ST_99: p_10_cast [1/1] 1.37ns
.preheader.preheader_ifconv:146  %p_10_cast = select i1 %tmp_134, i54 -1, i54 0

ST_99: tmp_95 [1/1] 2.14ns
.preheader.preheader_ifconv:151  %tmp_95 = icmp sgt i12 %tmp_85, 54

ST_99: qb_2 [1/1] 1.37ns
.preheader.preheader_ifconv:155  %qb_2 = select i1 %tmp_95, i1 %tmp_134, i1 %tmp_137

ST_99: sel_tmp15 [1/1] 1.37ns
.preheader.preheader_ifconv:159  %sel_tmp15 = xor i1 %tmp_83, true

ST_99: sel_tmp16 [1/1] 1.37ns
.preheader.preheader_ifconv:160  %sel_tmp16 = and i1 %tmp_87, %sel_tmp15

ST_99: sel_tmp68_demorgan [1/1] 1.37ns
.preheader.preheader_ifconv:161  %sel_tmp68_demorgan = or i1 %tmp_83, %tmp_87

ST_99: sh_amt_3 [1/1] 1.37ns
.preheader.preheader_ifconv:195  %sh_amt_3 = select i1 %tmp_102, i12 %tmp_103, i12 %tmp_104

ST_99: sh_amt_3_cast [1/1] 0.00ns
.preheader.preheader_ifconv:196  %sh_amt_3_cast = sext i12 %sh_amt_3 to i32

ST_99: tmp_107 [1/1] 2.14ns
.preheader.preheader_ifconv:199  %tmp_107 = icmp ult i12 %sh_amt_3, 54

ST_99: tmp_141 [1/1] 0.00ns
.preheader.preheader_ifconv:200  %tmp_141 = call i6 @_ssdm_op_PartSelect.i6.i12.i32.i32(i12 %sh_amt_3, i32 6, i32 11)

ST_99: icmp3 [1/1] 1.94ns
.preheader.preheader_ifconv:201  %icmp3 = icmp eq i6 %tmp_141, 0

ST_99: tmp_109 [1/1] 0.00ns
.preheader.preheader_ifconv:202  %tmp_109 = zext i32 %sh_amt_3_cast to i54

ST_99: tmp_110 [1/1] 3.56ns
.preheader.preheader_ifconv:203  %tmp_110 = ashr i54 %p_Val2_35, %tmp_109

ST_99: tmp_142 [1/1] 0.00ns
.preheader.preheader_ifconv:204  %tmp_142 = trunc i54 %tmp_110 to i53

ST_99: p_11_cast_cast [1/1] 1.37ns
.preheader.preheader_ifconv:205  %p_11_cast_cast = select i1 %tmp_139, i53 -1, i53 0

ST_99: tmp_113 [1/1] 2.14ns
.preheader.preheader_ifconv:210  %tmp_113 = icmp sgt i12 %tmp_103, 54

ST_99: qb_3 [1/1] 1.37ns
.preheader.preheader_ifconv:214  %qb_3 = select i1 %tmp_113, i1 %tmp_139, i1 %tmp_143

ST_99: sel_tmp21 [1/1] 1.37ns
.preheader.preheader_ifconv:218  %sel_tmp21 = xor i1 %tmp_101, true

ST_99: sel_tmp22 [1/1] 1.37ns
.preheader.preheader_ifconv:219  %sel_tmp22 = and i1 %tmp_105, %sel_tmp21

ST_99: sel_tmp86_demorgan [1/1] 1.37ns
.preheader.preheader_ifconv:220  %sel_tmp86_demorgan = or i1 %tmp_101, %tmp_105


 <State 100>: 4.53ns
ST_100: tmp_33 [1/1] 0.00ns
_ifconv:32  %tmp_33 = call i20 @_ssdm_op_BitConcatenate.i20.i18.i2(i18 %tmp_119, i2 0)

ST_100: u_V [1/1] 1.37ns
_ifconv:33  %u_V = select i1 %tmp_32, i20 %tmp_33, i20 0

ST_100: tmp_39 [1/1] 0.00ns
_ifconv:40  %tmp_39 = call i20 @_ssdm_op_BitConcatenate.i20.i18.i2(i18 %tmp_120, i2 0)

ST_100: v_V_2 [1/1] 1.37ns
_ifconv:41  %v_V_2 = select i1 %tmp_38, i20 %tmp_39, i20 0

ST_100: tmp_56 [1/1] 0.00ns
.preheader.preheader_ifconv:26  %tmp_56 = sext i54 %p_Val2_17 to i64

ST_100: tmp_61 [1/1] 0.00ns
.preheader.preheader_ifconv:33  %tmp_61 = zext i32 %sh_amt_cast to i64

ST_100: tmp_62 [1/1] 3.56ns
.preheader.preheader_ifconv:34  %tmp_62 = shl i64 %tmp_56, %tmp_61

ST_100: p_Val2_20 [1/1] 1.37ns
.preheader.preheader_ifconv:35  %p_Val2_20 = select i1 %tmp_57, i54 %tmp_60, i54 %p_8_cast

ST_100: p_Val2_77_cast [1/1] 0.00ns
.preheader.preheader_ifconv:36  %p_Val2_77_cast = sext i54 %p_Val2_20 to i55

ST_100: tmp_139_cast [1/1] 0.00ns
.preheader.preheader_ifconv:42  %tmp_139_cast = zext i1 %qb to i55

ST_100: p_Val2_23 [1/1] 3.16ns
.preheader.preheader_ifconv:43  %p_Val2_23 = add i55 %tmp_139_cast, %p_Val2_77_cast

ST_100: sel_tmp4 [1/1] 1.37ns
.preheader.preheader_ifconv:48  %sel_tmp4 = xor i1 %sel_tmp32_demorgan, true

ST_100: sel_tmp7 [1/1] 1.37ns
.preheader.preheader_ifconv:49  %sel_tmp7 = and i1 %tmp_52, %sel_tmp4

ST_100: sel_tmp39_demorgan [1/1] 1.37ns
.preheader.preheader_ifconv:50  %sel_tmp39_demorgan = or i1 %sel_tmp32_demorgan, %tmp_52

ST_100: sel_tmp8 [1/1] 1.37ns
.preheader.preheader_ifconv:51  %sel_tmp8 = xor i1 %sel_tmp39_demorgan, true

ST_100: sel_tmp9 [1/1] 1.37ns
.preheader.preheader_ifconv:52  %sel_tmp9 = and i1 %icmp, %sel_tmp8

ST_100: newSel7 [1/1] 1.37ns
.preheader.preheader_ifconv:55  %newSel7 = select i1 %sel_tmp3, i54 %p_Val2_17, i54 0

ST_100: tmp_72 [1/1] 0.00ns
.preheader.preheader_ifconv:81  %tmp_72 = sext i54 %p_Val2_25 to i64

ST_100: tmp_77 [1/1] 0.00ns
.preheader.preheader_ifconv:88  %tmp_77 = zext i32 %sh_amt_1_cast to i64

ST_100: tmp_78 [1/1] 3.56ns
.preheader.preheader_ifconv:89  %tmp_78 = shl i64 %tmp_72, %tmp_77

ST_100: p_Val2_27 [1/1] 1.37ns
.preheader.preheader_ifconv:90  %p_Val2_27 = select i1 %tmp_73, i54 %tmp_76, i54 %p_9_cast

ST_100: p_Val2_82_cast [1/1] 0.00ns
.preheader.preheader_ifconv:91  %p_Val2_82_cast = sext i54 %p_Val2_27 to i55

ST_100: tmp_163_cast [1/1] 0.00ns
.preheader.preheader_ifconv:97  %tmp_163_cast = zext i1 %qb_1 to i55

ST_100: p_Val2_28 [1/1] 3.16ns
.preheader.preheader_ifconv:98  %p_Val2_28 = add i55 %tmp_163_cast, %p_Val2_82_cast

ST_100: sel_tmp11 [1/1] 1.37ns
.preheader.preheader_ifconv:103  %sel_tmp11 = xor i1 %sel_tmp50_demorgan, true

ST_100: sel_tmp12 [1/1] 1.37ns
.preheader.preheader_ifconv:104  %sel_tmp12 = and i1 %tmp_68, %sel_tmp11

ST_100: sel_tmp57_demorgan [1/1] 1.37ns
.preheader.preheader_ifconv:105  %sel_tmp57_demorgan = or i1 %sel_tmp50_demorgan, %tmp_68

ST_100: sel_tmp13 [1/1] 1.37ns
.preheader.preheader_ifconv:106  %sel_tmp13 = xor i1 %sel_tmp57_demorgan, true

ST_100: sel_tmp14 [1/1] 1.37ns
.preheader.preheader_ifconv:107  %sel_tmp14 = and i1 %icmp1, %sel_tmp13

ST_100: newSel2 [1/1] 1.37ns
.preheader.preheader_ifconv:110  %newSel2 = select i1 %sel_tmp10, i54 %p_Val2_25, i54 0

ST_100: tmp_88 [1/1] 0.00ns
.preheader.preheader_ifconv:140  %tmp_88 = sext i54 %p_Val2_31 to i64

ST_100: tmp_93 [1/1] 0.00ns
.preheader.preheader_ifconv:147  %tmp_93 = zext i32 %sh_amt_2_cast to i64

ST_100: tmp_94 [1/1] 3.56ns
.preheader.preheader_ifconv:148  %tmp_94 = shl i64 %tmp_88, %tmp_93

ST_100: p_Val2_32 [1/1] 1.37ns
.preheader.preheader_ifconv:149  %p_Val2_32 = select i1 %tmp_89, i54 %tmp_92, i54 %p_10_cast

ST_100: p_Val2_87_cast [1/1] 0.00ns
.preheader.preheader_ifconv:150  %p_Val2_87_cast = sext i54 %p_Val2_32 to i55

ST_100: tmp_189_cast [1/1] 0.00ns
.preheader.preheader_ifconv:156  %tmp_189_cast = zext i1 %qb_2 to i55

ST_100: p_Val2_33 [1/1] 3.16ns
.preheader.preheader_ifconv:157  %p_Val2_33 = add i55 %tmp_189_cast, %p_Val2_87_cast

ST_100: sel_tmp17 [1/1] 1.37ns
.preheader.preheader_ifconv:162  %sel_tmp17 = xor i1 %sel_tmp68_demorgan, true

ST_100: sel_tmp18 [1/1] 1.37ns
.preheader.preheader_ifconv:163  %sel_tmp18 = and i1 %tmp_84, %sel_tmp17

ST_100: sel_tmp75_demorgan [1/1] 1.37ns
.preheader.preheader_ifconv:164  %sel_tmp75_demorgan = or i1 %sel_tmp68_demorgan, %tmp_84

ST_100: sel_tmp19 [1/1] 1.37ns
.preheader.preheader_ifconv:165  %sel_tmp19 = xor i1 %sel_tmp75_demorgan, true

ST_100: sel_tmp20 [1/1] 1.37ns
.preheader.preheader_ifconv:166  %sel_tmp20 = and i1 %icmp2, %sel_tmp19

ST_100: newSel5 [1/1] 1.37ns
.preheader.preheader_ifconv:169  %newSel5 = select i1 %sel_tmp16, i54 %p_Val2_31, i54 0

ST_100: tmp_106 [1/1] 0.00ns
.preheader.preheader_ifconv:198  %tmp_106 = sext i54 %p_Val2_35 to i64

ST_100: tmp_111 [1/1] 0.00ns
.preheader.preheader_ifconv:206  %tmp_111 = zext i32 %sh_amt_3_cast to i64

ST_100: tmp_112 [1/1] 3.56ns
.preheader.preheader_ifconv:207  %tmp_112 = shl i64 %tmp_106, %tmp_111

ST_100: p_Val2_36 [1/1] 1.37ns
.preheader.preheader_ifconv:208  %p_Val2_36 = select i1 %tmp_107, i53 %tmp_142, i53 %p_11_cast_cast

ST_100: p_Val2_92_cast [1/1] 0.00ns
.preheader.preheader_ifconv:209  %p_Val2_92_cast = sext i53 %p_Val2_36 to i54

ST_100: tmp_215_cast_cast [1/1] 0.00ns
.preheader.preheader_ifconv:215  %tmp_215_cast_cast = zext i1 %qb_3 to i54

ST_100: p_Val2_26 [1/1] 3.16ns
.preheader.preheader_ifconv:216  %p_Val2_26 = add i54 %tmp_215_cast_cast, %p_Val2_92_cast

ST_100: sel_tmp23 [1/1] 1.37ns
.preheader.preheader_ifconv:221  %sel_tmp23 = xor i1 %sel_tmp86_demorgan, true

ST_100: sel_tmp24 [1/1] 1.37ns
.preheader.preheader_ifconv:222  %sel_tmp24 = and i1 %tmp_102, %sel_tmp23

ST_100: sel_tmp93_demorgan [1/1] 1.37ns
.preheader.preheader_ifconv:223  %sel_tmp93_demorgan = or i1 %sel_tmp86_demorgan, %tmp_102

ST_100: sel_tmp25 [1/1] 1.37ns
.preheader.preheader_ifconv:224  %sel_tmp25 = xor i1 %sel_tmp93_demorgan, true

ST_100: sel_tmp26 [1/1] 1.37ns
.preheader.preheader_ifconv:225  %sel_tmp26 = and i1 %icmp3, %sel_tmp25

ST_100: newSel10 [1/1] 1.37ns
.preheader.preheader_ifconv:228  %newSel10 = select i1 %sel_tmp22, i54 %p_Val2_35, i54 0


 <State 101>: 4.89ns
ST_101: u1_V [1/1] 2.08ns
_ifconv:42  %u1_V = sub i20 262144, %u_V

ST_101: v1_V [1/1] 2.08ns
_ifconv:43  %v1_V = sub i20 262144, %v_V_2

ST_101: p_u_V [1/1] 1.37ns
_ifconv:45  %p_u_V = select i1 %tmp_40, i20 0, i20 %u_V

ST_101: v_V [1/1] 1.37ns
_ifconv:48  %v_V = select i1 %tmp_42, i20 0, i20 %v_V_2

ST_101: OP2_V [1/1] 0.00ns
.preheader.preheader_ifconv:4  %OP2_V = sext i20 %u1_V to i84

ST_101: OP2_V_1 [1/1] 0.00ns
.preheader.preheader_ifconv:6  %OP2_V_1 = sext i20 %v1_V to i84

ST_101: p_Val2_78_cast [1/1] 0.00ns
.preheader.preheader_ifconv:44  %p_Val2_78_cast = sext i55 %p_Val2_23 to i64

ST_101: newSel [1/1] 1.37ns
.preheader.preheader_ifconv:53  %newSel = select i1 %sel_tmp9, i64 %tmp_62, i64 %p_Val2_78_cast

ST_101: or_cond [1/1] 1.37ns
.preheader.preheader_ifconv:54  %or_cond = or i1 %sel_tmp9, %sel_tmp7

ST_101: newSel7_cast [1/1] 0.00ns
.preheader.preheader_ifconv:56  %newSel7_cast = sext i54 %newSel7 to i64

ST_101: newSel9 [1/1] 1.37ns
.preheader.preheader_ifconv:57  %newSel9 = select i1 %or_cond, i64 %newSel, i64 %newSel7_cast

ST_101: OP1_V_2 [1/1] 0.00ns
.preheader.preheader_ifconv:58  %OP1_V_2 = sext i64 %newSel9 to i84

ST_101: r_V [7/7] 2.15ns
.preheader.preheader_ifconv:59  %r_V = mul nsw i84 %OP2_V, %OP1_V_2

ST_101: p_Val2_161_cast [1/1] 0.00ns
.preheader.preheader_ifconv:99  %p_Val2_161_cast = sext i55 %p_Val2_28 to i64

ST_101: newSel1 [1/1] 1.37ns
.preheader.preheader_ifconv:108  %newSel1 = select i1 %sel_tmp14, i64 %tmp_78, i64 %p_Val2_161_cast

ST_101: or_cond1 [1/1] 1.37ns
.preheader.preheader_ifconv:109  %or_cond1 = or i1 %sel_tmp14, %sel_tmp12

ST_101: newSel13_cast [1/1] 0.00ns
.preheader.preheader_ifconv:111  %newSel13_cast = sext i54 %newSel2 to i64

ST_101: newSel3 [1/1] 1.37ns
.preheader.preheader_ifconv:112  %newSel3 = select i1 %or_cond1, i64 %newSel1, i64 %newSel13_cast

ST_101: OP1_V_4 [1/1] 0.00ns
.preheader.preheader_ifconv:113  %OP1_V_4 = sext i64 %newSel3 to i84

ST_101: r_V_1 [7/7] 2.15ns
.preheader.preheader_ifconv:114  %r_V_1 = mul nsw i84 %OP2_V_1, %OP1_V_4

ST_101: p_Val2_221_cast [1/1] 0.00ns
.preheader.preheader_ifconv:158  %p_Val2_221_cast = sext i55 %p_Val2_33 to i64

ST_101: newSel4 [1/1] 1.37ns
.preheader.preheader_ifconv:167  %newSel4 = select i1 %sel_tmp20, i64 %tmp_94, i64 %p_Val2_221_cast

ST_101: or_cond2 [1/1] 1.37ns
.preheader.preheader_ifconv:168  %or_cond2 = or i1 %sel_tmp20, %sel_tmp18

ST_101: newSel19_cast [1/1] 0.00ns
.preheader.preheader_ifconv:170  %newSel19_cast = sext i54 %newSel5 to i64

ST_101: newSel6 [1/1] 1.37ns
.preheader.preheader_ifconv:171  %newSel6 = select i1 %or_cond2, i64 %newSel4, i64 %newSel19_cast

ST_101: OP1_V_6 [1/1] 0.00ns
.preheader.preheader_ifconv:172  %OP1_V_6 = sext i64 %newSel6 to i84

ST_101: r_V_2 [7/7] 2.15ns
.preheader.preheader_ifconv:173  %r_V_2 = mul nsw i84 %OP2_V, %OP1_V_6

ST_101: p_Val2_26_cast [1/1] 0.00ns
.preheader.preheader_ifconv:217  %p_Val2_26_cast = sext i54 %p_Val2_26 to i64

ST_101: newSel8 [1/1] 1.37ns
.preheader.preheader_ifconv:226  %newSel8 = select i1 %sel_tmp26, i64 %tmp_112, i64 %p_Val2_26_cast

ST_101: or_cond3 [1/1] 1.37ns
.preheader.preheader_ifconv:227  %or_cond3 = or i1 %sel_tmp26, %sel_tmp24

ST_101: newSel25_cast [1/1] 0.00ns
.preheader.preheader_ifconv:229  %newSel25_cast = sext i54 %newSel10 to i64

ST_101: newSel11 [1/1] 1.37ns
.preheader.preheader_ifconv:230  %newSel11 = select i1 %or_cond3, i64 %newSel8, i64 %newSel25_cast

ST_101: OP1_V_8 [1/1] 0.00ns
.preheader.preheader_ifconv:231  %OP1_V_8 = sext i64 %newSel11 to i84

ST_101: OP2_V_7 [1/1] 0.00ns
.preheader.preheader_ifconv:232  %OP2_V_7 = sext i20 %p_u_V to i84

ST_101: r_V_3 [7/7] 2.15ns
.preheader.preheader_ifconv:233  %r_V_3 = mul nsw i84 %OP2_V_7, %OP1_V_8


 <State 102>: 2.15ns
ST_102: r_V [6/7] 2.15ns
.preheader.preheader_ifconv:59  %r_V = mul nsw i84 %OP2_V, %OP1_V_2

ST_102: r_V_1 [6/7] 2.15ns
.preheader.preheader_ifconv:114  %r_V_1 = mul nsw i84 %OP2_V_1, %OP1_V_4

ST_102: r_V_2 [6/7] 2.15ns
.preheader.preheader_ifconv:173  %r_V_2 = mul nsw i84 %OP2_V, %OP1_V_6

ST_102: r_V_3 [6/7] 2.15ns
.preheader.preheader_ifconv:233  %r_V_3 = mul nsw i84 %OP2_V_7, %OP1_V_8


 <State 103>: 2.15ns
ST_103: r_V [5/7] 2.15ns
.preheader.preheader_ifconv:59  %r_V = mul nsw i84 %OP2_V, %OP1_V_2

ST_103: r_V_1 [5/7] 2.15ns
.preheader.preheader_ifconv:114  %r_V_1 = mul nsw i84 %OP2_V_1, %OP1_V_4

ST_103: r_V_2 [5/7] 2.15ns
.preheader.preheader_ifconv:173  %r_V_2 = mul nsw i84 %OP2_V, %OP1_V_6

ST_103: r_V_3 [5/7] 2.15ns
.preheader.preheader_ifconv:233  %r_V_3 = mul nsw i84 %OP2_V_7, %OP1_V_8


 <State 104>: 2.15ns
ST_104: r_V [4/7] 2.15ns
.preheader.preheader_ifconv:59  %r_V = mul nsw i84 %OP2_V, %OP1_V_2

ST_104: r_V_1 [4/7] 2.15ns
.preheader.preheader_ifconv:114  %r_V_1 = mul nsw i84 %OP2_V_1, %OP1_V_4

ST_104: r_V_2 [4/7] 2.15ns
.preheader.preheader_ifconv:173  %r_V_2 = mul nsw i84 %OP2_V, %OP1_V_6

ST_104: r_V_3 [4/7] 2.15ns
.preheader.preheader_ifconv:233  %r_V_3 = mul nsw i84 %OP2_V_7, %OP1_V_8


 <State 105>: 2.15ns
ST_105: r_V [3/7] 2.15ns
.preheader.preheader_ifconv:59  %r_V = mul nsw i84 %OP2_V, %OP1_V_2

ST_105: r_V_1 [3/7] 2.15ns
.preheader.preheader_ifconv:114  %r_V_1 = mul nsw i84 %OP2_V_1, %OP1_V_4

ST_105: r_V_2 [3/7] 2.15ns
.preheader.preheader_ifconv:173  %r_V_2 = mul nsw i84 %OP2_V, %OP1_V_6

ST_105: r_V_3 [3/7] 2.15ns
.preheader.preheader_ifconv:233  %r_V_3 = mul nsw i84 %OP2_V_7, %OP1_V_8


 <State 106>: 2.15ns
ST_106: r_V [2/7] 2.15ns
.preheader.preheader_ifconv:59  %r_V = mul nsw i84 %OP2_V, %OP1_V_2

ST_106: r_V_1 [2/7] 2.15ns
.preheader.preheader_ifconv:114  %r_V_1 = mul nsw i84 %OP2_V_1, %OP1_V_4

ST_106: r_V_2 [2/7] 2.15ns
.preheader.preheader_ifconv:173  %r_V_2 = mul nsw i84 %OP2_V, %OP1_V_6

ST_106: r_V_3 [2/7] 2.15ns
.preheader.preheader_ifconv:233  %r_V_3 = mul nsw i84 %OP2_V_7, %OP1_V_8


 <State 107>: 4.30ns
ST_107: OP2_V_1_cast [1/1] 0.00ns
.preheader.preheader_ifconv:5  %OP2_V_1_cast = sext i20 %v1_V to i102

ST_107: r_V [1/7] 2.15ns
.preheader.preheader_ifconv:59  %r_V = mul nsw i84 %OP2_V, %OP1_V_2

ST_107: OP1_V_3_cast [1/1] 0.00ns
.preheader.preheader_ifconv:60  %OP1_V_3_cast = sext i84 %r_V to i102

ST_107: p_Val2_24 [8/8] 2.15ns
.preheader.preheader_ifconv:61  %p_Val2_24 = mul i102 %OP2_V_1_cast, %OP1_V_3_cast

ST_107: r_V_1 [1/7] 2.15ns
.preheader.preheader_ifconv:114  %r_V_1 = mul nsw i84 %OP2_V_1, %OP1_V_4

ST_107: OP1_V_5_cast [1/1] 0.00ns
.preheader.preheader_ifconv:115  %OP1_V_5_cast = sext i84 %r_V_1 to i102

ST_107: OP2_V_5_cast [1/1] 0.00ns
.preheader.preheader_ifconv:116  %OP2_V_5_cast = sext i20 %p_u_V to i102

ST_107: p_Val2_29 [8/8] 2.15ns
.preheader.preheader_ifconv:117  %p_Val2_29 = mul i102 %OP2_V_5_cast, %OP1_V_5_cast

ST_107: r_V_2 [1/7] 2.15ns
.preheader.preheader_ifconv:173  %r_V_2 = mul nsw i84 %OP2_V, %OP1_V_6

ST_107: OP1_V_7_cast [1/1] 0.00ns
.preheader.preheader_ifconv:174  %OP1_V_7_cast = sext i84 %r_V_2 to i102

ST_107: OP2_V_6_cast [1/1] 0.00ns
.preheader.preheader_ifconv:175  %OP2_V_6_cast = sext i20 %v_V to i102

ST_107: p_Val2_34 [8/8] 2.15ns
.preheader.preheader_ifconv:176  %p_Val2_34 = mul i102 %OP2_V_6_cast, %OP1_V_7_cast

ST_107: r_V_3 [1/7] 2.15ns
.preheader.preheader_ifconv:233  %r_V_3 = mul nsw i84 %OP2_V_7, %OP1_V_8

ST_107: OP1_V_9_cast [1/1] 0.00ns
.preheader.preheader_ifconv:234  %OP1_V_9_cast = sext i84 %r_V_3 to i102

ST_107: p_Val2_37 [8/8] 2.15ns
.preheader.preheader_ifconv:235  %p_Val2_37 = mul i102 %OP2_V_6_cast, %OP1_V_9_cast


 <State 108>: 2.15ns
ST_108: p_Val2_24 [7/8] 2.15ns
.preheader.preheader_ifconv:61  %p_Val2_24 = mul i102 %OP2_V_1_cast, %OP1_V_3_cast

ST_108: p_Val2_29 [7/8] 2.15ns
.preheader.preheader_ifconv:117  %p_Val2_29 = mul i102 %OP2_V_5_cast, %OP1_V_5_cast

ST_108: p_Val2_34 [7/8] 2.15ns
.preheader.preheader_ifconv:176  %p_Val2_34 = mul i102 %OP2_V_6_cast, %OP1_V_7_cast

ST_108: p_Val2_37 [7/8] 2.15ns
.preheader.preheader_ifconv:235  %p_Val2_37 = mul i102 %OP2_V_6_cast, %OP1_V_9_cast


 <State 109>: 2.15ns
ST_109: p_Val2_24 [6/8] 2.15ns
.preheader.preheader_ifconv:61  %p_Val2_24 = mul i102 %OP2_V_1_cast, %OP1_V_3_cast

ST_109: p_Val2_29 [6/8] 2.15ns
.preheader.preheader_ifconv:117  %p_Val2_29 = mul i102 %OP2_V_5_cast, %OP1_V_5_cast

ST_109: p_Val2_34 [6/8] 2.15ns
.preheader.preheader_ifconv:176  %p_Val2_34 = mul i102 %OP2_V_6_cast, %OP1_V_7_cast

ST_109: p_Val2_37 [6/8] 2.15ns
.preheader.preheader_ifconv:235  %p_Val2_37 = mul i102 %OP2_V_6_cast, %OP1_V_9_cast


 <State 110>: 2.15ns
ST_110: p_Val2_24 [5/8] 2.15ns
.preheader.preheader_ifconv:61  %p_Val2_24 = mul i102 %OP2_V_1_cast, %OP1_V_3_cast

ST_110: p_Val2_29 [5/8] 2.15ns
.preheader.preheader_ifconv:117  %p_Val2_29 = mul i102 %OP2_V_5_cast, %OP1_V_5_cast

ST_110: p_Val2_34 [5/8] 2.15ns
.preheader.preheader_ifconv:176  %p_Val2_34 = mul i102 %OP2_V_6_cast, %OP1_V_7_cast

ST_110: p_Val2_37 [5/8] 2.15ns
.preheader.preheader_ifconv:235  %p_Val2_37 = mul i102 %OP2_V_6_cast, %OP1_V_9_cast


 <State 111>: 2.15ns
ST_111: p_Val2_24 [4/8] 2.15ns
.preheader.preheader_ifconv:61  %p_Val2_24 = mul i102 %OP2_V_1_cast, %OP1_V_3_cast

ST_111: p_Val2_29 [4/8] 2.15ns
.preheader.preheader_ifconv:117  %p_Val2_29 = mul i102 %OP2_V_5_cast, %OP1_V_5_cast

ST_111: p_Val2_34 [4/8] 2.15ns
.preheader.preheader_ifconv:176  %p_Val2_34 = mul i102 %OP2_V_6_cast, %OP1_V_7_cast

ST_111: p_Val2_37 [4/8] 2.15ns
.preheader.preheader_ifconv:235  %p_Val2_37 = mul i102 %OP2_V_6_cast, %OP1_V_9_cast


 <State 112>: 2.15ns
ST_112: p_Val2_24 [3/8] 2.15ns
.preheader.preheader_ifconv:61  %p_Val2_24 = mul i102 %OP2_V_1_cast, %OP1_V_3_cast

ST_112: p_Val2_29 [3/8] 2.15ns
.preheader.preheader_ifconv:117  %p_Val2_29 = mul i102 %OP2_V_5_cast, %OP1_V_5_cast

ST_112: p_Val2_34 [3/8] 2.15ns
.preheader.preheader_ifconv:176  %p_Val2_34 = mul i102 %OP2_V_6_cast, %OP1_V_7_cast

ST_112: p_Val2_37 [3/8] 2.15ns
.preheader.preheader_ifconv:235  %p_Val2_37 = mul i102 %OP2_V_6_cast, %OP1_V_9_cast


 <State 113>: 2.15ns
ST_113: p_Val2_24 [2/8] 2.15ns
.preheader.preheader_ifconv:61  %p_Val2_24 = mul i102 %OP2_V_1_cast, %OP1_V_3_cast

ST_113: p_Val2_29 [2/8] 2.15ns
.preheader.preheader_ifconv:117  %p_Val2_29 = mul i102 %OP2_V_5_cast, %OP1_V_5_cast

ST_113: p_Val2_34 [2/8] 2.15ns
.preheader.preheader_ifconv:176  %p_Val2_34 = mul i102 %OP2_V_6_cast, %OP1_V_7_cast

ST_113: p_Val2_37 [2/8] 2.15ns
.preheader.preheader_ifconv:235  %p_Val2_37 = mul i102 %OP2_V_6_cast, %OP1_V_9_cast


 <State 114>: 2.15ns
ST_114: p_Val2_24 [1/8] 2.15ns
.preheader.preheader_ifconv:61  %p_Val2_24 = mul i102 %OP2_V_1_cast, %OP1_V_3_cast

ST_114: p_Val2_29 [1/8] 2.15ns
.preheader.preheader_ifconv:117  %p_Val2_29 = mul i102 %OP2_V_5_cast, %OP1_V_5_cast

ST_114: p_Val2_34 [1/8] 2.15ns
.preheader.preheader_ifconv:176  %p_Val2_34 = mul i102 %OP2_V_6_cast, %OP1_V_7_cast

ST_114: p_Val2_37 [1/8] 2.15ns
.preheader.preheader_ifconv:235  %p_Val2_37 = mul i102 %OP2_V_6_cast, %OP1_V_9_cast


 <State 115>: 4.60ns
ST_115: tmp_164_cast [1/1] 0.00ns
.preheader.preheader_ifconv:118  %tmp_164_cast = sext i102 %p_Val2_24 to i103

ST_115: tmp_165_cast [1/1] 0.00ns
.preheader.preheader_ifconv:119  %tmp_165_cast = sext i102 %p_Val2_29 to i103

ST_115: p_Val2_30 [1/1] 4.60ns
.preheader.preheader_ifconv:120  %p_Val2_30 = add i103 %tmp_165_cast, %tmp_164_cast

ST_115: p_Val2_231_cast_cast [1/1] 0.00ns
.preheader.preheader_ifconv:177  %p_Val2_231_cast_cast = sext i102 %p_Val2_34 to i103

ST_115: p_Val2_271_cast_cast [1/1] 0.00ns
.preheader.preheader_ifconv:236  %p_Val2_271_cast_cast = sext i102 %p_Val2_37 to i103

ST_115: tmp6 [1/1] 4.60ns
.preheader.preheader_ifconv:237  %tmp6 = add i103 %p_Val2_271_cast_cast, %p_Val2_231_cast_cast


 <State 116>: 4.60ns
ST_116: tmp_190_cast [1/1] 0.00ns
.preheader.preheader_ifconv:178  %tmp_190_cast = sext i103 %p_Val2_30 to i104

ST_116: tmp6_cast [1/1] 0.00ns
.preheader.preheader_ifconv:238  %tmp6_cast = sext i103 %tmp6 to i104

ST_116: p_Val2_38 [1/1] 4.60ns
.preheader.preheader_ifconv:239  %p_Val2_38 = add i104 %tmp_190_cast, %tmp6_cast

ST_116: p_Val2_39 [1/1] 0.00ns
.preheader.preheader_ifconv:240  %p_Val2_39 = call i64 @_ssdm_op_PartSelect.i64.i104.i32.i32(i104 %p_Val2_38, i32 36, i32 99)

ST_116: tmp_144 [1/1] 0.00ns
.preheader.preheader_ifconv:241  %tmp_144 = call i1 @_ssdm_op_BitSelect.i1.i104.i32(i104 %p_Val2_38, i32 35)


 <State 117>: 3.40ns
ST_117: tmp_115 [1/1] 0.00ns
.preheader.preheader_ifconv:242  %tmp_115 = zext i1 %tmp_144 to i64

ST_117: p_0 [1/1] 3.40ns
.preheader.preheader_ifconv:243  %p_0 = add nsw i64 %tmp_115, %p_Val2_39


 <State 118>: 4.01ns
ST_118: tmp_i_i [1/1] 2.71ns
.preheader.preheader_ifconv:244  %tmp_i_i = icmp eq i64 %p_0, 0

ST_118: dp_1 [9/9] 4.01ns
.preheader.preheader_ifconv:245  %dp_1 = sitofp i64 %p_0 to float


 <State 119>: 4.01ns
ST_119: dp_1 [8/9] 4.01ns
.preheader.preheader_ifconv:245  %dp_1 = sitofp i64 %p_0 to float


 <State 120>: 4.01ns
ST_120: dp_1 [7/9] 4.01ns
.preheader.preheader_ifconv:245  %dp_1 = sitofp i64 %p_0 to float


 <State 121>: 4.01ns
ST_121: dp_1 [6/9] 4.01ns
.preheader.preheader_ifconv:245  %dp_1 = sitofp i64 %p_0 to float


 <State 122>: 4.01ns
ST_122: dp_1 [5/9] 4.01ns
.preheader.preheader_ifconv:245  %dp_1 = sitofp i64 %p_0 to float


 <State 123>: 4.01ns
ST_123: dp_1 [4/9] 4.01ns
.preheader.preheader_ifconv:245  %dp_1 = sitofp i64 %p_0 to float


 <State 124>: 4.01ns
ST_124: dp_1 [3/9] 4.01ns
.preheader.preheader_ifconv:245  %dp_1 = sitofp i64 %p_0 to float


 <State 125>: 4.01ns
ST_125: dp_1 [2/9] 4.01ns
.preheader.preheader_ifconv:245  %dp_1 = sitofp i64 %p_0 to float


 <State 126>: 4.01ns
ST_126: dp_1 [1/9] 4.01ns
.preheader.preheader_ifconv:245  %dp_1 = sitofp i64 %p_0 to float


 <State 127>: 3.09ns
ST_127: res_V_1 [1/1] 0.00ns
.preheader.preheader_ifconv:246  %res_V_1 = bitcast float %dp_1 to i32

ST_127: exp_V [1/1] 0.00ns
.preheader.preheader_ifconv:247  %exp_V = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %res_V_1, i32 23, i32 30)

ST_127: exp_V_2 [1/1] 1.72ns
.preheader.preheader_ifconv:248  %exp_V_2 = add i8 -32, %exp_V

ST_127: p_Result_s_42 [1/1] 0.00ns
.preheader.preheader_ifconv:249  %p_Result_s_42 = call i32 @llvm.part.set.i32.i8(i32 %res_V_1, i8 %exp_V_2, i32 23, i32 30) nounwind

ST_127: dp [1/1] 0.00ns
.preheader.preheader_ifconv:250  %dp = bitcast i32 %p_Result_s_42 to float

ST_127: tmp_145 [1/1] 1.37ns
.preheader.preheader_ifconv:251  %tmp_145 = select i1 %tmp_i_i, float 0.000000e+00, float %dp


 <State 128>: 2.62ns
ST_128: tmp_98 [1/1] 0.00ns
.preheader.preheader_ifconv:252  %tmp_98 = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str1845)

ST_128: stg_851 [1/1] 0.00ns
.preheader.preheader_ifconv:253  call void (...)* @_ssdm_op_SpecProtocol(i32 0, [1 x i8]* @p_str1806) nounwind

ST_128: stg_852 [1/1] 2.62ns
.preheader.preheader_ifconv:254  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %p_dst_data_stream_V, float %tmp_145)

ST_128: empty_43 [1/1] 0.00ns
.preheader.preheader_ifconv:255  %empty_43 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str1845, i32 %tmp_98)

ST_128: stg_854 [1/1] 0.00ns
.preheader.preheader_ifconv:256  br label %._crit_edge758



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105
	State 106
	State 107
	State 108
	State 109
	State 110
	State 111
	State 112
	State 113
	State 114
	State 115
	State 116
	State 117
	State 118
	State 119
	State 120
	State 121
	State 122
	State 123
	State 124
	State 125
	State 126
	State 127
	State 128


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
