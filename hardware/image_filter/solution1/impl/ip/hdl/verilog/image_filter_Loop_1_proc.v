// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module image_filter_Loop_1_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        img_resized_data_stream_0_V_dout,
        img_resized_data_stream_0_V_empty_n,
        img_resized_data_stream_0_V_read,
        img_0_2_data_stream_0_V_dout,
        img_0_2_data_stream_0_V_empty_n,
        img_0_2_data_stream_0_V_read,
        p_read,
        p_read1,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 4'b1;
parameter    ap_ST_st2_fsm_1 = 4'b10;
parameter    ap_ST_pp0_stg0_fsm_2 = 4'b100;
parameter    ap_ST_st26_fsm_3 = 4'b1000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv9_1E0 = 9'b111100000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv10_280 = 10'b1010000000;
parameter    ap_const_lv10_1 = 10'b1;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv54_0 = 54'b000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv63_0 = 63'b000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv12_433 = 12'b10000110011;
parameter    ap_const_lv12_20 = 12'b100000;
parameter    ap_const_lv12_FE0 = 12'b111111100000;
parameter    ap_const_lv12_FDF = 12'b111111011111;
parameter    ap_const_lv12_36 = 12'b110110;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv54_3FFFFFFFFFFFFF = 54'b111111111111111111111111111111111111111111111111111111;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] img_resized_data_stream_0_V_dout;
input   img_resized_data_stream_0_V_empty_n;
output   img_resized_data_stream_0_V_read;
input  [31:0] img_0_2_data_stream_0_V_dout;
input   img_0_2_data_stream_0_V_empty_n;
output   img_0_2_data_stream_0_V_read;
input  [11:0] p_read;
input  [11:0] p_read1;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg img_resized_data_stream_0_V_read;
reg img_0_2_data_stream_0_V_read;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm = 4'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_23;
reg   [9:0] asd_0_i_reg_139;
reg    ap_sig_bdd_48;
wire   [0:0] or_cond_45_fu_187_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_60;
wire   [8:0] i_fu_193_p2;
reg   [8:0] i_reg_536;
wire   [0:0] tmp_6_fu_206_p2;
reg   [0:0] tmp_6_reg_541;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_2;
reg    ap_sig_bdd_71;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg   [0:0] tmp_8_reg_550;
reg    ap_sig_bdd_87;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_reg_ppiten_pp0_it3 = 1'b0;
reg    ap_reg_ppiten_pp0_it4 = 1'b0;
reg    ap_reg_ppiten_pp0_it5 = 1'b0;
reg    ap_reg_ppiten_pp0_it6 = 1'b0;
reg    ap_reg_ppiten_pp0_it7 = 1'b0;
reg    ap_reg_ppiten_pp0_it8 = 1'b0;
reg    ap_reg_ppiten_pp0_it9 = 1'b0;
reg    ap_reg_ppiten_pp0_it10 = 1'b0;
reg    ap_reg_ppiten_pp0_it11 = 1'b0;
reg    ap_reg_ppiten_pp0_it12 = 1'b0;
reg    ap_reg_ppiten_pp0_it13 = 1'b0;
reg    ap_reg_ppiten_pp0_it14 = 1'b0;
reg    ap_reg_ppiten_pp0_it15 = 1'b0;
reg    ap_reg_ppiten_pp0_it16 = 1'b0;
reg    ap_reg_ppiten_pp0_it17 = 1'b0;
reg    ap_reg_ppiten_pp0_it18 = 1'b0;
reg    ap_reg_ppiten_pp0_it19 = 1'b0;
reg    ap_reg_ppiten_pp0_it20 = 1'b0;
reg    ap_reg_ppiten_pp0_it21 = 1'b0;
reg    ap_reg_ppiten_pp0_it22 = 1'b0;
reg   [0:0] ap_reg_ppstg_tmp_6_reg_541_pp0_it1;
reg   [0:0] ap_reg_ppstg_tmp_6_reg_541_pp0_it2;
reg   [0:0] ap_reg_ppstg_tmp_6_reg_541_pp0_it3;
reg   [0:0] ap_reg_ppstg_tmp_6_reg_541_pp0_it4;
reg   [0:0] ap_reg_ppstg_tmp_6_reg_541_pp0_it5;
reg   [0:0] ap_reg_ppstg_tmp_6_reg_541_pp0_it6;
reg   [0:0] ap_reg_ppstg_tmp_6_reg_541_pp0_it7;
reg   [0:0] ap_reg_ppstg_tmp_6_reg_541_pp0_it8;
reg   [0:0] ap_reg_ppstg_tmp_6_reg_541_pp0_it9;
reg   [0:0] ap_reg_ppstg_tmp_6_reg_541_pp0_it10;
reg   [0:0] ap_reg_ppstg_tmp_6_reg_541_pp0_it11;
reg   [0:0] ap_reg_ppstg_tmp_6_reg_541_pp0_it12;
reg   [0:0] ap_reg_ppstg_tmp_6_reg_541_pp0_it13;
reg   [0:0] ap_reg_ppstg_tmp_6_reg_541_pp0_it14;
reg   [0:0] ap_reg_ppstg_tmp_6_reg_541_pp0_it15;
reg   [0:0] ap_reg_ppstg_tmp_6_reg_541_pp0_it16;
reg   [0:0] ap_reg_ppstg_tmp_6_reg_541_pp0_it17;
reg   [0:0] ap_reg_ppstg_tmp_6_reg_541_pp0_it18;
reg   [0:0] ap_reg_ppstg_tmp_6_reg_541_pp0_it19;
reg   [0:0] ap_reg_ppstg_tmp_6_reg_541_pp0_it20;
reg   [0:0] ap_reg_ppstg_tmp_6_reg_541_pp0_it21;
wire   [9:0] asd_fu_212_p2;
wire   [0:0] tmp_8_fu_218_p2;
reg   [0:0] ap_reg_ppstg_tmp_8_reg_550_pp0_it1;
reg   [0:0] ap_reg_ppstg_tmp_8_reg_550_pp0_it2;
reg   [0:0] ap_reg_ppstg_tmp_8_reg_550_pp0_it3;
reg   [0:0] ap_reg_ppstg_tmp_8_reg_550_pp0_it4;
reg   [0:0] ap_reg_ppstg_tmp_8_reg_550_pp0_it5;
reg   [0:0] ap_reg_ppstg_tmp_8_reg_550_pp0_it6;
reg   [0:0] ap_reg_ppstg_tmp_8_reg_550_pp0_it7;
reg   [0:0] ap_reg_ppstg_tmp_8_reg_550_pp0_it8;
reg   [0:0] ap_reg_ppstg_tmp_8_reg_550_pp0_it9;
reg   [0:0] ap_reg_ppstg_tmp_8_reg_550_pp0_it10;
reg   [0:0] ap_reg_ppstg_tmp_8_reg_550_pp0_it11;
reg   [0:0] ap_reg_ppstg_tmp_8_reg_550_pp0_it12;
reg   [0:0] ap_reg_ppstg_tmp_8_reg_550_pp0_it13;
reg   [0:0] ap_reg_ppstg_tmp_8_reg_550_pp0_it14;
reg   [0:0] ap_reg_ppstg_tmp_8_reg_550_pp0_it15;
reg   [0:0] ap_reg_ppstg_tmp_8_reg_550_pp0_it16;
reg   [0:0] ap_reg_ppstg_tmp_8_reg_550_pp0_it17;
reg   [0:0] ap_reg_ppstg_tmp_8_reg_550_pp0_it18;
reg   [0:0] ap_reg_ppstg_tmp_8_reg_550_pp0_it19;
reg   [0:0] ap_reg_ppstg_tmp_8_reg_550_pp0_it20;
reg   [0:0] ap_reg_ppstg_tmp_8_reg_550_pp0_it21;
reg   [31:0] img_resized_data_stream_0_V_r_reg_554;
reg   [31:0] img_0_2_data_stream_0_V_read_reg_559;
wire   [31:0] grp_fu_151_p2;
reg   [31:0] temp_reg_564;
wire   [31:0] grp_fu_155_p2;
reg   [31:0] v_assign_reg_570;
wire   [62:0] tmp_147_fu_227_p1;
reg   [62:0] tmp_147_reg_575;
reg   [0:0] isneg_reg_580;
reg   [0:0] ap_reg_ppstg_isneg_reg_580_pp0_it18;
reg   [10:0] exp_tmp_V_reg_587;
wire   [51:0] tmp_149_fu_249_p1;
reg   [51:0] tmp_149_reg_592;
wire   [53:0] p_Val2_44_fu_273_p3;
reg   [53:0] p_Val2_44_reg_597;
reg   [53:0] ap_reg_ppstg_p_Val2_44_reg_597_pp0_it19;
wire   [0:0] tmp_18_fu_280_p2;
reg   [0:0] tmp_18_reg_604;
wire   [0:0] tmp_20_fu_291_p2;
reg   [0:0] tmp_20_reg_610;
reg   [0:0] ap_reg_ppstg_tmp_20_reg_610_pp0_it19;
wire   [11:0] tmp_21_fu_297_p2;
reg   [11:0] tmp_21_reg_617;
wire   [11:0] tmp_22_fu_303_p2;
reg   [11:0] tmp_22_reg_623;
wire   [0:0] tmp_23_fu_309_p2;
reg   [0:0] tmp_23_reg_628;
wire   [0:0] tmp_151_fu_325_p3;
reg   [0:0] tmp_151_reg_634;
wire  signed [31:0] sh_amt_cast_fu_338_p1;
reg  signed [31:0] sh_amt_cast_reg_639;
wire   [0:0] tmp_25_fu_342_p2;
reg   [0:0] tmp_25_reg_644;
wire   [0:0] icmp_fu_358_p2;
reg   [0:0] icmp_reg_649;
wire   [53:0] tmp_29_fu_368_p2;
reg   [53:0] tmp_29_reg_654;
wire   [53:0] this_assign_cast_fu_373_p3;
reg   [53:0] this_assign_cast_reg_659;
wire   [0:0] qb_fu_385_p3;
reg   [0:0] qb_reg_664;
wire   [0:0] sel_tmp2_fu_396_p2;
reg   [0:0] sel_tmp2_reg_669;
wire   [0:0] sel_tmp6_demorgan_fu_401_p2;
reg   [0:0] sel_tmp6_demorgan_reg_674;
wire   [63:0] tmp_32_fu_411_p2;
reg   [63:0] tmp_32_reg_680;
wire  signed [54:0] p_Val2_5_fu_429_p2;
reg  signed [54:0] p_Val2_5_reg_685;
wire   [0:0] sel_tmp7_fu_440_p2;
reg   [0:0] sel_tmp7_reg_690;
wire   [0:0] sel_tmp14_fu_455_p2;
reg   [0:0] sel_tmp14_reg_695;
wire   [53:0] newSel3_fu_460_p3;
reg   [53:0] newSel3_reg_701;
wire   [63:0] p_Val2_45_fu_482_p3;
reg   [63:0] p_Val2_45_reg_706;
reg   [8:0] i_0_i_reg_128;
reg    ap_sig_cseq_ST_st26_fsm_3;
reg    ap_sig_bdd_337;
reg   [63:0] acc_V_1_fu_96;
wire   [63:0] acc_V_fu_493_p2;
reg   [63:0] p_Val2_s_fu_100;
wire   [31:0] grp_fu_151_p0;
wire   [31:0] grp_fu_151_p1;
wire   [31:0] grp_fu_155_p0;
wire   [31:0] grp_fu_155_p1;
wire   [31:0] grp_fu_159_p0;
wire   [11:0] i_0_i_cast_cast_fu_172_p1;
wire   [0:0] tmp_1_fu_176_p2;
wire   [0:0] tmp_3_fu_182_p2;
wire   [11:0] asd_0_i_cast_cast_fu_202_p1;
wire   [63:0] grp_fu_159_p1;
wire   [63:0] ireg_V_fu_223_p1;
wire   [52:0] tmp_16_fu_256_p3;
wire   [53:0] p_Result_s_fu_263_p1;
wire   [53:0] man_V_1_fu_267_p2;
wire   [11:0] tmp_15_fu_253_p1;
wire   [11:0] F2_fu_285_p2;
wire   [11:0] tmp_34_fu_315_p2;
wire   [31:0] tmp_34_cast_fu_321_p1;
wire   [11:0] sh_amt_fu_333_p3;
wire   [5:0] tmp_150_fu_348_p4;
wire   [53:0] tmp_28_fu_364_p1;
wire   [0:0] tmp_33_fu_380_p2;
wire   [0:0] sel_tmp1_fu_391_p2;
wire  signed [63:0] tmp_24_fu_405_p1;
wire   [63:0] tmp_31_fu_408_p1;
wire   [53:0] p_Val2_3_fu_417_p3;
wire   [54:0] tmp_37_cast_fu_426_p1;
wire  signed [54:0] p_Val2_3_cast_fu_422_p1;
wire   [0:0] sel_tmp6_fu_435_p2;
wire   [0:0] sel_tmp13_demorgan_fu_445_p2;
wire   [0:0] sel_tmp13_fu_449_p2;
wire  signed [63:0] p_Val2_5_cast_fu_466_p1;
wire   [0:0] or_cond_fu_475_p2;
wire   [63:0] newSel_fu_469_p3;
wire  signed [63:0] newSel3_cast_fu_479_p1;
reg    grp_fu_151_ce;
reg    grp_fu_155_ce;
reg    grp_fu_159_ce;
reg   [3:0] ap_NS_fsm;


image_filter_fsub_32ns_32ns_32_9_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
image_filter_fsub_32ns_32ns_32_9_full_dsp_U51(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_151_p0 ),
    .din1( grp_fu_151_p1 ),
    .ce( grp_fu_151_ce ),
    .dout( grp_fu_151_p2 )
);

image_filter_fmul_32ns_32ns_32_5_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
image_filter_fmul_32ns_32ns_32_5_max_dsp_U52(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_155_p0 ),
    .din1( grp_fu_155_p1 ),
    .ce( grp_fu_155_ce ),
    .dout( grp_fu_155_p2 )
);

image_filter_fpext_32ns_64_2 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
image_filter_fpext_32ns_64_2_U53(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_159_p0 ),
    .ce( grp_fu_159_ce ),
    .dout( grp_fu_159_p1 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (or_cond_45_fu_187_p2 == ap_const_lv1_0))) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ((tmp_6_fu_206_p2 == ap_const_lv1_0) | (~(tmp_6_fu_206_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_8_fu_218_p2))))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(or_cond_45_fu_187_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~((tmp_6_fu_206_p2 == ap_const_lv1_0) | (~(tmp_6_fu_206_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_8_fu_218_p2))))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(or_cond_45_fu_187_p2 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ((tmp_6_fu_206_p2 == ap_const_lv1_0) | (~(tmp_6_fu_206_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_8_fu_218_p2)))))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it10 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it10
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
            ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
        end
    end
end

/// ap_reg_ppiten_pp0_it11 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it11
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
            ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
        end
    end
end

/// ap_reg_ppiten_pp0_it12 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it12
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
            ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
        end
    end
end

/// ap_reg_ppiten_pp0_it13 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it13
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
            ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
        end
    end
end

/// ap_reg_ppiten_pp0_it14 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it14
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
            ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
        end
    end
end

/// ap_reg_ppiten_pp0_it15 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it15
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
            ap_reg_ppiten_pp0_it15 <= ap_reg_ppiten_pp0_it14;
        end
    end
end

/// ap_reg_ppiten_pp0_it16 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it16
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
            ap_reg_ppiten_pp0_it16 <= ap_reg_ppiten_pp0_it15;
        end
    end
end

/// ap_reg_ppiten_pp0_it17 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it17
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
            ap_reg_ppiten_pp0_it17 <= ap_reg_ppiten_pp0_it16;
        end
    end
end

/// ap_reg_ppiten_pp0_it18 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it18
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
            ap_reg_ppiten_pp0_it18 <= ap_reg_ppiten_pp0_it17;
        end
    end
end

/// ap_reg_ppiten_pp0_it19 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it19
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it19 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
            ap_reg_ppiten_pp0_it19 <= ap_reg_ppiten_pp0_it18;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end
    end
end

/// ap_reg_ppiten_pp0_it20 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it20
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it20 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
            ap_reg_ppiten_pp0_it20 <= ap_reg_ppiten_pp0_it19;
        end
    end
end

/// ap_reg_ppiten_pp0_it21 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it21
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it21 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
            ap_reg_ppiten_pp0_it21 <= ap_reg_ppiten_pp0_it20;
        end
    end
end

/// ap_reg_ppiten_pp0_it22 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it22
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it22 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
            ap_reg_ppiten_pp0_it22 <= ap_reg_ppiten_pp0_it21;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(or_cond_45_fu_187_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it22 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
            ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
        end
    end
end

/// ap_reg_ppiten_pp0_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it4
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
            ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
        end
    end
end

/// ap_reg_ppiten_pp0_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it5
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
            ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
        end
    end
end

/// ap_reg_ppiten_pp0_it6 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it6
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
            ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
        end
    end
end

/// ap_reg_ppiten_pp0_it7 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it7
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
            ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
        end
    end
end

/// ap_reg_ppiten_pp0_it8 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it8
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
            ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
        end
    end
end

/// ap_reg_ppiten_pp0_it9 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it9
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
            ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it22) & ~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_6_reg_541_pp0_it21) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_8_reg_550_pp0_it21))) begin
        acc_V_1_fu_96 <= acc_V_fu_493_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_48)) begin
        acc_V_1_fu_96 <= ap_const_lv64_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(or_cond_45_fu_187_p2 == ap_const_lv1_0))) begin
        asd_0_i_reg_139 <= ap_const_lv10_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(tmp_6_fu_206_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_8_fu_218_p2))) begin
        asd_0_i_reg_139 <= asd_fu_212_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_3)) begin
        i_0_i_reg_128 <= i_reg_536;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_48)) begin
        i_0_i_reg_128 <= ap_const_lv9_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it22) & ~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_6_reg_541_pp0_it21) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_8_reg_550_pp0_it21))) begin
        p_Val2_s_fu_100 <= acc_V_fu_493_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_48)) begin
        p_Val2_s_fu_100 <= ap_const_lv64_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        ap_reg_ppstg_isneg_reg_580_pp0_it18 <= isneg_reg_580;
        ap_reg_ppstg_p_Val2_44_reg_597_pp0_it19 <= p_Val2_44_reg_597;
        ap_reg_ppstg_tmp_20_reg_610_pp0_it19 <= tmp_20_reg_610;
        ap_reg_ppstg_tmp_6_reg_541_pp0_it10 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it9;
        ap_reg_ppstg_tmp_6_reg_541_pp0_it11 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it10;
        ap_reg_ppstg_tmp_6_reg_541_pp0_it12 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it11;
        ap_reg_ppstg_tmp_6_reg_541_pp0_it13 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it12;
        ap_reg_ppstg_tmp_6_reg_541_pp0_it14 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it13;
        ap_reg_ppstg_tmp_6_reg_541_pp0_it15 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it14;
        ap_reg_ppstg_tmp_6_reg_541_pp0_it16 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it15;
        ap_reg_ppstg_tmp_6_reg_541_pp0_it17 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it16;
        ap_reg_ppstg_tmp_6_reg_541_pp0_it18 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it17;
        ap_reg_ppstg_tmp_6_reg_541_pp0_it19 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it18;
        ap_reg_ppstg_tmp_6_reg_541_pp0_it2 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it1;
        ap_reg_ppstg_tmp_6_reg_541_pp0_it20 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it19;
        ap_reg_ppstg_tmp_6_reg_541_pp0_it21 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it20;
        ap_reg_ppstg_tmp_6_reg_541_pp0_it3 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it2;
        ap_reg_ppstg_tmp_6_reg_541_pp0_it4 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it3;
        ap_reg_ppstg_tmp_6_reg_541_pp0_it5 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it4;
        ap_reg_ppstg_tmp_6_reg_541_pp0_it6 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it5;
        ap_reg_ppstg_tmp_6_reg_541_pp0_it7 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it6;
        ap_reg_ppstg_tmp_6_reg_541_pp0_it8 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it7;
        ap_reg_ppstg_tmp_6_reg_541_pp0_it9 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it8;
        ap_reg_ppstg_tmp_8_reg_550_pp0_it10 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it9;
        ap_reg_ppstg_tmp_8_reg_550_pp0_it11 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it10;
        ap_reg_ppstg_tmp_8_reg_550_pp0_it12 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it11;
        ap_reg_ppstg_tmp_8_reg_550_pp0_it13 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it12;
        ap_reg_ppstg_tmp_8_reg_550_pp0_it14 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it13;
        ap_reg_ppstg_tmp_8_reg_550_pp0_it15 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it14;
        ap_reg_ppstg_tmp_8_reg_550_pp0_it16 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it15;
        ap_reg_ppstg_tmp_8_reg_550_pp0_it17 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it16;
        ap_reg_ppstg_tmp_8_reg_550_pp0_it18 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it17;
        ap_reg_ppstg_tmp_8_reg_550_pp0_it19 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it18;
        ap_reg_ppstg_tmp_8_reg_550_pp0_it2 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it1;
        ap_reg_ppstg_tmp_8_reg_550_pp0_it20 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it19;
        ap_reg_ppstg_tmp_8_reg_550_pp0_it21 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it20;
        ap_reg_ppstg_tmp_8_reg_550_pp0_it3 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it2;
        ap_reg_ppstg_tmp_8_reg_550_pp0_it4 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it3;
        ap_reg_ppstg_tmp_8_reg_550_pp0_it5 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it4;
        ap_reg_ppstg_tmp_8_reg_550_pp0_it6 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it5;
        ap_reg_ppstg_tmp_8_reg_550_pp0_it7 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it6;
        ap_reg_ppstg_tmp_8_reg_550_pp0_it8 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it7;
        ap_reg_ppstg_tmp_8_reg_550_pp0_it9 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it8;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_tmp_6_reg_541_pp0_it1 <= tmp_6_reg_541;
        ap_reg_ppstg_tmp_8_reg_550_pp0_it1 <= tmp_8_reg_550;
        tmp_6_reg_541 <= tmp_6_fu_206_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_6_reg_541_pp0_it16) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_8_reg_550_pp0_it16))) begin
        exp_tmp_V_reg_587 <= {{ireg_V_fu_223_p1[ap_const_lv32_3E : ap_const_lv32_34]}};
        isneg_reg_580 <= ireg_V_fu_223_p1[ap_const_lv32_3F];
        tmp_147_reg_575 <= tmp_147_fu_227_p1;
        tmp_149_reg_592 <= tmp_149_fu_249_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_reg_536 <= i_fu_193_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_6_reg_541_pp0_it18) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_8_reg_550_pp0_it18))) begin
        icmp_reg_649 <= icmp_fu_358_p2;
        qb_reg_664 <= qb_fu_385_p3;
        sel_tmp2_reg_669 <= sel_tmp2_fu_396_p2;
        sel_tmp6_demorgan_reg_674 <= sel_tmp6_demorgan_fu_401_p2;
        sh_amt_cast_reg_639 <= sh_amt_cast_fu_338_p1;
        this_assign_cast_reg_659 <= this_assign_cast_fu_373_p3;
        tmp_25_reg_644 <= tmp_25_fu_342_p2;
        tmp_29_reg_654 <= tmp_29_fu_368_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(tmp_6_reg_541 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_8_reg_550) & ~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        img_0_2_data_stream_0_V_read_reg_559 <= img_0_2_data_stream_0_V_dout;
        img_resized_data_stream_0_V_r_reg_554 <= img_resized_data_stream_0_V_dout;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_6_reg_541_pp0_it19) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_8_reg_550_pp0_it19))) begin
        newSel3_reg_701 <= newSel3_fu_460_p3;
        p_Val2_5_reg_685 <= p_Val2_5_fu_429_p2;
        sel_tmp14_reg_695 <= sel_tmp14_fu_455_p2;
        sel_tmp7_reg_690 <= sel_tmp7_fu_440_p2;
        tmp_32_reg_680 <= tmp_32_fu_411_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_6_reg_541_pp0_it17) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_8_reg_550_pp0_it17))) begin
        p_Val2_44_reg_597 <= p_Val2_44_fu_273_p3;
        tmp_151_reg_634 <= tmp_151_fu_325_p3;
        tmp_18_reg_604 <= tmp_18_fu_280_p2;
        tmp_20_reg_610 <= tmp_20_fu_291_p2;
        tmp_21_reg_617 <= tmp_21_fu_297_p2;
        tmp_22_reg_623 <= tmp_22_fu_303_p2;
        tmp_23_reg_628 <= tmp_23_fu_309_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_6_reg_541_pp0_it20) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_8_reg_550_pp0_it20))) begin
        p_Val2_45_reg_706 <= p_Val2_45_fu_482_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_6_reg_541_pp0_it9) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_8_reg_550_pp0_it9))) begin
        temp_reg_564 <= grp_fu_151_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(tmp_6_fu_206_p2 == ap_const_lv1_0))) begin
        tmp_8_reg_550 <= tmp_8_fu_218_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_6_reg_541_pp0_it14) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_8_reg_550_pp0_it14))) begin
        v_assign_reg_570 <= grp_fu_155_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or or_cond_45_fu_187_p2 or ap_sig_cseq_ST_st2_fsm_1)
begin
    if (((ap_const_logic_1 == ap_done_reg) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (or_cond_45_fu_187_p2 == ap_const_lv1_0)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (or_cond_45_fu_187_p2 or ap_sig_cseq_ST_st2_fsm_1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (or_cond_45_fu_187_p2 == ap_const_lv1_0))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_2 assign process. ///
always @ (ap_sig_bdd_71)
begin
    if (ap_sig_bdd_71) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_23)
begin
    if (ap_sig_bdd_23) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st26_fsm_3 assign process. ///
always @ (ap_sig_bdd_337)
begin
    if (ap_sig_bdd_337) begin
        ap_sig_cseq_ST_st26_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_60)
begin
    if (ap_sig_bdd_60) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// grp_fu_151_ce assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_87 or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        grp_fu_151_ce = ap_const_logic_1;
    end else begin
        grp_fu_151_ce = ap_const_logic_0;
    end
end

/// grp_fu_155_ce assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_87 or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        grp_fu_155_ce = ap_const_logic_1;
    end else begin
        grp_fu_155_ce = ap_const_logic_0;
    end
end

/// grp_fu_159_ce assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_87 or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        grp_fu_159_ce = ap_const_logic_1;
    end else begin
        grp_fu_159_ce = ap_const_logic_0;
    end
end

/// img_0_2_data_stream_0_V_read assign process. ///
always @ (tmp_6_reg_541 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or tmp_8_reg_550 or ap_sig_bdd_87 or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(tmp_6_reg_541 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_8_reg_550) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        img_0_2_data_stream_0_V_read = ap_const_logic_1;
    end else begin
        img_0_2_data_stream_0_V_read = ap_const_logic_0;
    end
end

/// img_resized_data_stream_0_V_read assign process. ///
always @ (tmp_6_reg_541 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or tmp_8_reg_550 or ap_sig_bdd_87 or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(tmp_6_reg_541 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_8_reg_550) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        img_resized_data_stream_0_V_read = ap_const_logic_1;
    end else begin
        img_resized_data_stream_0_V_read = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_CS_fsm or ap_sig_bdd_48 or or_cond_45_fu_187_p2 or tmp_6_fu_206_p2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_87 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it21 or ap_reg_ppiten_pp0_it22 or tmp_8_fu_218_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_48) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if ((or_cond_45_fu_187_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_pp0_stg0_fsm_2 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp0_it22) & ~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it21)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ((tmp_6_fu_206_p2 == ap_const_lv1_0) | (~(tmp_6_fu_206_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_8_fu_218_p2))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it22) & ~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it21)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ((tmp_6_fu_206_p2 == ap_const_lv1_0) | (~(tmp_6_fu_206_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_8_fu_218_p2))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_st26_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_st26_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_285_p2 = (ap_const_lv12_433 - tmp_15_fu_253_p1);
assign acc_V_fu_493_p2 = (p_Val2_s_fu_100 + p_Val2_45_reg_706);
assign ap_return = acc_V_1_fu_96;

/// ap_sig_bdd_23 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_23 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_337 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_337 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_48 assign process. ///
always @ (ap_start or ap_done_reg)
begin
    ap_sig_bdd_48 = ((ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end

/// ap_sig_bdd_60 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_60 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_71 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_71 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_87 assign process. ///
always @ (img_resized_data_stream_0_V_empty_n or img_0_2_data_stream_0_V_empty_n or tmp_6_reg_541 or tmp_8_reg_550)
begin
    ap_sig_bdd_87 = (((img_resized_data_stream_0_V_empty_n == ap_const_logic_0) & ~(tmp_6_reg_541 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_8_reg_550)) | (~(tmp_6_reg_541 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_8_reg_550) & (img_0_2_data_stream_0_V_empty_n == ap_const_logic_0)));
end
assign asd_0_i_cast_cast_fu_202_p1 = asd_0_i_reg_139;
assign asd_fu_212_p2 = (asd_0_i_reg_139 + ap_const_lv10_1);
assign grp_fu_151_p0 = img_resized_data_stream_0_V_r_reg_554;
assign grp_fu_151_p1 = img_0_2_data_stream_0_V_read_reg_559;
assign grp_fu_155_p0 = temp_reg_564;
assign grp_fu_155_p1 = temp_reg_564;
assign grp_fu_159_p0 = v_assign_reg_570;
assign i_0_i_cast_cast_fu_172_p1 = i_0_i_reg_128;
assign i_fu_193_p2 = (i_0_i_reg_128 + ap_const_lv9_1);
assign icmp_fu_358_p2 = (tmp_150_fu_348_p4 == ap_const_lv6_0? 1'b1: 1'b0);
assign ireg_V_fu_223_p1 = grp_fu_159_p1;
assign man_V_1_fu_267_p2 = (ap_const_lv54_0 - p_Result_s_fu_263_p1);
assign newSel3_cast_fu_479_p1 = $signed(newSel3_reg_701);
assign newSel3_fu_460_p3 = ((sel_tmp2_reg_669[0:0]===1'b1)? ap_reg_ppstg_p_Val2_44_reg_597_pp0_it19: ap_const_lv54_0);
assign newSel_fu_469_p3 = ((sel_tmp14_reg_695[0:0]===1'b1)? tmp_32_reg_680: p_Val2_5_cast_fu_466_p1);
assign or_cond_45_fu_187_p2 = (tmp_1_fu_176_p2 & tmp_3_fu_182_p2);
assign or_cond_fu_475_p2 = (sel_tmp14_reg_695 | sel_tmp7_reg_690);
assign p_Result_s_fu_263_p1 = tmp_16_fu_256_p3;
assign p_Val2_3_cast_fu_422_p1 = $signed(p_Val2_3_fu_417_p3);
assign p_Val2_3_fu_417_p3 = ((tmp_25_reg_644[0:0]===1'b1)? tmp_29_reg_654: this_assign_cast_reg_659);
assign p_Val2_44_fu_273_p3 = ((isneg_reg_580[0:0]===1'b1)? man_V_1_fu_267_p2: p_Result_s_fu_263_p1);
assign p_Val2_45_fu_482_p3 = ((or_cond_fu_475_p2[0:0]===1'b1)? newSel_fu_469_p3: newSel3_cast_fu_479_p1);
assign p_Val2_5_cast_fu_466_p1 = p_Val2_5_reg_685;
assign p_Val2_5_fu_429_p2 = ($signed(tmp_37_cast_fu_426_p1) + $signed(p_Val2_3_cast_fu_422_p1));
assign qb_fu_385_p3 = ((tmp_33_fu_380_p2[0:0]===1'b1)? ap_reg_ppstg_isneg_reg_580_pp0_it18: tmp_151_reg_634);
assign sel_tmp13_demorgan_fu_445_p2 = (sel_tmp6_demorgan_reg_674 | ap_reg_ppstg_tmp_20_reg_610_pp0_it19);
assign sel_tmp13_fu_449_p2 = (sel_tmp13_demorgan_fu_445_p2 ^ ap_const_lv1_1);
assign sel_tmp14_fu_455_p2 = (icmp_reg_649 & sel_tmp13_fu_449_p2);
assign sel_tmp1_fu_391_p2 = (tmp_18_reg_604 ^ ap_const_lv1_1);
assign sel_tmp2_fu_396_p2 = (tmp_23_reg_628 & sel_tmp1_fu_391_p2);
assign sel_tmp6_demorgan_fu_401_p2 = (tmp_18_reg_604 | tmp_23_reg_628);
assign sel_tmp6_fu_435_p2 = (sel_tmp6_demorgan_reg_674 ^ ap_const_lv1_1);
assign sel_tmp7_fu_440_p2 = (ap_reg_ppstg_tmp_20_reg_610_pp0_it19 & sel_tmp6_fu_435_p2);
assign sh_amt_cast_fu_338_p1 = $signed(sh_amt_fu_333_p3);
assign sh_amt_fu_333_p3 = ((tmp_20_reg_610[0:0]===1'b1)? tmp_21_reg_617: tmp_22_reg_623);
assign this_assign_cast_fu_373_p3 = ((ap_reg_ppstg_isneg_reg_580_pp0_it18[0:0]===1'b1)? ap_const_lv54_3FFFFFFFFFFFFF: ap_const_lv54_0);
assign tmp_147_fu_227_p1 = ireg_V_fu_223_p1[62:0];
assign tmp_149_fu_249_p1 = ireg_V_fu_223_p1[51:0];
assign tmp_150_fu_348_p4 = {{sh_amt_fu_333_p3[ap_const_lv32_B : ap_const_lv32_6]}};
assign tmp_151_fu_325_p3 = p_Val2_44_fu_273_p3[tmp_34_cast_fu_321_p1];
assign tmp_15_fu_253_p1 = exp_tmp_V_reg_587;
assign tmp_16_fu_256_p3 = {{ap_const_lv1_1}, {tmp_149_reg_592}};
assign tmp_18_fu_280_p2 = (tmp_147_reg_575 == ap_const_lv63_0? 1'b1: 1'b0);
assign tmp_1_fu_176_p2 = (i_0_i_reg_128 < ap_const_lv9_1E0? 1'b1: 1'b0);
assign tmp_20_fu_291_p2 = ($signed(F2_fu_285_p2) > $signed(12'b100000)? 1'b1: 1'b0);
assign tmp_21_fu_297_p2 = ($signed(ap_const_lv12_FE0) + $signed(F2_fu_285_p2));
assign tmp_22_fu_303_p2 = (ap_const_lv12_20 - F2_fu_285_p2);
assign tmp_23_fu_309_p2 = (F2_fu_285_p2 == ap_const_lv12_20? 1'b1: 1'b0);
assign tmp_24_fu_405_p1 = $signed(ap_reg_ppstg_p_Val2_44_reg_597_pp0_it19);
assign tmp_25_fu_342_p2 = (sh_amt_fu_333_p3 < ap_const_lv12_36? 1'b1: 1'b0);
assign tmp_28_fu_364_p1 = $unsigned(sh_amt_cast_fu_338_p1);
assign tmp_29_fu_368_p2 = $signed(p_Val2_44_reg_597) >>> tmp_28_fu_364_p1;
assign tmp_31_fu_408_p1 = $unsigned(sh_amt_cast_reg_639);
assign tmp_32_fu_411_p2 = tmp_24_fu_405_p1 << tmp_31_fu_408_p1;
assign tmp_33_fu_380_p2 = ($signed(tmp_21_reg_617) > $signed(12'b110110)? 1'b1: 1'b0);
assign tmp_34_cast_fu_321_p1 = tmp_34_fu_315_p2;
assign tmp_34_fu_315_p2 = ($signed(ap_const_lv12_FDF) + $signed(F2_fu_285_p2));
assign tmp_37_cast_fu_426_p1 = qb_reg_664;
assign tmp_3_fu_182_p2 = (i_0_i_cast_cast_fu_172_p1 < p_read1? 1'b1: 1'b0);
assign tmp_6_fu_206_p2 = (asd_0_i_reg_139 < ap_const_lv10_280? 1'b1: 1'b0);
assign tmp_8_fu_218_p2 = (asd_0_i_cast_cast_fu_202_p1 < p_read? 1'b1: 1'b0);


endmodule //image_filter_Loop_1_proc

