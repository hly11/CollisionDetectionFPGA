-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.1
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity image_filter_Loop_1_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    img_resized_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    img_resized_data_stream_0_V_empty_n : IN STD_LOGIC;
    img_resized_data_stream_0_V_read : OUT STD_LOGIC;
    img_0_2_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    img_0_2_data_stream_0_V_empty_n : IN STD_LOGIC;
    img_0_2_data_stream_0_V_read : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (11 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (11 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of image_filter_Loop_1_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_pp0_stg0_fsm_2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_st26_fsm_3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv9_1E0 : STD_LOGIC_VECTOR (8 downto 0) := "111100000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv10_280 : STD_LOGIC_VECTOR (9 downto 0) := "1010000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_20 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_const_lv12_FE0 : STD_LOGIC_VECTOR (11 downto 0) := "111111100000";
    constant ap_const_lv12_FDF : STD_LOGIC_VECTOR (11 downto 0) := "111111011111";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv54_3FFFFFFFFFFFFF : STD_LOGIC_VECTOR (53 downto 0) := "111111111111111111111111111111111111111111111111111111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_23 : BOOLEAN;
    signal asd_0_i_reg_139 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_bdd_48 : BOOLEAN;
    signal or_cond_45_fu_187_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_60 : BOOLEAN;
    signal i_fu_193_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_reg_536 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_6_fu_206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_541 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_71 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal tmp_8_reg_550 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_87 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it8 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it9 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it10 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it11 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it12 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it13 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it14 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it15 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it16 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it17 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it18 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it19 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it20 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it21 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it22 : STD_LOGIC := '0';
    signal ap_reg_ppstg_tmp_6_reg_541_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_6_reg_541_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_6_reg_541_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_6_reg_541_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_6_reg_541_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_6_reg_541_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_6_reg_541_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_6_reg_541_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_6_reg_541_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_6_reg_541_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_6_reg_541_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_6_reg_541_pp0_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_6_reg_541_pp0_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_6_reg_541_pp0_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_6_reg_541_pp0_it15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_6_reg_541_pp0_it16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_6_reg_541_pp0_it17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_6_reg_541_pp0_it18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_6_reg_541_pp0_it19 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_6_reg_541_pp0_it20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_6_reg_541_pp0_it21 : STD_LOGIC_VECTOR (0 downto 0);
    signal asd_fu_212_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_8_fu_218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_550_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_550_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_550_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_550_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_550_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_550_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_550_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_550_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_550_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_550_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_550_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_550_pp0_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_550_pp0_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_550_pp0_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_550_pp0_it15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_550_pp0_it16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_550_pp0_it17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_550_pp0_it18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_550_pp0_it19 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_550_pp0_it20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_550_pp0_it21 : STD_LOGIC_VECTOR (0 downto 0);
    signal img_resized_data_stream_0_V_r_reg_554 : STD_LOGIC_VECTOR (31 downto 0);
    signal img_0_2_data_stream_0_V_read_reg_559 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_151_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_reg_564 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_155_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_assign_reg_570 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_147_fu_227_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_147_reg_575 : STD_LOGIC_VECTOR (62 downto 0);
    signal isneg_reg_580 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_isneg_reg_580_pp0_it18 : STD_LOGIC_VECTOR (0 downto 0);
    signal exp_tmp_V_reg_587 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_149_fu_249_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_149_reg_592 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Val2_44_fu_273_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Val2_44_reg_597 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_reg_ppstg_p_Val2_44_reg_597_pp0_it19 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_18_fu_280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_604 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_610 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_20_reg_610_pp0_it19 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_297_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_21_reg_617 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_22_fu_303_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_22_reg_623 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_23_fu_309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_reg_628 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_151_fu_325_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_151_reg_634 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_cast_fu_338_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_amt_cast_reg_639 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_fu_342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_644 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_649 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_368_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_29_reg_654 : STD_LOGIC_VECTOR (53 downto 0);
    signal this_assign_cast_fu_373_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal this_assign_cast_reg_659 : STD_LOGIC_VECTOR (53 downto 0);
    signal qb_fu_385_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_reg_664 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_reg_669 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_demorgan_fu_401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_demorgan_reg_674 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_411_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_reg_680 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_5_fu_429_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal p_Val2_5_reg_685 : STD_LOGIC_VECTOR (54 downto 0);
    signal sel_tmp7_fu_440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_reg_690 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp14_fu_455_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp14_reg_695 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel3_fu_460_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal newSel3_reg_701 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Val2_45_fu_482_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_45_reg_706 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_0_i_reg_128 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st26_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_337 : BOOLEAN;
    signal acc_V_1_fu_96 : STD_LOGIC_VECTOR (63 downto 0);
    signal acc_V_fu_493_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_s_fu_100 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_151_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_151_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_155_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_155_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_159_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_0_i_cast_cast_fu_172_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1_fu_176_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_182_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal asd_0_i_cast_cast_fu_202_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_159_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_fu_223_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_256_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_s_fu_263_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_fu_267_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_15_fu_253_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_285_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_34_fu_315_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_34_cast_fu_321_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_amt_fu_333_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_150_fu_348_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_28_fu_364_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_33_fu_380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_405_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_31_fu_408_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_3_fu_417_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_37_cast_fu_426_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal p_Val2_3_cast_fu_422_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal sel_tmp6_fu_435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_demorgan_fu_445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_fu_449_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_5_cast_fu_466_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_cond_fu_475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_fu_469_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal newSel3_cast_fu_479_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_151_ce : STD_LOGIC;
    signal grp_fu_155_ce : STD_LOGIC;
    signal grp_fu_159_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);

    component image_filter_fsub_32ns_32ns_32_9_full_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component image_filter_fmul_32ns_32ns_32_5_max_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component image_filter_fpext_32ns_64_2 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    image_filter_fsub_32ns_32ns_32_9_full_dsp_U51 : component image_filter_fsub_32ns_32ns_32_9_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 9,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_151_p0,
        din1 => grp_fu_151_p1,
        ce => grp_fu_151_ce,
        dout => grp_fu_151_p2);

    image_filter_fmul_32ns_32ns_32_5_max_dsp_U52 : component image_filter_fmul_32ns_32ns_32_5_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_155_p0,
        din1 => grp_fu_155_p1,
        ce => grp_fu_155_ce,
        dout => grp_fu_155_p2);

    image_filter_fpext_32ns_64_2_U53 : component image_filter_fpext_32ns_64_2
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_159_p0,
        ce => grp_fu_159_ce,
        dout => grp_fu_159_p1);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (or_cond_45_fu_187_p2 = ap_const_lv1_0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and ((tmp_6_fu_206_p2 = ap_const_lv1_0) or (not((tmp_6_fu_206_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_8_fu_218_p2))))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((or_cond_45_fu_187_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not(((tmp_6_fu_206_p2 = ap_const_lv1_0) or (not((tmp_6_fu_206_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_8_fu_218_p2)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((or_cond_45_fu_187_p2 = ap_const_lv1_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and ((tmp_6_fu_206_p2 = ap_const_lv1_0) or (not((tmp_6_fu_206_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_8_fu_218_p2)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it10 assign process. --
    ap_reg_ppiten_pp0_it10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then 
                    ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it11 assign process. --
    ap_reg_ppiten_pp0_it11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then 
                    ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it12 assign process. --
    ap_reg_ppiten_pp0_it12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then 
                    ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it13 assign process. --
    ap_reg_ppiten_pp0_it13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then 
                    ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it14 assign process. --
    ap_reg_ppiten_pp0_it14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then 
                    ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it15 assign process. --
    ap_reg_ppiten_pp0_it15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then 
                    ap_reg_ppiten_pp0_it15 <= ap_reg_ppiten_pp0_it14;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it16 assign process. --
    ap_reg_ppiten_pp0_it16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then 
                    ap_reg_ppiten_pp0_it16 <= ap_reg_ppiten_pp0_it15;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it17 assign process. --
    ap_reg_ppiten_pp0_it17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then 
                    ap_reg_ppiten_pp0_it17 <= ap_reg_ppiten_pp0_it16;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it18 assign process. --
    ap_reg_ppiten_pp0_it18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then 
                    ap_reg_ppiten_pp0_it18 <= ap_reg_ppiten_pp0_it17;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it19 assign process. --
    ap_reg_ppiten_pp0_it19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it19 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then 
                    ap_reg_ppiten_pp0_it19 <= ap_reg_ppiten_pp0_it18;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it20 assign process. --
    ap_reg_ppiten_pp0_it20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it20 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then 
                    ap_reg_ppiten_pp0_it20 <= ap_reg_ppiten_pp0_it19;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it21 assign process. --
    ap_reg_ppiten_pp0_it21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it21 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then 
                    ap_reg_ppiten_pp0_it21 <= ap_reg_ppiten_pp0_it20;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it22 assign process. --
    ap_reg_ppiten_pp0_it22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it22 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then 
                    ap_reg_ppiten_pp0_it22 <= ap_reg_ppiten_pp0_it21;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((or_cond_45_fu_187_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it22 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it4 assign process. --
    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it5 assign process. --
    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it6 assign process. --
    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it7 assign process. --
    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it8 assign process. --
    ap_reg_ppiten_pp0_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it9 assign process. --
    ap_reg_ppiten_pp0_it9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then 
                    ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
                end if; 
            end if;
        end if;
    end process;


    -- acc_V_1_fu_96 assign process. --
    acc_V_1_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it22) and not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_541_pp0_it21)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_8_reg_550_pp0_it21)))) then 
                acc_V_1_fu_96 <= acc_V_fu_493_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_48))) then 
                acc_V_1_fu_96 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    -- asd_0_i_reg_139 assign process. --
    asd_0_i_reg_139_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((or_cond_45_fu_187_p2 = ap_const_lv1_0)))) then 
                asd_0_i_reg_139 <= ap_const_lv10_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((tmp_6_fu_206_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_8_fu_218_p2)))) then 
                asd_0_i_reg_139 <= asd_fu_212_p2;
            end if; 
        end if;
    end process;

    -- i_0_i_reg_128 assign process. --
    i_0_i_reg_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_3)) then 
                i_0_i_reg_128 <= i_reg_536;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_48))) then 
                i_0_i_reg_128 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    -- p_Val2_s_fu_100 assign process. --
    p_Val2_s_fu_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it22) and not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_541_pp0_it21)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_8_reg_550_pp0_it21)))) then 
                p_Val2_s_fu_100 <= acc_V_fu_493_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_48))) then 
                p_Val2_s_fu_100 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then
                ap_reg_ppstg_isneg_reg_580_pp0_it18 <= isneg_reg_580;
                ap_reg_ppstg_p_Val2_44_reg_597_pp0_it19 <= p_Val2_44_reg_597;
                ap_reg_ppstg_tmp_20_reg_610_pp0_it19 <= tmp_20_reg_610;
                ap_reg_ppstg_tmp_6_reg_541_pp0_it10 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it9;
                ap_reg_ppstg_tmp_6_reg_541_pp0_it11 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it10;
                ap_reg_ppstg_tmp_6_reg_541_pp0_it12 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it11;
                ap_reg_ppstg_tmp_6_reg_541_pp0_it13 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it12;
                ap_reg_ppstg_tmp_6_reg_541_pp0_it14 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it13;
                ap_reg_ppstg_tmp_6_reg_541_pp0_it15 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it14;
                ap_reg_ppstg_tmp_6_reg_541_pp0_it16 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it15;
                ap_reg_ppstg_tmp_6_reg_541_pp0_it17 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it16;
                ap_reg_ppstg_tmp_6_reg_541_pp0_it18 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it17;
                ap_reg_ppstg_tmp_6_reg_541_pp0_it19 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it18;
                ap_reg_ppstg_tmp_6_reg_541_pp0_it2 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it1;
                ap_reg_ppstg_tmp_6_reg_541_pp0_it20 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it19;
                ap_reg_ppstg_tmp_6_reg_541_pp0_it21 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it20;
                ap_reg_ppstg_tmp_6_reg_541_pp0_it3 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it2;
                ap_reg_ppstg_tmp_6_reg_541_pp0_it4 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it3;
                ap_reg_ppstg_tmp_6_reg_541_pp0_it5 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it4;
                ap_reg_ppstg_tmp_6_reg_541_pp0_it6 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it5;
                ap_reg_ppstg_tmp_6_reg_541_pp0_it7 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it6;
                ap_reg_ppstg_tmp_6_reg_541_pp0_it8 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it7;
                ap_reg_ppstg_tmp_6_reg_541_pp0_it9 <= ap_reg_ppstg_tmp_6_reg_541_pp0_it8;
                ap_reg_ppstg_tmp_8_reg_550_pp0_it10 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it9;
                ap_reg_ppstg_tmp_8_reg_550_pp0_it11 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it10;
                ap_reg_ppstg_tmp_8_reg_550_pp0_it12 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it11;
                ap_reg_ppstg_tmp_8_reg_550_pp0_it13 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it12;
                ap_reg_ppstg_tmp_8_reg_550_pp0_it14 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it13;
                ap_reg_ppstg_tmp_8_reg_550_pp0_it15 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it14;
                ap_reg_ppstg_tmp_8_reg_550_pp0_it16 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it15;
                ap_reg_ppstg_tmp_8_reg_550_pp0_it17 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it16;
                ap_reg_ppstg_tmp_8_reg_550_pp0_it18 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it17;
                ap_reg_ppstg_tmp_8_reg_550_pp0_it19 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it18;
                ap_reg_ppstg_tmp_8_reg_550_pp0_it2 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it1;
                ap_reg_ppstg_tmp_8_reg_550_pp0_it20 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it19;
                ap_reg_ppstg_tmp_8_reg_550_pp0_it21 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it20;
                ap_reg_ppstg_tmp_8_reg_550_pp0_it3 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it2;
                ap_reg_ppstg_tmp_8_reg_550_pp0_it4 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it3;
                ap_reg_ppstg_tmp_8_reg_550_pp0_it5 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it4;
                ap_reg_ppstg_tmp_8_reg_550_pp0_it6 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it5;
                ap_reg_ppstg_tmp_8_reg_550_pp0_it7 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it6;
                ap_reg_ppstg_tmp_8_reg_550_pp0_it8 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it7;
                ap_reg_ppstg_tmp_8_reg_550_pp0_it9 <= ap_reg_ppstg_tmp_8_reg_550_pp0_it8;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                ap_reg_ppstg_tmp_6_reg_541_pp0_it1 <= tmp_6_reg_541;
                ap_reg_ppstg_tmp_8_reg_550_pp0_it1 <= tmp_8_reg_550;
                tmp_6_reg_541 <= tmp_6_fu_206_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_541_pp0_it16)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_8_reg_550_pp0_it16)))) then
                exp_tmp_V_reg_587 <= ireg_V_fu_223_p1(62 downto 52);
                isneg_reg_580 <= ireg_V_fu_223_p1(63 downto 63);
                tmp_147_reg_575 <= tmp_147_fu_227_p1;
                tmp_149_reg_592 <= tmp_149_fu_249_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                i_reg_536 <= i_fu_193_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_541_pp0_it18)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_8_reg_550_pp0_it18)))) then
                icmp_reg_649 <= icmp_fu_358_p2;
                qb_reg_664 <= qb_fu_385_p3;
                sel_tmp2_reg_669 <= sel_tmp2_fu_396_p2;
                sel_tmp6_demorgan_reg_674 <= sel_tmp6_demorgan_fu_401_p2;
                sh_amt_cast_reg_639 <= sh_amt_cast_fu_338_p1;
                this_assign_cast_reg_659 <= this_assign_cast_fu_373_p3;
                tmp_25_reg_644 <= tmp_25_fu_342_p2;
                tmp_29_reg_654 <= tmp_29_fu_368_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((tmp_6_reg_541 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_8_reg_550)) and not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                img_0_2_data_stream_0_V_read_reg_559 <= img_0_2_data_stream_0_V_dout;
                img_resized_data_stream_0_V_r_reg_554 <= img_resized_data_stream_0_V_dout;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_541_pp0_it19)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_8_reg_550_pp0_it19)))) then
                newSel3_reg_701 <= newSel3_fu_460_p3;
                p_Val2_5_reg_685 <= p_Val2_5_fu_429_p2;
                sel_tmp14_reg_695 <= sel_tmp14_fu_455_p2;
                sel_tmp7_reg_690 <= sel_tmp7_fu_440_p2;
                tmp_32_reg_680 <= tmp_32_fu_411_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_541_pp0_it17)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_8_reg_550_pp0_it17)))) then
                p_Val2_44_reg_597 <= p_Val2_44_fu_273_p3;
                tmp_151_reg_634 <= tmp_151_fu_325_p3;
                tmp_18_reg_604 <= tmp_18_fu_280_p2;
                tmp_20_reg_610 <= tmp_20_fu_291_p2;
                tmp_21_reg_617 <= tmp_21_fu_297_p2;
                tmp_22_reg_623 <= tmp_22_fu_303_p2;
                tmp_23_reg_628 <= tmp_23_fu_309_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_541_pp0_it20)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_8_reg_550_pp0_it20)))) then
                p_Val2_45_reg_706 <= p_Val2_45_fu_482_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_541_pp0_it9)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_8_reg_550_pp0_it9)))) then
                temp_reg_564 <= grp_fu_151_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((tmp_6_fu_206_p2 = ap_const_lv1_0)))) then
                tmp_8_reg_550 <= tmp_8_fu_218_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_541_pp0_it14)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_8_reg_550_pp0_it14)))) then
                v_assign_reg_570 <= grp_fu_155_p2;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_sig_bdd_48, or_cond_45_fu_187_p2, tmp_6_fu_206_p2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_87, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it21, ap_reg_ppiten_pp0_it22, tmp_8_fu_218_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_bdd_48)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if ((or_cond_45_fu_187_p2 = ap_const_lv1_0)) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_pp0_stg0_fsm_2 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it22) and not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it21)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and ((tmp_6_fu_206_p2 = ap_const_lv1_0) or (not((tmp_6_fu_206_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_8_fu_218_p2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it22) and not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it21))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and ((tmp_6_fu_206_p2 = ap_const_lv1_0) or (not((tmp_6_fu_206_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_8_fu_218_p2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st26_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_st26_fsm_3 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    F2_fu_285_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_15_fu_253_p1));
    acc_V_fu_493_p2 <= std_logic_vector(unsigned(p_Val2_s_fu_100) + unsigned(p_Val2_45_reg_706));

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, or_cond_45_fu_187_p2, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (or_cond_45_fu_187_p2 = ap_const_lv1_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(or_cond_45_fu_187_p2, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (or_cond_45_fu_187_p2 = ap_const_lv1_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= acc_V_1_fu_96;

    -- ap_sig_bdd_23 assign process. --
    ap_sig_bdd_23_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_23 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_337 assign process. --
    ap_sig_bdd_337_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_337 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_bdd_48 assign process. --
    ap_sig_bdd_48_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_bdd_48 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_60 assign process. --
    ap_sig_bdd_60_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_60 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_71 assign process. --
    ap_sig_bdd_71_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_71 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_87 assign process. --
    ap_sig_bdd_87_assign_proc : process(img_resized_data_stream_0_V_empty_n, img_0_2_data_stream_0_V_empty_n, tmp_6_reg_541, tmp_8_reg_550)
    begin
                ap_sig_bdd_87 <= (((img_resized_data_stream_0_V_empty_n = ap_const_logic_0) and not((tmp_6_reg_541 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_8_reg_550))) or (not((tmp_6_reg_541 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_8_reg_550)) and (img_0_2_data_stream_0_V_empty_n = ap_const_logic_0)));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_2 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_2_assign_proc : process(ap_sig_bdd_71)
    begin
        if (ap_sig_bdd_71) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_23)
    begin
        if (ap_sig_bdd_23) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st26_fsm_3 assign process. --
    ap_sig_cseq_ST_st26_fsm_3_assign_proc : process(ap_sig_bdd_337)
    begin
        if (ap_sig_bdd_337) then 
            ap_sig_cseq_ST_st26_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st26_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_60)
    begin
        if (ap_sig_bdd_60) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;

    asd_0_i_cast_cast_fu_202_p1 <= std_logic_vector(resize(unsigned(asd_0_i_reg_139),12));
    asd_fu_212_p2 <= std_logic_vector(unsigned(asd_0_i_reg_139) + unsigned(ap_const_lv10_1));

    -- grp_fu_151_ce assign process. --
    grp_fu_151_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_87, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            grp_fu_151_ce <= ap_const_logic_1;
        else 
            grp_fu_151_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_151_p0 <= img_resized_data_stream_0_V_r_reg_554;
    grp_fu_151_p1 <= img_0_2_data_stream_0_V_read_reg_559;

    -- grp_fu_155_ce assign process. --
    grp_fu_155_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_87, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            grp_fu_155_ce <= ap_const_logic_1;
        else 
            grp_fu_155_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_155_p0 <= temp_reg_564;
    grp_fu_155_p1 <= temp_reg_564;

    -- grp_fu_159_ce assign process. --
    grp_fu_159_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_87, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            grp_fu_159_ce <= ap_const_logic_1;
        else 
            grp_fu_159_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_159_p0 <= v_assign_reg_570;
    i_0_i_cast_cast_fu_172_p1 <= std_logic_vector(resize(unsigned(i_0_i_reg_128),12));
    i_fu_193_p2 <= std_logic_vector(unsigned(i_0_i_reg_128) + unsigned(ap_const_lv9_1));
    icmp_fu_358_p2 <= "1" when (tmp_150_fu_348_p4 = ap_const_lv6_0) else "0";

    -- img_0_2_data_stream_0_V_read assign process. --
    img_0_2_data_stream_0_V_read_assign_proc : process(tmp_6_reg_541, ap_sig_cseq_ST_pp0_stg0_fsm_2, tmp_8_reg_550, ap_sig_bdd_87, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((tmp_6_reg_541 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_8_reg_550)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            img_0_2_data_stream_0_V_read <= ap_const_logic_1;
        else 
            img_0_2_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- img_resized_data_stream_0_V_read assign process. --
    img_resized_data_stream_0_V_read_assign_proc : process(tmp_6_reg_541, ap_sig_cseq_ST_pp0_stg0_fsm_2, tmp_8_reg_550, ap_sig_bdd_87, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((tmp_6_reg_541 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_8_reg_550)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_87 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            img_resized_data_stream_0_V_read <= ap_const_logic_1;
        else 
            img_resized_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;

    ireg_V_fu_223_p1 <= grp_fu_159_p1;
    man_V_1_fu_267_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_s_fu_263_p1));
        newSel3_cast_fu_479_p1 <= std_logic_vector(resize(signed(newSel3_reg_701),64));

    newSel3_fu_460_p3 <= 
        ap_reg_ppstg_p_Val2_44_reg_597_pp0_it19 when (sel_tmp2_reg_669(0) = '1') else 
        ap_const_lv54_0;
    newSel_fu_469_p3 <= 
        tmp_32_reg_680 when (sel_tmp14_reg_695(0) = '1') else 
        p_Val2_5_cast_fu_466_p1;
    or_cond_45_fu_187_p2 <= (tmp_1_fu_176_p2 and tmp_3_fu_182_p2);
    or_cond_fu_475_p2 <= (sel_tmp14_reg_695 or sel_tmp7_reg_690);
    p_Result_s_fu_263_p1 <= std_logic_vector(resize(unsigned(tmp_16_fu_256_p3),54));
        p_Val2_3_cast_fu_422_p1 <= std_logic_vector(resize(signed(p_Val2_3_fu_417_p3),55));

    p_Val2_3_fu_417_p3 <= 
        tmp_29_reg_654 when (tmp_25_reg_644(0) = '1') else 
        this_assign_cast_reg_659;
    p_Val2_44_fu_273_p3 <= 
        man_V_1_fu_267_p2 when (isneg_reg_580(0) = '1') else 
        p_Result_s_fu_263_p1;
    p_Val2_45_fu_482_p3 <= 
        newSel_fu_469_p3 when (or_cond_fu_475_p2(0) = '1') else 
        newSel3_cast_fu_479_p1;
        p_Val2_5_cast_fu_466_p1 <= std_logic_vector(resize(signed(p_Val2_5_reg_685),64));

    p_Val2_5_fu_429_p2 <= std_logic_vector(unsigned(tmp_37_cast_fu_426_p1) + unsigned(p_Val2_3_cast_fu_422_p1));
    qb_fu_385_p3 <= 
        ap_reg_ppstg_isneg_reg_580_pp0_it18 when (tmp_33_fu_380_p2(0) = '1') else 
        tmp_151_reg_634;
    sel_tmp13_demorgan_fu_445_p2 <= (sel_tmp6_demorgan_reg_674 or ap_reg_ppstg_tmp_20_reg_610_pp0_it19);
    sel_tmp13_fu_449_p2 <= (sel_tmp13_demorgan_fu_445_p2 xor ap_const_lv1_1);
    sel_tmp14_fu_455_p2 <= (icmp_reg_649 and sel_tmp13_fu_449_p2);
    sel_tmp1_fu_391_p2 <= (tmp_18_reg_604 xor ap_const_lv1_1);
    sel_tmp2_fu_396_p2 <= (tmp_23_reg_628 and sel_tmp1_fu_391_p2);
    sel_tmp6_demorgan_fu_401_p2 <= (tmp_18_reg_604 or tmp_23_reg_628);
    sel_tmp6_fu_435_p2 <= (sel_tmp6_demorgan_reg_674 xor ap_const_lv1_1);
    sel_tmp7_fu_440_p2 <= (ap_reg_ppstg_tmp_20_reg_610_pp0_it19 and sel_tmp6_fu_435_p2);
        sh_amt_cast_fu_338_p1 <= std_logic_vector(resize(signed(sh_amt_fu_333_p3),32));

    sh_amt_fu_333_p3 <= 
        tmp_21_reg_617 when (tmp_20_reg_610(0) = '1') else 
        tmp_22_reg_623;
    this_assign_cast_fu_373_p3 <= 
        ap_const_lv54_3FFFFFFFFFFFFF when (ap_reg_ppstg_isneg_reg_580_pp0_it18(0) = '1') else 
        ap_const_lv54_0;
    tmp_147_fu_227_p1 <= ireg_V_fu_223_p1(63 - 1 downto 0);
    tmp_149_fu_249_p1 <= ireg_V_fu_223_p1(52 - 1 downto 0);
    tmp_150_fu_348_p4 <= sh_amt_fu_333_p3(11 downto 6);
    tmp_151_fu_325_p3 <= p_Val2_44_fu_273_p3(to_integer(unsigned(tmp_34_cast_fu_321_p1)) downto to_integer(unsigned(tmp_34_cast_fu_321_p1))) when (to_integer(unsigned(tmp_34_cast_fu_321_p1))>= 0 and to_integer(unsigned(tmp_34_cast_fu_321_p1))<=53) else "-";
    tmp_15_fu_253_p1 <= std_logic_vector(resize(unsigned(exp_tmp_V_reg_587),12));
    tmp_16_fu_256_p3 <= (ap_const_lv1_1 & tmp_149_reg_592);
    tmp_18_fu_280_p2 <= "1" when (tmp_147_reg_575 = ap_const_lv63_0) else "0";
    tmp_1_fu_176_p2 <= "1" when (unsigned(i_0_i_reg_128) < unsigned(ap_const_lv9_1E0)) else "0";
    tmp_20_fu_291_p2 <= "1" when (signed(F2_fu_285_p2) > signed(ap_const_lv12_20)) else "0";
    tmp_21_fu_297_p2 <= std_logic_vector(signed(ap_const_lv12_FE0) + signed(F2_fu_285_p2));
    tmp_22_fu_303_p2 <= std_logic_vector(unsigned(ap_const_lv12_20) - unsigned(F2_fu_285_p2));
    tmp_23_fu_309_p2 <= "1" when (F2_fu_285_p2 = ap_const_lv12_20) else "0";
        tmp_24_fu_405_p1 <= std_logic_vector(resize(signed(ap_reg_ppstg_p_Val2_44_reg_597_pp0_it19),64));

    tmp_25_fu_342_p2 <= "1" when (unsigned(sh_amt_fu_333_p3) < unsigned(ap_const_lv12_36)) else "0";
    tmp_28_fu_364_p1 <= std_logic_vector(resize(unsigned(sh_amt_cast_fu_338_p1),54));
    tmp_29_fu_368_p2 <= std_logic_vector(shift_right(signed(p_Val2_44_reg_597),to_integer(unsigned('0' & tmp_28_fu_364_p1(31-1 downto 0)))));
    tmp_31_fu_408_p1 <= std_logic_vector(resize(unsigned(sh_amt_cast_reg_639),64));
    tmp_32_fu_411_p2 <= std_logic_vector(shift_left(unsigned(tmp_24_fu_405_p1),to_integer(unsigned('0' & tmp_31_fu_408_p1(31-1 downto 0)))));
    tmp_33_fu_380_p2 <= "1" when (signed(tmp_21_reg_617) > signed(ap_const_lv12_36)) else "0";
    tmp_34_cast_fu_321_p1 <= std_logic_vector(resize(unsigned(tmp_34_fu_315_p2),32));
    tmp_34_fu_315_p2 <= std_logic_vector(signed(ap_const_lv12_FDF) + signed(F2_fu_285_p2));
    tmp_37_cast_fu_426_p1 <= std_logic_vector(resize(unsigned(qb_reg_664),55));
    tmp_3_fu_182_p2 <= "1" when (unsigned(i_0_i_cast_cast_fu_172_p1) < unsigned(p_read1)) else "0";
    tmp_6_fu_206_p2 <= "1" when (unsigned(asd_0_i_reg_139) < unsigned(ap_const_lv10_280)) else "0";
    tmp_8_fu_218_p2 <= "1" when (unsigned(asd_0_i_cast_cast_fu_202_p1) < unsigned(p_read)) else "0";
end behav;
