// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module image_filter_AXIvideo2Mat_32_480_640_5_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        input2_TDATA,
        input2_TVALID,
        input2_TREADY,
        input2_TKEEP,
        input2_TSTRB,
        input2_TUSER,
        input2_TLAST,
        input2_TID,
        input2_TDEST,
        img_rows_V_read,
        img_cols_V_read,
        img_data_stream_V_din,
        img_data_stream_V_full_n,
        img_data_stream_V_write
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 7'b1;
parameter    ap_ST_st2_fsm_1 = 7'b10;
parameter    ap_ST_st3_fsm_2 = 7'b100;
parameter    ap_ST_st4_fsm_3 = 7'b1000;
parameter    ap_ST_pp1_stg0_fsm_4 = 7'b10000;
parameter    ap_ST_st7_fsm_5 = 7'b100000;
parameter    ap_ST_st8_fsm_6 = 7'b1000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv12_0 = 12'b000000000000;
parameter    ap_const_lv12_1 = 12'b1;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] input2_TDATA;
input   input2_TVALID;
output   input2_TREADY;
input  [3:0] input2_TKEEP;
input  [3:0] input2_TSTRB;
input  [0:0] input2_TUSER;
input  [0:0] input2_TLAST;
input  [0:0] input2_TID;
input  [0:0] input2_TDEST;
input  [11:0] img_rows_V_read;
input  [11:0] img_cols_V_read;
output  [31:0] img_data_stream_V_din;
input   img_data_stream_V_full_n;
output   img_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input2_TREADY;
reg img_data_stream_V_write;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm = 7'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_26;
reg   [0:0] eol_1_reg_152;
reg   [31:0] axi_data_V_1_reg_163;
reg   [11:0] p_3_reg_174;
reg   [0:0] eol_reg_185;
reg   [0:0] axi_last_V_2_reg_197;
reg   [31:0] p_Val2_s_reg_209;
reg   [0:0] eol_2_reg_221;
reg    ap_sig_bdd_67;
reg   [31:0] tmp_data_V_reg_351;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_79;
reg   [0:0] tmp_last_V_reg_359;
wire   [0:0] exitcond3_fu_287_p2;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_93;
wire   [11:0] i_V_fu_292_p2;
reg   [11:0] i_V_reg_375;
wire   [0:0] exitcond_fu_298_p2;
reg   [0:0] exitcond_reg_380;
reg    ap_sig_cseq_ST_pp1_stg0_fsm_4;
reg    ap_sig_bdd_104;
wire   [0:0] brmerge_fu_312_p2;
reg    ap_sig_bdd_112;
reg    ap_reg_ppiten_pp1_it0 = 1'b0;
reg    ap_sig_bdd_119;
reg    ap_reg_ppiten_pp1_it1 = 1'b0;
wire   [11:0] j_V_fu_303_p2;
reg    ap_sig_cseq_ST_st7_fsm_5;
reg    ap_sig_bdd_138;
reg    ap_sig_bdd_143;
reg   [0:0] axi_last_V_3_reg_232;
reg   [0:0] axi_last_V1_reg_121;
reg    ap_sig_cseq_ST_st8_fsm_6;
reg    ap_sig_bdd_161;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_168;
reg   [31:0] axi_data_V_3_reg_244;
reg   [31:0] axi_data_V1_reg_131;
reg   [11:0] p_s_reg_141;
reg   [0:0] eol_1_phi_fu_155_p4;
reg   [31:0] axi_data_V_1_phi_fu_166_p4;
reg   [0:0] eol_phi_fu_189_p4;
wire   [0:0] ap_reg_phiprechg_axi_last_V_2_reg_197pp1_it0;
wire   [31:0] ap_reg_phiprechg_p_Val2_s_reg_209pp1_it0;
wire   [0:0] ap_reg_phiprechg_eol_2_reg_221pp1_it0;
wire   [0:0] axi_last_V_1_mux_fu_324_p2;
reg   [0:0] eol_3_reg_256;
reg   [0:0] sof_1_fu_80;
wire   [0:0] not_sof_2_fu_318_p2;
wire   [0:0] tmp_user_V_fu_278_p1;
reg   [6:0] ap_NS_fsm;
reg    ap_sig_bdd_111;
reg    ap_sig_bdd_191;
reg    ap_sig_bdd_130;




/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(exitcond3_fu_287_p2 == ap_const_lv1_0))) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp1_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & ~((ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) | (ap_sig_bdd_119 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) & ~(exitcond_fu_298_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond3_fu_287_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp1_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond_fu_298_p2 == ap_const_lv1_0) & ~((ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) | (ap_sig_bdd_119 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond3_fu_287_p2 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & ~((ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) | (ap_sig_bdd_119 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) & ~(exitcond_fu_298_p2 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        axi_data_V1_reg_131 <= tmp_data_V_reg_351;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_6)) begin
        axi_data_V1_reg_131 <= axi_data_V_3_reg_244;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond_reg_380 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~((ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) | (ap_sig_bdd_119 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        axi_data_V_1_reg_163 <= p_Val2_s_reg_209;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond3_fu_287_p2 == ap_const_lv1_0))) begin
        axi_data_V_1_reg_163 <= axi_data_V1_reg_131;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~((ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) | (ap_sig_bdd_119 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) & ~(exitcond_fu_298_p2 == ap_const_lv1_0))) begin
        axi_data_V_3_reg_244 <= axi_data_V_1_phi_fu_166_p4;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_5) & (ap_const_lv1_0 == eol_3_reg_256) & ~ap_sig_bdd_143)) begin
        axi_data_V_3_reg_244 <= input2_TDATA;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        axi_last_V1_reg_121 <= tmp_last_V_reg_359;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_6)) begin
        axi_last_V1_reg_121 <= axi_last_V_3_reg_232;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_130) begin
        if (ap_sig_bdd_191) begin
            axi_last_V_2_reg_197 <= eol_1_phi_fu_155_p4;
        end else if (ap_sig_bdd_111) begin
            axi_last_V_2_reg_197 <= input2_TLAST;
        end else if ((ap_true == ap_true)) begin
            axi_last_V_2_reg_197 <= ap_reg_phiprechg_axi_last_V_2_reg_197pp1_it0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~((ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) | (ap_sig_bdd_119 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) & ~(exitcond_fu_298_p2 == ap_const_lv1_0))) begin
        axi_last_V_3_reg_232 <= eol_1_phi_fu_155_p4;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_5) & (ap_const_lv1_0 == eol_3_reg_256) & ~ap_sig_bdd_143)) begin
        axi_last_V_3_reg_232 <= input2_TLAST;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond_reg_380 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~((ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) | (ap_sig_bdd_119 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        eol_1_reg_152 <= axi_last_V_2_reg_197;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond3_fu_287_p2 == ap_const_lv1_0))) begin
        eol_1_reg_152 <= axi_last_V1_reg_121;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_130) begin
        if (ap_sig_bdd_191) begin
            eol_2_reg_221 <= axi_last_V_1_mux_fu_324_p2;
        end else if (ap_sig_bdd_111) begin
            eol_2_reg_221 <= input2_TLAST;
        end else if ((ap_true == ap_true)) begin
            eol_2_reg_221 <= ap_reg_phiprechg_eol_2_reg_221pp1_it0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~((ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) | (ap_sig_bdd_119 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) & ~(exitcond_fu_298_p2 == ap_const_lv1_0))) begin
        eol_3_reg_256 <= eol_phi_fu_189_p4;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_5) & (ap_const_lv1_0 == eol_3_reg_256) & ~ap_sig_bdd_143)) begin
        eol_3_reg_256 <= input2_TLAST;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond_reg_380 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~((ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) | (ap_sig_bdd_119 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        eol_reg_185 <= eol_2_reg_221;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond3_fu_287_p2 == ap_const_lv1_0))) begin
        eol_reg_185 <= ap_const_lv1_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond_fu_298_p2 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~((ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) | (ap_sig_bdd_119 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        p_3_reg_174 <= j_V_fu_303_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond3_fu_287_p2 == ap_const_lv1_0))) begin
        p_3_reg_174 <= ap_const_lv12_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_130) begin
        if (ap_sig_bdd_191) begin
            p_Val2_s_reg_209 <= axi_data_V_1_phi_fu_166_p4;
        end else if (ap_sig_bdd_111) begin
            p_Val2_s_reg_209 <= input2_TDATA;
        end else if ((ap_true == ap_true)) begin
            p_Val2_s_reg_209 <= ap_reg_phiprechg_p_Val2_s_reg_209pp1_it0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        p_s_reg_141 <= ap_const_lv12_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_6)) begin
        p_s_reg_141 <= i_V_reg_375;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond_fu_298_p2 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~((ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) | (ap_sig_bdd_119 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        sof_1_fu_80 <= ap_const_lv1_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        sof_1_fu_80 <= ap_const_lv1_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & ~((ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) | (ap_sig_bdd_119 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        exitcond_reg_380 <= exitcond_fu_298_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        i_V_reg_375 <= i_V_fu_292_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(input2_TVALID == ap_const_logic_0))) begin
        tmp_data_V_reg_351 <= input2_TDATA;
        tmp_last_V_reg_359 <= input2_TLAST;
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or exitcond3_fu_287_p2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_done_reg) | ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(exitcond3_fu_287_p2 == ap_const_lv1_0)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (exitcond3_fu_287_p2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(exitcond3_fu_287_p2 == ap_const_lv1_0))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg0_fsm_4 assign process. ///
always @ (ap_sig_bdd_104)
begin
    if (ap_sig_bdd_104) begin
        ap_sig_cseq_ST_pp1_stg0_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg0_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_26)
begin
    if (ap_sig_bdd_26) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_79)
begin
    if (ap_sig_bdd_79) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_168)
begin
    if (ap_sig_bdd_168) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_93)
begin
    if (ap_sig_bdd_93) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_5 assign process. ///
always @ (ap_sig_bdd_138)
begin
    if (ap_sig_bdd_138) begin
        ap_sig_cseq_ST_st7_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_6 assign process. ///
always @ (ap_sig_bdd_161)
begin
    if (ap_sig_bdd_161) begin
        ap_sig_cseq_ST_st8_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_6 = ap_const_logic_0;
    end
end

/// axi_data_V_1_phi_fu_166_p4 assign process. ///
always @ (axi_data_V_1_reg_163 or p_Val2_s_reg_209 or exitcond_reg_380 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_reg_ppiten_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond_reg_380 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) begin
        axi_data_V_1_phi_fu_166_p4 = p_Val2_s_reg_209;
    end else begin
        axi_data_V_1_phi_fu_166_p4 = axi_data_V_1_reg_163;
    end
end

/// eol_1_phi_fu_155_p4 assign process. ///
always @ (eol_1_reg_152 or axi_last_V_2_reg_197 or exitcond_reg_380 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_reg_ppiten_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond_reg_380 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) begin
        eol_1_phi_fu_155_p4 = axi_last_V_2_reg_197;
    end else begin
        eol_1_phi_fu_155_p4 = eol_1_reg_152;
    end
end

/// eol_phi_fu_189_p4 assign process. ///
always @ (eol_reg_185 or eol_2_reg_221 or exitcond_reg_380 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_reg_ppiten_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond_reg_380 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) begin
        eol_phi_fu_189_p4 = eol_2_reg_221;
    end else begin
        eol_phi_fu_189_p4 = eol_reg_185;
    end
end

/// img_data_stream_V_write assign process. ///
always @ (exitcond_reg_380 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_sig_bdd_112 or ap_reg_ppiten_pp1_it0 or ap_sig_bdd_119 or ap_reg_ppiten_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond_reg_380 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~((ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) | (ap_sig_bdd_119 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        img_data_stream_V_write = ap_const_logic_1;
    end else begin
        img_data_stream_V_write = ap_const_logic_0;
    end
end

/// input2_TREADY assign process. ///
always @ (input2_TVALID or ap_sig_cseq_ST_st2_fsm_1 or exitcond_fu_298_p2 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or brmerge_fu_312_p2 or ap_sig_bdd_112 or ap_reg_ppiten_pp1_it0 or ap_sig_bdd_119 or ap_reg_ppiten_pp1_it1 or ap_sig_cseq_ST_st7_fsm_5 or ap_sig_bdd_143 or eol_3_reg_256)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(input2_TVALID == ap_const_logic_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_5) & (ap_const_lv1_0 == eol_3_reg_256) & ~ap_sig_bdd_143) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond_fu_298_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == brmerge_fu_312_p2) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~((ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) | (ap_sig_bdd_119 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))))) begin
        input2_TREADY = ap_const_logic_1;
    end else begin
        input2_TREADY = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_CS_fsm or input2_TVALID or ap_sig_bdd_67 or exitcond3_fu_287_p2 or exitcond_fu_298_p2 or ap_sig_bdd_112 or ap_reg_ppiten_pp1_it0 or ap_sig_bdd_119 or ap_reg_ppiten_pp1_it1 or ap_sig_bdd_143 or eol_3_reg_256 or tmp_user_V_fu_278_p1)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_67) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if ((~(input2_TVALID == ap_const_logic_0) & (ap_const_lv1_0 == tmp_user_V_fu_278_p1))) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else if ((~(input2_TVALID == ap_const_logic_0) & ~(ap_const_lv1_0 == tmp_user_V_fu_278_p1))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            if (~(exitcond3_fu_287_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_4;
            end
        end
        ap_ST_pp1_stg0_fsm_4 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~((ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) | (ap_sig_bdd_119 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) & ~(exitcond_fu_298_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_4;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~((ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) | (ap_sig_bdd_119 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) & ~(exitcond_fu_298_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st7_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_4;
            end
        end
        ap_ST_st7_fsm_5 : 
        begin
            if (((ap_const_lv1_0 == eol_3_reg_256) & ~ap_sig_bdd_143)) begin
                ap_NS_fsm = ap_ST_st7_fsm_5;
            end else if ((~ap_sig_bdd_143 & ~(ap_const_lv1_0 == eol_3_reg_256))) begin
                ap_NS_fsm = ap_ST_st8_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_5;
            end
        end
        ap_ST_st8_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_reg_phiprechg_axi_last_V_2_reg_197pp1_it0 = 'bx;
assign ap_reg_phiprechg_eol_2_reg_221pp1_it0 = 'bx;
assign ap_reg_phiprechg_p_Val2_s_reg_209pp1_it0 = 'bx;

/// ap_sig_bdd_104 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_104 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_111 assign process. ///
always @ (exitcond_fu_298_p2 or brmerge_fu_312_p2)
begin
    ap_sig_bdd_111 = ((exitcond_fu_298_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == brmerge_fu_312_p2));
end

/// ap_sig_bdd_112 assign process. ///
always @ (input2_TVALID or exitcond_fu_298_p2 or brmerge_fu_312_p2)
begin
    ap_sig_bdd_112 = ((input2_TVALID == ap_const_logic_0) & (exitcond_fu_298_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == brmerge_fu_312_p2));
end

/// ap_sig_bdd_119 assign process. ///
always @ (img_data_stream_V_full_n or exitcond_reg_380)
begin
    ap_sig_bdd_119 = ((img_data_stream_V_full_n == ap_const_logic_0) & (exitcond_reg_380 == ap_const_lv1_0));
end

/// ap_sig_bdd_130 assign process. ///
always @ (ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_sig_bdd_112 or ap_reg_ppiten_pp1_it0 or ap_sig_bdd_119 or ap_reg_ppiten_pp1_it1)
begin
    ap_sig_bdd_130 = ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~((ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) | (ap_sig_bdd_119 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))));
end

/// ap_sig_bdd_138 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_138 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_143 assign process. ///
always @ (input2_TVALID or eol_3_reg_256)
begin
    ap_sig_bdd_143 = ((input2_TVALID == ap_const_logic_0) & (ap_const_lv1_0 == eol_3_reg_256));
end

/// ap_sig_bdd_161 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_161 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_168 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_168 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_191 assign process. ///
always @ (exitcond_fu_298_p2 or brmerge_fu_312_p2)
begin
    ap_sig_bdd_191 = ((exitcond_fu_298_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == brmerge_fu_312_p2));
end

/// ap_sig_bdd_26 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_26 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_67 assign process. ///
always @ (ap_start or ap_done_reg)
begin
    ap_sig_bdd_67 = ((ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end

/// ap_sig_bdd_79 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_79 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_93 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_93 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end
assign axi_last_V_1_mux_fu_324_p2 = (eol_1_phi_fu_155_p4 | not_sof_2_fu_318_p2);
assign brmerge_fu_312_p2 = (sof_1_fu_80 | eol_phi_fu_189_p4);
assign exitcond3_fu_287_p2 = (p_s_reg_141 == img_rows_V_read? 1'b1: 1'b0);
assign exitcond_fu_298_p2 = (p_3_reg_174 == img_cols_V_read? 1'b1: 1'b0);
assign i_V_fu_292_p2 = (p_s_reg_141 + ap_const_lv12_1);
assign img_data_stream_V_din = p_Val2_s_reg_209;
assign j_V_fu_303_p2 = (p_3_reg_174 + ap_const_lv12_1);
assign not_sof_2_fu_318_p2 = (sof_1_fu_80 ^ ap_const_lv1_1);
assign tmp_user_V_fu_278_p1 = input2_TUSER;


endmodule //image_filter_AXIvideo2Mat_32_480_640_5_1

