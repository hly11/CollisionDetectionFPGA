// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="image_filter_fh,hls_ip_2015_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=6.500000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=5.687500,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=104,HLS_SYN_DSP=87,HLS_SYN_FF=58963,HLS_SYN_LUT=32331}" *)

module image_filter_fh (
        s_axi_control_bus_AWVALID,
        s_axi_control_bus_AWREADY,
        s_axi_control_bus_AWADDR,
        s_axi_control_bus_WVALID,
        s_axi_control_bus_WREADY,
        s_axi_control_bus_WDATA,
        s_axi_control_bus_WSTRB,
        s_axi_control_bus_ARVALID,
        s_axi_control_bus_ARREADY,
        s_axi_control_bus_ARADDR,
        s_axi_control_bus_RVALID,
        s_axi_control_bus_RREADY,
        s_axi_control_bus_RDATA,
        s_axi_control_bus_RRESP,
        s_axi_control_bus_BVALID,
        s_axi_control_bus_BREADY,
        s_axi_control_bus_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        input_stream_TDATA,
        input_stream_TKEEP,
        input_stream_TSTRB,
        input_stream_TUSER,
        input_stream_TLAST,
        input_stream_TID,
        input_stream_TDEST,
        output_stream_TDATA,
        output_stream_TKEEP,
        output_stream_TSTRB,
        output_stream_TUSER,
        output_stream_TLAST,
        output_stream_TID,
        output_stream_TDEST,
        input_stream_TVALID,
        input_stream_TREADY,
        output_stream_TVALID,
        output_stream_TREADY
);

parameter    C_S_AXI_CONTROL_BUS_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_CONTROL_BUS_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_true = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    C_S_AXI_CONTROL_BUS_WSTRB_WIDTH = (C_S_AXI_CONTROL_BUS_DATA_WIDTH / ap_const_int64_8);
parameter    C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   s_axi_control_bus_AWVALID;
output   s_axi_control_bus_AWREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1 : 0] s_axi_control_bus_AWADDR;
input   s_axi_control_bus_WVALID;
output   s_axi_control_bus_WREADY;
input  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1 : 0] s_axi_control_bus_WDATA;
input  [C_S_AXI_CONTROL_BUS_WSTRB_WIDTH - 1 : 0] s_axi_control_bus_WSTRB;
input   s_axi_control_bus_ARVALID;
output   s_axi_control_bus_ARREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1 : 0] s_axi_control_bus_ARADDR;
output   s_axi_control_bus_RVALID;
input   s_axi_control_bus_RREADY;
output  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1 : 0] s_axi_control_bus_RDATA;
output  [1:0] s_axi_control_bus_RRESP;
output   s_axi_control_bus_BVALID;
input   s_axi_control_bus_BREADY;
output  [1:0] s_axi_control_bus_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
input  [31:0] input_stream_TDATA;
input  [3:0] input_stream_TKEEP;
input  [3:0] input_stream_TSTRB;
input  [0:0] input_stream_TUSER;
input  [0:0] input_stream_TLAST;
input  [0:0] input_stream_TID;
input  [0:0] input_stream_TDEST;
output  [31:0] output_stream_TDATA;
output  [3:0] output_stream_TKEEP;
output  [3:0] output_stream_TSTRB;
output  [0:0] output_stream_TUSER;
output  [0:0] output_stream_TLAST;
output  [0:0] output_stream_TID;
output  [0:0] output_stream_TDEST;
input   input_stream_TVALID;
output   input_stream_TREADY;
output   output_stream_TVALID;
input   output_stream_TREADY;

reg    ap_rst_n_inv;
wire    image_filter_fh_control_bus_s_axi_U_ap_dummy_ce;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
reg    ap_idle;
wire   [31:0] rows;
wire   [31:0] cols;
wire   [31:0] filter_size;
wire    image_filter_fh_Block_Mat_exit712_proc_U0_ap_start;
wire    image_filter_fh_Block_Mat_exit712_proc_U0_ap_done;
reg    image_filter_fh_Block_Mat_exit712_proc_U0_ap_continue;
wire    image_filter_fh_Block_Mat_exit712_proc_U0_ap_idle;
wire    image_filter_fh_Block_Mat_exit712_proc_U0_ap_ready;
wire   [31:0] image_filter_fh_Block_Mat_exit712_proc_U0_rows;
wire   [31:0] image_filter_fh_Block_Mat_exit712_proc_U0_cols;
wire   [11:0] image_filter_fh_Block_Mat_exit712_proc_U0_ap_return_0;
wire   [11:0] image_filter_fh_Block_Mat_exit712_proc_U0_ap_return_1;
wire   [11:0] image_filter_fh_Block_Mat_exit712_proc_U0_ap_return_2;
wire   [11:0] image_filter_fh_Block_Mat_exit712_proc_U0_ap_return_3;
reg    ap_chn_write_image_filter_fh_Block_Mat_exit712_proc_U0_img_0_rows_V_channel;
wire    img_0_rows_V_channel_full_n;
reg    ap_reg_ready_img_0_rows_V_channel_full_n = 1'b0;
reg    ap_sig_ready_img_0_rows_V_channel_full_n;
reg    ap_chn_write_image_filter_fh_Block_Mat_exit712_proc_U0_img_0_cols_V_channel;
wire    img_0_cols_V_channel_full_n;
reg    ap_reg_ready_img_0_cols_V_channel_full_n = 1'b0;
reg    ap_sig_ready_img_0_cols_V_channel_full_n;
reg    ap_chn_write_image_filter_fh_Block_Mat_exit712_proc_U0_img_2_rows_V_channel;
wire    img_2_rows_V_channel_full_n;
reg    ap_reg_ready_img_2_rows_V_channel_full_n = 1'b0;
reg    ap_sig_ready_img_2_rows_V_channel_full_n;
reg    ap_chn_write_image_filter_fh_Block_Mat_exit712_proc_U0_img_2_cols_V_channel;
wire    img_2_cols_V_channel_full_n;
reg    ap_reg_ready_img_2_cols_V_channel_full_n = 1'b0;
reg    ap_sig_ready_img_2_cols_V_channel_full_n;
wire    image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_start;
wire    image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_done;
wire    image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_continue;
wire    image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_idle;
wire    image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_ready;
wire   [31:0] image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_input_stream_TDATA;
wire    image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_input_stream_TVALID;
wire    image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_input_stream_TREADY;
wire   [3:0] image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_input_stream_TKEEP;
wire   [3:0] image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_input_stream_TSTRB;
wire   [0:0] image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_input_stream_TUSER;
wire   [0:0] image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_input_stream_TLAST;
wire   [0:0] image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_input_stream_TID;
wire   [0:0] image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_input_stream_TDEST;
wire   [11:0] image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_img_rows_V_read;
wire   [11:0] image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_img_cols_V_read;
wire   [31:0] image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_img_data_stream_V_din;
wire    image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_img_data_stream_V_full_n;
wire    image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_img_data_stream_V_write;
reg    image_filter_fh_PadImage_480_640_51_U0_ap_start = 1'b0;
wire    image_filter_fh_PadImage_480_640_51_U0_ap_done;
wire    image_filter_fh_PadImage_480_640_51_U0_ap_continue;
wire    image_filter_fh_PadImage_480_640_51_U0_ap_idle;
wire    image_filter_fh_PadImage_480_640_51_U0_ap_ready;
wire   [31:0] image_filter_fh_PadImage_480_640_51_U0_in_data_stream_V_dout;
wire    image_filter_fh_PadImage_480_640_51_U0_in_data_stream_V_empty_n;
wire    image_filter_fh_PadImage_480_640_51_U0_in_data_stream_V_read;
wire   [31:0] image_filter_fh_PadImage_480_640_51_U0_out_data_stream_V_din;
wire    image_filter_fh_PadImage_480_640_51_U0_out_data_stream_V_full_n;
wire    image_filter_fh_PadImage_480_640_51_U0_out_data_stream_V_write;
wire    image_filter_fh_Block_Mat_exit71218_proc_U0_ap_start;
wire    image_filter_fh_Block_Mat_exit71218_proc_U0_ap_done;
wire    image_filter_fh_Block_Mat_exit71218_proc_U0_ap_continue;
wire    image_filter_fh_Block_Mat_exit71218_proc_U0_ap_idle;
wire    image_filter_fh_Block_Mat_exit71218_proc_U0_ap_ready;
wire   [31:0] image_filter_fh_Block_Mat_exit71218_proc_U0_filter_size;
wire   [5:0] image_filter_fh_Block_Mat_exit71218_proc_U0_ap_return;
wire    ap_chn_write_image_filter_fh_Block_Mat_exit71218_proc_U0_FILTER_SIZE_4_loc_channel;
wire    FILTER_SIZE_4_loc_channel_full_n;
wire    image_filter_fh_FilterTest_480_640_1_U0_ap_start;
wire    image_filter_fh_FilterTest_480_640_1_U0_ap_done;
wire    image_filter_fh_FilterTest_480_640_1_U0_ap_continue;
wire    image_filter_fh_FilterTest_480_640_1_U0_ap_idle;
wire    image_filter_fh_FilterTest_480_640_1_U0_ap_ready;
wire   [31:0] image_filter_fh_FilterTest_480_640_1_U0_in_data_stream_V_dout;
wire    image_filter_fh_FilterTest_480_640_1_U0_in_data_stream_V_empty_n;
wire    image_filter_fh_FilterTest_480_640_1_U0_in_data_stream_V_read;
wire   [31:0] image_filter_fh_FilterTest_480_640_1_U0_out_data_stream_V_din;
wire    image_filter_fh_FilterTest_480_640_1_U0_out_data_stream_V_full_n;
wire    image_filter_fh_FilterTest_480_640_1_U0_out_data_stream_V_write;
wire   [5:0] image_filter_fh_FilterTest_480_640_1_U0_p_read;
reg    image_filter_fh_Loop_1_proc_U0_ap_start = 1'b0;
wire    image_filter_fh_Loop_1_proc_U0_ap_done;
wire    image_filter_fh_Loop_1_proc_U0_ap_continue;
wire    image_filter_fh_Loop_1_proc_U0_ap_idle;
wire    image_filter_fh_Loop_1_proc_U0_ap_ready;
wire   [31:0] image_filter_fh_Loop_1_proc_U0_img_12_data_stream_0_V_dout;
wire    image_filter_fh_Loop_1_proc_U0_img_12_data_stream_0_V_empty_n;
wire    image_filter_fh_Loop_1_proc_U0_img_12_data_stream_0_V_read;
wire   [31:0] image_filter_fh_Loop_1_proc_U0_img_2_data_stream_0_V_din;
wire    image_filter_fh_Loop_1_proc_U0_img_2_data_stream_0_V_full_n;
wire    image_filter_fh_Loop_1_proc_U0_img_2_data_stream_0_V_write;
wire    image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_ap_start;
wire    image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_ap_done;
wire    image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_ap_continue;
wire    image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_ap_idle;
wire    image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_ap_ready;
wire   [11:0] image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_img_rows_V_read;
wire   [11:0] image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_img_cols_V_read;
wire   [31:0] image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_img_data_stream_V_dout;
wire    image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_img_data_stream_V_empty_n;
wire    image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_img_data_stream_V_read;
wire   [31:0] image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_output_stream_TDATA;
wire    image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_output_stream_TVALID;
wire    image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_output_stream_TREADY;
wire   [3:0] image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_output_stream_TKEEP;
wire   [3:0] image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_output_stream_TSTRB;
wire   [0:0] image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_output_stream_TUSER;
wire   [0:0] image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_output_stream_TLAST;
wire   [0:0] image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_output_stream_TID;
wire   [0:0] image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_output_stream_TDEST;
wire    ap_sig_hs_continue;
wire    img_0_rows_V_channel_U_ap_dummy_ce;
wire   [11:0] img_0_rows_V_channel_din;
wire    img_0_rows_V_channel_write;
wire   [11:0] img_0_rows_V_channel_dout;
wire    img_0_rows_V_channel_empty_n;
wire    img_0_rows_V_channel_read;
wire    img_0_cols_V_channel_U_ap_dummy_ce;
wire   [11:0] img_0_cols_V_channel_din;
wire    img_0_cols_V_channel_write;
wire   [11:0] img_0_cols_V_channel_dout;
wire    img_0_cols_V_channel_empty_n;
wire    img_0_cols_V_channel_read;
wire    img_2_rows_V_channel_U_ap_dummy_ce;
wire   [11:0] img_2_rows_V_channel_din;
wire    img_2_rows_V_channel_write;
wire   [11:0] img_2_rows_V_channel_dout;
wire    img_2_rows_V_channel_empty_n;
wire    img_2_rows_V_channel_read;
wire    img_2_cols_V_channel_U_ap_dummy_ce;
wire   [11:0] img_2_cols_V_channel_din;
wire    img_2_cols_V_channel_write;
wire   [11:0] img_2_cols_V_channel_dout;
wire    img_2_cols_V_channel_empty_n;
wire    img_2_cols_V_channel_read;
wire    img_0_data_stream_0_V_U_ap_dummy_ce;
wire   [31:0] img_0_data_stream_0_V_din;
wire    img_0_data_stream_0_V_full_n;
wire    img_0_data_stream_0_V_write;
wire   [31:0] img_0_data_stream_0_V_dout;
wire    img_0_data_stream_0_V_empty_n;
wire    img_0_data_stream_0_V_read;
wire    img_1_data_stream_0_V_U_ap_dummy_ce;
wire   [31:0] img_1_data_stream_0_V_din;
wire    img_1_data_stream_0_V_full_n;
wire    img_1_data_stream_0_V_write;
wire   [31:0] img_1_data_stream_0_V_dout;
wire    img_1_data_stream_0_V_empty_n;
wire    img_1_data_stream_0_V_read;
wire    FILTER_SIZE_4_loc_channel_U_ap_dummy_ce;
wire   [5:0] FILTER_SIZE_4_loc_channel_din;
wire    FILTER_SIZE_4_loc_channel_write;
wire   [5:0] FILTER_SIZE_4_loc_channel_dout;
wire    FILTER_SIZE_4_loc_channel_empty_n;
wire    FILTER_SIZE_4_loc_channel_read;
wire    img_12_data_stream_0_V_U_ap_dummy_ce;
wire   [31:0] img_12_data_stream_0_V_din;
wire    img_12_data_stream_0_V_full_n;
wire    img_12_data_stream_0_V_write;
wire   [31:0] img_12_data_stream_0_V_dout;
wire    img_12_data_stream_0_V_empty_n;
wire    img_12_data_stream_0_V_read;
wire    img_2_data_stream_0_V_U_ap_dummy_ce;
wire   [31:0] img_2_data_stream_0_V_din;
wire    img_2_data_stream_0_V_full_n;
wire    img_2_data_stream_0_V_write;
wire   [31:0] img_2_data_stream_0_V_dout;
wire    img_2_data_stream_0_V_empty_n;
wire    img_2_data_stream_0_V_read;
reg    ap_reg_procdone_image_filter_fh_Block_Mat_exit712_proc_U0 = 1'b0;
reg    ap_sig_hs_done;
reg    ap_reg_procdone_image_filter_fh_AXIvideo2Mat_32_480_640_5_U0 = 1'b0;
reg    ap_reg_procdone_image_filter_fh_PadImage_480_640_51_U0 = 1'b0;
reg    ap_reg_procdone_image_filter_fh_Block_Mat_exit71218_proc_U0 = 1'b0;
reg    ap_reg_procdone_image_filter_fh_FilterTest_480_640_1_U0 = 1'b0;
reg    ap_reg_procdone_image_filter_fh_Loop_1_proc_U0 = 1'b0;
reg    ap_reg_procdone_image_filter_fh_Mat2AXIvideo_32_480_640_5_U0 = 1'b0;
reg    ap_CS;
reg    ap_sig_top_allready;
reg    ap_reg_ready_image_filter_fh_Block_Mat_exit712_proc_U0_ap_ready = 1'b0;
reg    ap_sig_ready_image_filter_fh_Block_Mat_exit712_proc_U0_ap_ready;
reg    ap_sig_start_in_image_filter_fh_Block_Mat_exit712_proc_U0_ap_start;
reg    ap_reg_ready_image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_ready = 1'b0;
reg    ap_sig_ready_image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_ready;
reg    ap_sig_start_in_image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_start;
reg    ap_reg_ready_image_filter_fh_Block_Mat_exit71218_proc_U0_ap_ready = 1'b0;
reg    ap_sig_ready_image_filter_fh_Block_Mat_exit71218_proc_U0_ap_ready;
reg    ap_sig_start_in_image_filter_fh_Block_Mat_exit71218_proc_U0_ap_start;


image_filter_fh_control_bus_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_BUS_DATA_WIDTH ))
image_filter_fh_control_bus_s_axi_U(
    .AWVALID( s_axi_control_bus_AWVALID ),
    .AWREADY( s_axi_control_bus_AWREADY ),
    .AWADDR( s_axi_control_bus_AWADDR ),
    .WVALID( s_axi_control_bus_WVALID ),
    .WREADY( s_axi_control_bus_WREADY ),
    .WDATA( s_axi_control_bus_WDATA ),
    .WSTRB( s_axi_control_bus_WSTRB ),
    .ARVALID( s_axi_control_bus_ARVALID ),
    .ARREADY( s_axi_control_bus_ARREADY ),
    .ARADDR( s_axi_control_bus_ARADDR ),
    .RVALID( s_axi_control_bus_RVALID ),
    .RREADY( s_axi_control_bus_RREADY ),
    .RDATA( s_axi_control_bus_RDATA ),
    .RRESP( s_axi_control_bus_RRESP ),
    .BVALID( s_axi_control_bus_BVALID ),
    .BREADY( s_axi_control_bus_BREADY ),
    .BRESP( s_axi_control_bus_BRESP ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( image_filter_fh_control_bus_s_axi_U_ap_dummy_ce ),
    .ap_start( ap_start ),
    .interrupt( interrupt ),
    .ap_ready( ap_ready ),
    .ap_done( ap_done ),
    .ap_idle( ap_idle ),
    .rows( rows ),
    .cols( cols ),
    .filter_size( filter_size )
);

image_filter_fh_Block_Mat_exit712_proc image_filter_fh_Block_Mat_exit712_proc_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_fh_Block_Mat_exit712_proc_U0_ap_start ),
    .ap_done( image_filter_fh_Block_Mat_exit712_proc_U0_ap_done ),
    .ap_continue( image_filter_fh_Block_Mat_exit712_proc_U0_ap_continue ),
    .ap_idle( image_filter_fh_Block_Mat_exit712_proc_U0_ap_idle ),
    .ap_ready( image_filter_fh_Block_Mat_exit712_proc_U0_ap_ready ),
    .rows( image_filter_fh_Block_Mat_exit712_proc_U0_rows ),
    .cols( image_filter_fh_Block_Mat_exit712_proc_U0_cols ),
    .ap_return_0( image_filter_fh_Block_Mat_exit712_proc_U0_ap_return_0 ),
    .ap_return_1( image_filter_fh_Block_Mat_exit712_proc_U0_ap_return_1 ),
    .ap_return_2( image_filter_fh_Block_Mat_exit712_proc_U0_ap_return_2 ),
    .ap_return_3( image_filter_fh_Block_Mat_exit712_proc_U0_ap_return_3 )
);

image_filter_fh_AXIvideo2Mat_32_480_640_5_s image_filter_fh_AXIvideo2Mat_32_480_640_5_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_start ),
    .ap_done( image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_done ),
    .ap_continue( image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_continue ),
    .ap_idle( image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_idle ),
    .ap_ready( image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_ready ),
    .input_stream_TDATA( image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_input_stream_TDATA ),
    .input_stream_TVALID( image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_input_stream_TVALID ),
    .input_stream_TREADY( image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_input_stream_TREADY ),
    .input_stream_TKEEP( image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_input_stream_TKEEP ),
    .input_stream_TSTRB( image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_input_stream_TSTRB ),
    .input_stream_TUSER( image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_input_stream_TUSER ),
    .input_stream_TLAST( image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_input_stream_TLAST ),
    .input_stream_TID( image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_input_stream_TID ),
    .input_stream_TDEST( image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_input_stream_TDEST ),
    .img_rows_V_read( image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_img_rows_V_read ),
    .img_cols_V_read( image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_img_cols_V_read ),
    .img_data_stream_V_din( image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_img_data_stream_V_din ),
    .img_data_stream_V_full_n( image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_img_data_stream_V_full_n ),
    .img_data_stream_V_write( image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_img_data_stream_V_write )
);

image_filter_fh_PadImage_480_640_51_s image_filter_fh_PadImage_480_640_51_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_fh_PadImage_480_640_51_U0_ap_start ),
    .ap_done( image_filter_fh_PadImage_480_640_51_U0_ap_done ),
    .ap_continue( image_filter_fh_PadImage_480_640_51_U0_ap_continue ),
    .ap_idle( image_filter_fh_PadImage_480_640_51_U0_ap_idle ),
    .ap_ready( image_filter_fh_PadImage_480_640_51_U0_ap_ready ),
    .in_data_stream_V_dout( image_filter_fh_PadImage_480_640_51_U0_in_data_stream_V_dout ),
    .in_data_stream_V_empty_n( image_filter_fh_PadImage_480_640_51_U0_in_data_stream_V_empty_n ),
    .in_data_stream_V_read( image_filter_fh_PadImage_480_640_51_U0_in_data_stream_V_read ),
    .out_data_stream_V_din( image_filter_fh_PadImage_480_640_51_U0_out_data_stream_V_din ),
    .out_data_stream_V_full_n( image_filter_fh_PadImage_480_640_51_U0_out_data_stream_V_full_n ),
    .out_data_stream_V_write( image_filter_fh_PadImage_480_640_51_U0_out_data_stream_V_write )
);

image_filter_fh_Block_Mat_exit71218_proc image_filter_fh_Block_Mat_exit71218_proc_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_fh_Block_Mat_exit71218_proc_U0_ap_start ),
    .ap_done( image_filter_fh_Block_Mat_exit71218_proc_U0_ap_done ),
    .ap_continue( image_filter_fh_Block_Mat_exit71218_proc_U0_ap_continue ),
    .ap_idle( image_filter_fh_Block_Mat_exit71218_proc_U0_ap_idle ),
    .ap_ready( image_filter_fh_Block_Mat_exit71218_proc_U0_ap_ready ),
    .filter_size( image_filter_fh_Block_Mat_exit71218_proc_U0_filter_size ),
    .ap_return( image_filter_fh_Block_Mat_exit71218_proc_U0_ap_return )
);

image_filter_fh_FilterTest_480_640_1 image_filter_fh_FilterTest_480_640_1_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_fh_FilterTest_480_640_1_U0_ap_start ),
    .ap_done( image_filter_fh_FilterTest_480_640_1_U0_ap_done ),
    .ap_continue( image_filter_fh_FilterTest_480_640_1_U0_ap_continue ),
    .ap_idle( image_filter_fh_FilterTest_480_640_1_U0_ap_idle ),
    .ap_ready( image_filter_fh_FilterTest_480_640_1_U0_ap_ready ),
    .in_data_stream_V_dout( image_filter_fh_FilterTest_480_640_1_U0_in_data_stream_V_dout ),
    .in_data_stream_V_empty_n( image_filter_fh_FilterTest_480_640_1_U0_in_data_stream_V_empty_n ),
    .in_data_stream_V_read( image_filter_fh_FilterTest_480_640_1_U0_in_data_stream_V_read ),
    .out_data_stream_V_din( image_filter_fh_FilterTest_480_640_1_U0_out_data_stream_V_din ),
    .out_data_stream_V_full_n( image_filter_fh_FilterTest_480_640_1_U0_out_data_stream_V_full_n ),
    .out_data_stream_V_write( image_filter_fh_FilterTest_480_640_1_U0_out_data_stream_V_write ),
    .p_read( image_filter_fh_FilterTest_480_640_1_U0_p_read )
);

image_filter_fh_Loop_1_proc image_filter_fh_Loop_1_proc_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_fh_Loop_1_proc_U0_ap_start ),
    .ap_done( image_filter_fh_Loop_1_proc_U0_ap_done ),
    .ap_continue( image_filter_fh_Loop_1_proc_U0_ap_continue ),
    .ap_idle( image_filter_fh_Loop_1_proc_U0_ap_idle ),
    .ap_ready( image_filter_fh_Loop_1_proc_U0_ap_ready ),
    .img_12_data_stream_0_V_dout( image_filter_fh_Loop_1_proc_U0_img_12_data_stream_0_V_dout ),
    .img_12_data_stream_0_V_empty_n( image_filter_fh_Loop_1_proc_U0_img_12_data_stream_0_V_empty_n ),
    .img_12_data_stream_0_V_read( image_filter_fh_Loop_1_proc_U0_img_12_data_stream_0_V_read ),
    .img_2_data_stream_0_V_din( image_filter_fh_Loop_1_proc_U0_img_2_data_stream_0_V_din ),
    .img_2_data_stream_0_V_full_n( image_filter_fh_Loop_1_proc_U0_img_2_data_stream_0_V_full_n ),
    .img_2_data_stream_0_V_write( image_filter_fh_Loop_1_proc_U0_img_2_data_stream_0_V_write )
);

image_filter_fh_Mat2AXIvideo_32_480_640_5_s image_filter_fh_Mat2AXIvideo_32_480_640_5_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_ap_start ),
    .ap_done( image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_ap_done ),
    .ap_continue( image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_ap_continue ),
    .ap_idle( image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_ap_idle ),
    .ap_ready( image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_ap_ready ),
    .img_rows_V_read( image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_img_rows_V_read ),
    .img_cols_V_read( image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_img_cols_V_read ),
    .img_data_stream_V_dout( image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_img_data_stream_V_dout ),
    .img_data_stream_V_empty_n( image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_img_data_stream_V_empty_n ),
    .img_data_stream_V_read( image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_img_data_stream_V_read ),
    .output_stream_TDATA( image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_output_stream_TDATA ),
    .output_stream_TVALID( image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_output_stream_TVALID ),
    .output_stream_TREADY( image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_output_stream_TREADY ),
    .output_stream_TKEEP( image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_output_stream_TKEEP ),
    .output_stream_TSTRB( image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_output_stream_TSTRB ),
    .output_stream_TUSER( image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_output_stream_TUSER ),
    .output_stream_TLAST( image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_output_stream_TLAST ),
    .output_stream_TID( image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_output_stream_TID ),
    .output_stream_TDEST( image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_output_stream_TDEST )
);

FIFO_image_filter_fh_img_0_rows_V_channel img_0_rows_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_0_rows_V_channel_U_ap_dummy_ce ),
    .if_write_ce( img_0_rows_V_channel_U_ap_dummy_ce ),
    .if_din( img_0_rows_V_channel_din ),
    .if_full_n( img_0_rows_V_channel_full_n ),
    .if_write( img_0_rows_V_channel_write ),
    .if_dout( img_0_rows_V_channel_dout ),
    .if_empty_n( img_0_rows_V_channel_empty_n ),
    .if_read( img_0_rows_V_channel_read )
);

FIFO_image_filter_fh_img_0_cols_V_channel img_0_cols_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_0_cols_V_channel_U_ap_dummy_ce ),
    .if_write_ce( img_0_cols_V_channel_U_ap_dummy_ce ),
    .if_din( img_0_cols_V_channel_din ),
    .if_full_n( img_0_cols_V_channel_full_n ),
    .if_write( img_0_cols_V_channel_write ),
    .if_dout( img_0_cols_V_channel_dout ),
    .if_empty_n( img_0_cols_V_channel_empty_n ),
    .if_read( img_0_cols_V_channel_read )
);

FIFO_image_filter_fh_img_2_rows_V_channel img_2_rows_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_2_rows_V_channel_U_ap_dummy_ce ),
    .if_write_ce( img_2_rows_V_channel_U_ap_dummy_ce ),
    .if_din( img_2_rows_V_channel_din ),
    .if_full_n( img_2_rows_V_channel_full_n ),
    .if_write( img_2_rows_V_channel_write ),
    .if_dout( img_2_rows_V_channel_dout ),
    .if_empty_n( img_2_rows_V_channel_empty_n ),
    .if_read( img_2_rows_V_channel_read )
);

FIFO_image_filter_fh_img_2_cols_V_channel img_2_cols_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_2_cols_V_channel_U_ap_dummy_ce ),
    .if_write_ce( img_2_cols_V_channel_U_ap_dummy_ce ),
    .if_din( img_2_cols_V_channel_din ),
    .if_full_n( img_2_cols_V_channel_full_n ),
    .if_write( img_2_cols_V_channel_write ),
    .if_dout( img_2_cols_V_channel_dout ),
    .if_empty_n( img_2_cols_V_channel_empty_n ),
    .if_read( img_2_cols_V_channel_read )
);

FIFO_image_filter_fh_img_0_data_stream_0_V img_0_data_stream_0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_0_data_stream_0_V_U_ap_dummy_ce ),
    .if_write_ce( img_0_data_stream_0_V_U_ap_dummy_ce ),
    .if_din( img_0_data_stream_0_V_din ),
    .if_full_n( img_0_data_stream_0_V_full_n ),
    .if_write( img_0_data_stream_0_V_write ),
    .if_dout( img_0_data_stream_0_V_dout ),
    .if_empty_n( img_0_data_stream_0_V_empty_n ),
    .if_read( img_0_data_stream_0_V_read )
);

FIFO_image_filter_fh_img_1_data_stream_0_V img_1_data_stream_0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_1_data_stream_0_V_U_ap_dummy_ce ),
    .if_write_ce( img_1_data_stream_0_V_U_ap_dummy_ce ),
    .if_din( img_1_data_stream_0_V_din ),
    .if_full_n( img_1_data_stream_0_V_full_n ),
    .if_write( img_1_data_stream_0_V_write ),
    .if_dout( img_1_data_stream_0_V_dout ),
    .if_empty_n( img_1_data_stream_0_V_empty_n ),
    .if_read( img_1_data_stream_0_V_read )
);

FIFO_image_filter_fh_FILTER_SIZE_4_loc_channel FILTER_SIZE_4_loc_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( FILTER_SIZE_4_loc_channel_U_ap_dummy_ce ),
    .if_write_ce( FILTER_SIZE_4_loc_channel_U_ap_dummy_ce ),
    .if_din( FILTER_SIZE_4_loc_channel_din ),
    .if_full_n( FILTER_SIZE_4_loc_channel_full_n ),
    .if_write( FILTER_SIZE_4_loc_channel_write ),
    .if_dout( FILTER_SIZE_4_loc_channel_dout ),
    .if_empty_n( FILTER_SIZE_4_loc_channel_empty_n ),
    .if_read( FILTER_SIZE_4_loc_channel_read )
);

FIFO_image_filter_fh_img_12_data_stream_0_V img_12_data_stream_0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_12_data_stream_0_V_U_ap_dummy_ce ),
    .if_write_ce( img_12_data_stream_0_V_U_ap_dummy_ce ),
    .if_din( img_12_data_stream_0_V_din ),
    .if_full_n( img_12_data_stream_0_V_full_n ),
    .if_write( img_12_data_stream_0_V_write ),
    .if_dout( img_12_data_stream_0_V_dout ),
    .if_empty_n( img_12_data_stream_0_V_empty_n ),
    .if_read( img_12_data_stream_0_V_read )
);

FIFO_image_filter_fh_img_2_data_stream_0_V img_2_data_stream_0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_2_data_stream_0_V_U_ap_dummy_ce ),
    .if_write_ce( img_2_data_stream_0_V_U_ap_dummy_ce ),
    .if_din( img_2_data_stream_0_V_din ),
    .if_full_n( img_2_data_stream_0_V_full_n ),
    .if_write( img_2_data_stream_0_V_write ),
    .if_dout( img_2_data_stream_0_V_dout ),
    .if_empty_n( img_2_data_stream_0_V_empty_n ),
    .if_read( img_2_data_stream_0_V_read )
);



/// ap_reg_procdone_image_filter_fh_AXIvideo2Mat_32_480_640_5_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_fh_AXIvideo2Mat_32_480_640_5_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_fh_AXIvideo2Mat_32_480_640_5_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_fh_AXIvideo2Mat_32_480_640_5_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_done)) begin
            ap_reg_procdone_image_filter_fh_AXIvideo2Mat_32_480_640_5_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_image_filter_fh_Block_Mat_exit71218_proc_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_fh_Block_Mat_exit71218_proc_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_fh_Block_Mat_exit71218_proc_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_fh_Block_Mat_exit71218_proc_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_fh_Block_Mat_exit71218_proc_U0_ap_done)) begin
            ap_reg_procdone_image_filter_fh_Block_Mat_exit71218_proc_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_image_filter_fh_Block_Mat_exit712_proc_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_fh_Block_Mat_exit712_proc_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_fh_Block_Mat_exit712_proc_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_fh_Block_Mat_exit712_proc_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_fh_Block_Mat_exit712_proc_U0_ap_done)) begin
            ap_reg_procdone_image_filter_fh_Block_Mat_exit712_proc_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_image_filter_fh_FilterTest_480_640_1_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_fh_FilterTest_480_640_1_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_fh_FilterTest_480_640_1_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_fh_FilterTest_480_640_1_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_fh_FilterTest_480_640_1_U0_ap_done)) begin
            ap_reg_procdone_image_filter_fh_FilterTest_480_640_1_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_image_filter_fh_Loop_1_proc_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_fh_Loop_1_proc_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_fh_Loop_1_proc_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_fh_Loop_1_proc_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_fh_Loop_1_proc_U0_ap_done)) begin
            ap_reg_procdone_image_filter_fh_Loop_1_proc_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_image_filter_fh_Mat2AXIvideo_32_480_640_5_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_fh_Mat2AXIvideo_32_480_640_5_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_fh_Mat2AXIvideo_32_480_640_5_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_fh_Mat2AXIvideo_32_480_640_5_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_ap_done)) begin
            ap_reg_procdone_image_filter_fh_Mat2AXIvideo_32_480_640_5_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_image_filter_fh_PadImage_480_640_51_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_fh_PadImage_480_640_51_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_fh_PadImage_480_640_51_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_fh_PadImage_480_640_51_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_fh_PadImage_480_640_51_U0_ap_done)) begin
            ap_reg_procdone_image_filter_fh_PadImage_480_640_51_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_ready assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_ready
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_ready <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_top_allready))) begin
            ap_reg_ready_image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_ready <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_ready)) begin
            ap_reg_ready_image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_ready <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_image_filter_fh_Block_Mat_exit71218_proc_U0_ap_ready assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_image_filter_fh_Block_Mat_exit71218_proc_U0_ap_ready
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_image_filter_fh_Block_Mat_exit71218_proc_U0_ap_ready <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_top_allready))) begin
            ap_reg_ready_image_filter_fh_Block_Mat_exit71218_proc_U0_ap_ready <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_fh_Block_Mat_exit71218_proc_U0_ap_ready)) begin
            ap_reg_ready_image_filter_fh_Block_Mat_exit71218_proc_U0_ap_ready <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_image_filter_fh_Block_Mat_exit712_proc_U0_ap_ready assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_image_filter_fh_Block_Mat_exit712_proc_U0_ap_ready
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_image_filter_fh_Block_Mat_exit712_proc_U0_ap_ready <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_top_allready))) begin
            ap_reg_ready_image_filter_fh_Block_Mat_exit712_proc_U0_ap_ready <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_fh_Block_Mat_exit712_proc_U0_ap_ready)) begin
            ap_reg_ready_image_filter_fh_Block_Mat_exit712_proc_U0_ap_ready <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_0_cols_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_0_cols_V_channel_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_0_cols_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_fh_Block_Mat_exit712_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_fh_Block_Mat_exit712_proc_U0_ap_continue))) begin
            ap_reg_ready_img_0_cols_V_channel_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_fh_Block_Mat_exit712_proc_U0_ap_done) & (ap_const_logic_1 == img_0_cols_V_channel_full_n))) begin
            ap_reg_ready_img_0_cols_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_0_rows_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_0_rows_V_channel_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_0_rows_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_fh_Block_Mat_exit712_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_fh_Block_Mat_exit712_proc_U0_ap_continue))) begin
            ap_reg_ready_img_0_rows_V_channel_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_fh_Block_Mat_exit712_proc_U0_ap_done) & (ap_const_logic_1 == img_0_rows_V_channel_full_n))) begin
            ap_reg_ready_img_0_rows_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_2_cols_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_2_cols_V_channel_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_2_cols_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_fh_Block_Mat_exit712_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_fh_Block_Mat_exit712_proc_U0_ap_continue))) begin
            ap_reg_ready_img_2_cols_V_channel_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_fh_Block_Mat_exit712_proc_U0_ap_done) & (ap_const_logic_1 == img_2_cols_V_channel_full_n))) begin
            ap_reg_ready_img_2_cols_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_2_rows_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_2_rows_V_channel_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_2_rows_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_fh_Block_Mat_exit712_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_fh_Block_Mat_exit712_proc_U0_ap_continue))) begin
            ap_reg_ready_img_2_rows_V_channel_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_fh_Block_Mat_exit712_proc_U0_ap_done) & (ap_const_logic_1 == img_2_rows_V_channel_full_n))) begin
            ap_reg_ready_img_2_rows_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// image_filter_fh_Loop_1_proc_U0_ap_start assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_image_filter_fh_Loop_1_proc_U0_ap_start
    if (ap_rst_n_inv == 1'b1) begin
        image_filter_fh_Loop_1_proc_U0_ap_start <= ap_const_logic_0;
    end else begin
        image_filter_fh_Loop_1_proc_U0_ap_start <= ap_const_logic_1;
    end
end

/// image_filter_fh_PadImage_480_640_51_U0_ap_start assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_image_filter_fh_PadImage_480_640_51_U0_ap_start
    if (ap_rst_n_inv == 1'b1) begin
        image_filter_fh_PadImage_480_640_51_U0_ap_start <= ap_const_logic_0;
    end else begin
        image_filter_fh_PadImage_480_640_51_U0_ap_start <= ap_const_logic_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    ap_CS <= ap_const_logic_0;
end

/// ap_chn_write_image_filter_fh_Block_Mat_exit712_proc_U0_img_0_cols_V_channel assign process. ///
always @ (image_filter_fh_Block_Mat_exit712_proc_U0_ap_done or ap_reg_ready_img_0_cols_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_0_cols_V_channel_full_n)) begin
        ap_chn_write_image_filter_fh_Block_Mat_exit712_proc_U0_img_0_cols_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_fh_Block_Mat_exit712_proc_U0_img_0_cols_V_channel = image_filter_fh_Block_Mat_exit712_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_fh_Block_Mat_exit712_proc_U0_img_0_rows_V_channel assign process. ///
always @ (image_filter_fh_Block_Mat_exit712_proc_U0_ap_done or ap_reg_ready_img_0_rows_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_0_rows_V_channel_full_n)) begin
        ap_chn_write_image_filter_fh_Block_Mat_exit712_proc_U0_img_0_rows_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_fh_Block_Mat_exit712_proc_U0_img_0_rows_V_channel = image_filter_fh_Block_Mat_exit712_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_fh_Block_Mat_exit712_proc_U0_img_2_cols_V_channel assign process. ///
always @ (image_filter_fh_Block_Mat_exit712_proc_U0_ap_done or ap_reg_ready_img_2_cols_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_2_cols_V_channel_full_n)) begin
        ap_chn_write_image_filter_fh_Block_Mat_exit712_proc_U0_img_2_cols_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_fh_Block_Mat_exit712_proc_U0_img_2_cols_V_channel = image_filter_fh_Block_Mat_exit712_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_fh_Block_Mat_exit712_proc_U0_img_2_rows_V_channel assign process. ///
always @ (image_filter_fh_Block_Mat_exit712_proc_U0_ap_done or ap_reg_ready_img_2_rows_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_2_rows_V_channel_full_n)) begin
        ap_chn_write_image_filter_fh_Block_Mat_exit712_proc_U0_img_2_rows_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_fh_Block_Mat_exit712_proc_U0_img_2_rows_V_channel = image_filter_fh_Block_Mat_exit712_proc_U0_ap_done;
    end
end

/// ap_idle assign process. ///
always @ (image_filter_fh_Block_Mat_exit712_proc_U0_ap_idle or image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_idle or image_filter_fh_PadImage_480_640_51_U0_ap_idle or image_filter_fh_Block_Mat_exit71218_proc_U0_ap_idle or image_filter_fh_FilterTest_480_640_1_U0_ap_idle or image_filter_fh_Loop_1_proc_U0_ap_idle or image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_ap_idle or img_0_rows_V_channel_empty_n or img_0_cols_V_channel_empty_n or img_2_rows_V_channel_empty_n or img_2_cols_V_channel_empty_n or FILTER_SIZE_4_loc_channel_empty_n)
begin
    if (((ap_const_logic_1 == image_filter_fh_Block_Mat_exit712_proc_U0_ap_idle) & (ap_const_logic_1 == image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_idle) & (ap_const_logic_1 == image_filter_fh_PadImage_480_640_51_U0_ap_idle) & (ap_const_logic_1 == image_filter_fh_Block_Mat_exit71218_proc_U0_ap_idle) & (ap_const_logic_1 == image_filter_fh_FilterTest_480_640_1_U0_ap_idle) & (ap_const_logic_1 == image_filter_fh_Loop_1_proc_U0_ap_idle) & (ap_const_logic_1 == image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_ap_idle) & (ap_const_logic_0 == img_0_rows_V_channel_empty_n) & (ap_const_logic_0 == img_0_cols_V_channel_empty_n) & (ap_const_logic_0 == img_2_rows_V_channel_empty_n) & (ap_const_logic_0 == img_2_cols_V_channel_empty_n) & (ap_const_logic_0 == FILTER_SIZE_4_loc_channel_empty_n))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_sig_hs_done assign process. ///
always @ (image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_ap_done)
begin
    if ((ap_const_logic_1 == image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_ap_done)) begin
        ap_sig_hs_done = ap_const_logic_1;
    end else begin
        ap_sig_hs_done = ap_const_logic_0;
    end
end

/// ap_sig_ready_image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_ready assign process. ///
always @ (image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_ready or ap_reg_ready_image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_ready)
begin
    if ((ap_const_logic_0 == ap_reg_ready_image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_ready)) begin
        ap_sig_ready_image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_ready = image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_ready;
    end else begin
        ap_sig_ready_image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_ready = ap_const_logic_1;
    end
end

/// ap_sig_ready_image_filter_fh_Block_Mat_exit71218_proc_U0_ap_ready assign process. ///
always @ (image_filter_fh_Block_Mat_exit71218_proc_U0_ap_ready or ap_reg_ready_image_filter_fh_Block_Mat_exit71218_proc_U0_ap_ready)
begin
    if ((ap_const_logic_0 == ap_reg_ready_image_filter_fh_Block_Mat_exit71218_proc_U0_ap_ready)) begin
        ap_sig_ready_image_filter_fh_Block_Mat_exit71218_proc_U0_ap_ready = image_filter_fh_Block_Mat_exit71218_proc_U0_ap_ready;
    end else begin
        ap_sig_ready_image_filter_fh_Block_Mat_exit71218_proc_U0_ap_ready = ap_const_logic_1;
    end
end

/// ap_sig_ready_image_filter_fh_Block_Mat_exit712_proc_U0_ap_ready assign process. ///
always @ (image_filter_fh_Block_Mat_exit712_proc_U0_ap_ready or ap_reg_ready_image_filter_fh_Block_Mat_exit712_proc_U0_ap_ready)
begin
    if ((ap_const_logic_0 == ap_reg_ready_image_filter_fh_Block_Mat_exit712_proc_U0_ap_ready)) begin
        ap_sig_ready_image_filter_fh_Block_Mat_exit712_proc_U0_ap_ready = image_filter_fh_Block_Mat_exit712_proc_U0_ap_ready;
    end else begin
        ap_sig_ready_image_filter_fh_Block_Mat_exit712_proc_U0_ap_ready = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_0_cols_V_channel_full_n assign process. ///
always @ (img_0_cols_V_channel_full_n or ap_reg_ready_img_0_cols_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_0_cols_V_channel_full_n)) begin
        ap_sig_ready_img_0_cols_V_channel_full_n = img_0_cols_V_channel_full_n;
    end else begin
        ap_sig_ready_img_0_cols_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_0_rows_V_channel_full_n assign process. ///
always @ (img_0_rows_V_channel_full_n or ap_reg_ready_img_0_rows_V_channel_full_n)
begin
    if ((ap_reg_ready_img_0_rows_V_channel_full_n == ap_const_logic_0)) begin
        ap_sig_ready_img_0_rows_V_channel_full_n = img_0_rows_V_channel_full_n;
    end else begin
        ap_sig_ready_img_0_rows_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_2_cols_V_channel_full_n assign process. ///
always @ (img_2_cols_V_channel_full_n or ap_reg_ready_img_2_cols_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_2_cols_V_channel_full_n)) begin
        ap_sig_ready_img_2_cols_V_channel_full_n = img_2_cols_V_channel_full_n;
    end else begin
        ap_sig_ready_img_2_cols_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_2_rows_V_channel_full_n assign process. ///
always @ (img_2_rows_V_channel_full_n or ap_reg_ready_img_2_rows_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_2_rows_V_channel_full_n)) begin
        ap_sig_ready_img_2_rows_V_channel_full_n = img_2_rows_V_channel_full_n;
    end else begin
        ap_sig_ready_img_2_rows_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_start_in_image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_start assign process. ///
always @ (ap_start or ap_reg_ready_image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_ready)
begin
    if (((ap_const_logic_1 == ap_start) & (ap_const_logic_0 == ap_reg_ready_image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_ready))) begin
        ap_sig_start_in_image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_start = ap_const_logic_1;
    end else begin
        ap_sig_start_in_image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_start = ap_const_logic_0;
    end
end

/// ap_sig_start_in_image_filter_fh_Block_Mat_exit71218_proc_U0_ap_start assign process. ///
always @ (ap_start or ap_reg_ready_image_filter_fh_Block_Mat_exit71218_proc_U0_ap_ready)
begin
    if (((ap_const_logic_1 == ap_start) & (ap_const_logic_0 == ap_reg_ready_image_filter_fh_Block_Mat_exit71218_proc_U0_ap_ready))) begin
        ap_sig_start_in_image_filter_fh_Block_Mat_exit71218_proc_U0_ap_start = ap_const_logic_1;
    end else begin
        ap_sig_start_in_image_filter_fh_Block_Mat_exit71218_proc_U0_ap_start = ap_const_logic_0;
    end
end

/// ap_sig_start_in_image_filter_fh_Block_Mat_exit712_proc_U0_ap_start assign process. ///
always @ (ap_start or ap_reg_ready_image_filter_fh_Block_Mat_exit712_proc_U0_ap_ready)
begin
    if (((ap_const_logic_0 == ap_reg_ready_image_filter_fh_Block_Mat_exit712_proc_U0_ap_ready) & (ap_const_logic_1 == ap_start))) begin
        ap_sig_start_in_image_filter_fh_Block_Mat_exit712_proc_U0_ap_start = ap_const_logic_1;
    end else begin
        ap_sig_start_in_image_filter_fh_Block_Mat_exit712_proc_U0_ap_start = ap_const_logic_0;
    end
end

/// ap_sig_top_allready assign process. ///
always @ (ap_sig_ready_image_filter_fh_Block_Mat_exit712_proc_U0_ap_ready or ap_sig_ready_image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_ready or ap_sig_ready_image_filter_fh_Block_Mat_exit71218_proc_U0_ap_ready)
begin
    if (((ap_const_logic_1 == ap_sig_ready_image_filter_fh_Block_Mat_exit712_proc_U0_ap_ready) & (ap_const_logic_1 == ap_sig_ready_image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_ready) & (ap_const_logic_1 == ap_sig_ready_image_filter_fh_Block_Mat_exit71218_proc_U0_ap_ready))) begin
        ap_sig_top_allready = ap_const_logic_1;
    end else begin
        ap_sig_top_allready = ap_const_logic_0;
    end
end

/// image_filter_fh_Block_Mat_exit712_proc_U0_ap_continue assign process. ///
always @ (ap_sig_ready_img_0_rows_V_channel_full_n or ap_sig_ready_img_0_cols_V_channel_full_n or ap_sig_ready_img_2_rows_V_channel_full_n or ap_sig_ready_img_2_cols_V_channel_full_n)
begin
    if (((ap_const_logic_1 == ap_sig_ready_img_0_rows_V_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_img_0_cols_V_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_img_2_rows_V_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_img_2_cols_V_channel_full_n))) begin
        image_filter_fh_Block_Mat_exit712_proc_U0_ap_continue = ap_const_logic_1;
    end else begin
        image_filter_fh_Block_Mat_exit712_proc_U0_ap_continue = ap_const_logic_0;
    end
end
assign FILTER_SIZE_4_loc_channel_U_ap_dummy_ce = ap_const_logic_1;
assign FILTER_SIZE_4_loc_channel_din = image_filter_fh_Block_Mat_exit71218_proc_U0_ap_return;
assign FILTER_SIZE_4_loc_channel_read = image_filter_fh_FilterTest_480_640_1_U0_ap_ready;
assign FILTER_SIZE_4_loc_channel_write = ap_chn_write_image_filter_fh_Block_Mat_exit71218_proc_U0_FILTER_SIZE_4_loc_channel;
assign ap_chn_write_image_filter_fh_Block_Mat_exit71218_proc_U0_FILTER_SIZE_4_loc_channel = image_filter_fh_Block_Mat_exit71218_proc_U0_ap_done;
assign ap_done = ap_sig_hs_done;
assign ap_ready = ap_sig_top_allready;

/// ap_rst_n_inv assign process. ///
always @ (ap_rst_n)
begin
    ap_rst_n_inv = ~ap_rst_n;
end
assign ap_sig_hs_continue = ap_const_logic_1;
assign image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_continue = ap_const_logic_1;
assign image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_start = (img_0_rows_V_channel_empty_n & img_0_cols_V_channel_empty_n & ap_sig_start_in_image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_start);
assign image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_img_cols_V_read = img_0_cols_V_channel_dout;
assign image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_img_data_stream_V_full_n = img_0_data_stream_0_V_full_n;
assign image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_img_rows_V_read = img_0_rows_V_channel_dout;
assign image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_input_stream_TDATA = input_stream_TDATA;
assign image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_input_stream_TDEST = input_stream_TDEST;
assign image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_input_stream_TID = input_stream_TID;
assign image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_input_stream_TKEEP = input_stream_TKEEP;
assign image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_input_stream_TLAST = input_stream_TLAST;
assign image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_input_stream_TSTRB = input_stream_TSTRB;
assign image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_input_stream_TUSER = input_stream_TUSER;
assign image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_input_stream_TVALID = input_stream_TVALID;
assign image_filter_fh_Block_Mat_exit71218_proc_U0_ap_continue = FILTER_SIZE_4_loc_channel_full_n;
assign image_filter_fh_Block_Mat_exit71218_proc_U0_ap_start = ap_sig_start_in_image_filter_fh_Block_Mat_exit71218_proc_U0_ap_start;
assign image_filter_fh_Block_Mat_exit71218_proc_U0_filter_size = filter_size;
assign image_filter_fh_Block_Mat_exit712_proc_U0_ap_start = ap_sig_start_in_image_filter_fh_Block_Mat_exit712_proc_U0_ap_start;
assign image_filter_fh_Block_Mat_exit712_proc_U0_cols = cols;
assign image_filter_fh_Block_Mat_exit712_proc_U0_rows = rows;
assign image_filter_fh_FilterTest_480_640_1_U0_ap_continue = ap_const_logic_1;
assign image_filter_fh_FilterTest_480_640_1_U0_ap_start = FILTER_SIZE_4_loc_channel_empty_n;
assign image_filter_fh_FilterTest_480_640_1_U0_in_data_stream_V_dout = img_1_data_stream_0_V_dout;
assign image_filter_fh_FilterTest_480_640_1_U0_in_data_stream_V_empty_n = img_1_data_stream_0_V_empty_n;
assign image_filter_fh_FilterTest_480_640_1_U0_out_data_stream_V_full_n = img_12_data_stream_0_V_full_n;
assign image_filter_fh_FilterTest_480_640_1_U0_p_read = FILTER_SIZE_4_loc_channel_dout;
assign image_filter_fh_Loop_1_proc_U0_ap_continue = ap_const_logic_1;
assign image_filter_fh_Loop_1_proc_U0_img_12_data_stream_0_V_dout = img_12_data_stream_0_V_dout;
assign image_filter_fh_Loop_1_proc_U0_img_12_data_stream_0_V_empty_n = img_12_data_stream_0_V_empty_n;
assign image_filter_fh_Loop_1_proc_U0_img_2_data_stream_0_V_full_n = img_2_data_stream_0_V_full_n;
assign image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_ap_continue = ap_sig_hs_continue;
assign image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_ap_start = (img_2_rows_V_channel_empty_n & img_2_cols_V_channel_empty_n);
assign image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_img_cols_V_read = img_2_cols_V_channel_dout;
assign image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_img_data_stream_V_dout = img_2_data_stream_0_V_dout;
assign image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_img_data_stream_V_empty_n = img_2_data_stream_0_V_empty_n;
assign image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_img_rows_V_read = img_2_rows_V_channel_dout;
assign image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_output_stream_TREADY = output_stream_TREADY;
assign image_filter_fh_PadImage_480_640_51_U0_ap_continue = ap_const_logic_1;
assign image_filter_fh_PadImage_480_640_51_U0_in_data_stream_V_dout = img_0_data_stream_0_V_dout;
assign image_filter_fh_PadImage_480_640_51_U0_in_data_stream_V_empty_n = img_0_data_stream_0_V_empty_n;
assign image_filter_fh_PadImage_480_640_51_U0_out_data_stream_V_full_n = img_1_data_stream_0_V_full_n;
assign image_filter_fh_control_bus_s_axi_U_ap_dummy_ce = ap_const_logic_1;
assign img_0_cols_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign img_0_cols_V_channel_din = image_filter_fh_Block_Mat_exit712_proc_U0_ap_return_1;
assign img_0_cols_V_channel_read = image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_ready;
assign img_0_cols_V_channel_write = ap_chn_write_image_filter_fh_Block_Mat_exit712_proc_U0_img_0_cols_V_channel;
assign img_0_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_0_data_stream_0_V_din = image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_img_data_stream_V_din;
assign img_0_data_stream_0_V_read = image_filter_fh_PadImage_480_640_51_U0_in_data_stream_V_read;
assign img_0_data_stream_0_V_write = image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_img_data_stream_V_write;
assign img_0_rows_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign img_0_rows_V_channel_din = image_filter_fh_Block_Mat_exit712_proc_U0_ap_return_0;
assign img_0_rows_V_channel_read = image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_ap_ready;
assign img_0_rows_V_channel_write = ap_chn_write_image_filter_fh_Block_Mat_exit712_proc_U0_img_0_rows_V_channel;
assign img_12_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_12_data_stream_0_V_din = image_filter_fh_FilterTest_480_640_1_U0_out_data_stream_V_din;
assign img_12_data_stream_0_V_read = image_filter_fh_Loop_1_proc_U0_img_12_data_stream_0_V_read;
assign img_12_data_stream_0_V_write = image_filter_fh_FilterTest_480_640_1_U0_out_data_stream_V_write;
assign img_1_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_1_data_stream_0_V_din = image_filter_fh_PadImage_480_640_51_U0_out_data_stream_V_din;
assign img_1_data_stream_0_V_read = image_filter_fh_FilterTest_480_640_1_U0_in_data_stream_V_read;
assign img_1_data_stream_0_V_write = image_filter_fh_PadImage_480_640_51_U0_out_data_stream_V_write;
assign img_2_cols_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign img_2_cols_V_channel_din = image_filter_fh_Block_Mat_exit712_proc_U0_ap_return_3;
assign img_2_cols_V_channel_read = image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_ap_ready;
assign img_2_cols_V_channel_write = ap_chn_write_image_filter_fh_Block_Mat_exit712_proc_U0_img_2_cols_V_channel;
assign img_2_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_2_data_stream_0_V_din = image_filter_fh_Loop_1_proc_U0_img_2_data_stream_0_V_din;
assign img_2_data_stream_0_V_read = image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_img_data_stream_V_read;
assign img_2_data_stream_0_V_write = image_filter_fh_Loop_1_proc_U0_img_2_data_stream_0_V_write;
assign img_2_rows_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign img_2_rows_V_channel_din = image_filter_fh_Block_Mat_exit712_proc_U0_ap_return_2;
assign img_2_rows_V_channel_read = image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_ap_ready;
assign img_2_rows_V_channel_write = ap_chn_write_image_filter_fh_Block_Mat_exit712_proc_U0_img_2_rows_V_channel;
assign input_stream_TREADY = image_filter_fh_AXIvideo2Mat_32_480_640_5_U0_input_stream_TREADY;
assign output_stream_TDATA = image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_output_stream_TDATA;
assign output_stream_TDEST = image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_output_stream_TDEST;
assign output_stream_TID = image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_output_stream_TID;
assign output_stream_TKEEP = image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_output_stream_TKEEP;
assign output_stream_TLAST = image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_output_stream_TLAST;
assign output_stream_TSTRB = image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_output_stream_TSTRB;
assign output_stream_TUSER = image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_output_stream_TUSER;
assign output_stream_TVALID = image_filter_fh_Mat2AXIvideo_32_480_640_5_U0_output_stream_TVALID;


endmodule //image_filter_fh

