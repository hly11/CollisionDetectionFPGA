// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module image_filter_fh_Mat2AXIvideo_32_480_640_5_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        img_rows_V_read,
        img_cols_V_read,
        img_data_stream_V_dout,
        img_data_stream_V_empty_n,
        img_data_stream_V_read,
        output_stream_TDATA,
        output_stream_TVALID,
        output_stream_TREADY,
        output_stream_TKEEP,
        output_stream_TSTRB,
        output_stream_TUSER,
        output_stream_TLAST,
        output_stream_TID,
        output_stream_TDEST
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 4'b1;
parameter    ap_ST_st2_fsm_1 = 4'b10;
parameter    ap_ST_pp0_stg0_fsm_2 = 4'b100;
parameter    ap_ST_st5_fsm_3 = 4'b1000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv12_0 = 12'b000000000000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv13_1FFF = 13'b1111111111111;
parameter    ap_const_lv12_1 = 12'b1;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [11:0] img_rows_V_read;
input  [11:0] img_cols_V_read;
input  [31:0] img_data_stream_V_dout;
input   img_data_stream_V_empty_n;
output   img_data_stream_V_read;
output  [31:0] output_stream_TDATA;
output   output_stream_TVALID;
input   output_stream_TREADY;
output  [3:0] output_stream_TKEEP;
output  [3:0] output_stream_TSTRB;
output  [0:0] output_stream_TUSER;
output  [0:0] output_stream_TLAST;
output  [0:0] output_stream_TID;
output  [0:0] output_stream_TDEST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg img_data_stream_V_read;
reg output_stream_TVALID;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm = 4'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_23;
reg   [11:0] p_2_reg_146;
reg    ap_sig_bdd_52;
wire   [12:0] r_V_fu_162_p2;
reg   [12:0] r_V_reg_235;
wire   [0:0] exitcond2_fu_173_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_66;
wire   [11:0] i_V_fu_178_p2;
reg   [11:0] i_V_reg_244;
wire   [0:0] exitcond_fu_184_p2;
reg   [0:0] exitcond_reg_249;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_2;
reg    ap_sig_bdd_77;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_sig_bdd_85;
reg    ap_sig_ioackin_output_stream_TREADY;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
wire   [11:0] j_V_fu_189_p2;
wire   [0:0] axi_last_V_fu_199_p2;
reg   [0:0] axi_last_V_reg_258;
reg   [11:0] p_s_reg_135;
reg    ap_sig_cseq_ST_st5_fsm_3;
reg    ap_sig_bdd_116;
reg   [0:0] tmp_user_V_fu_84;
reg    ap_reg_ioackin_output_stream_TREADY = 1'b0;
wire   [12:0] lhs_V_cast_fu_158_p1;
wire   [12:0] tmp_cast_fu_195_p1;
reg   [3:0] ap_NS_fsm;




/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond2_fu_173_p2 == ap_const_lv1_0))) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ioackin_output_stream_TREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_output_stream_TREADY
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_output_stream_TREADY <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (exitcond_reg_249 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_85 | ((exitcond_reg_249 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_stream_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
            ap_reg_ioackin_output_stream_TREADY <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (exitcond_reg_249 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_85 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_logic_1 == output_stream_TREADY))) begin
            ap_reg_ioackin_output_stream_TREADY <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_sig_bdd_85 | ((exitcond_reg_249 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_stream_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(exitcond_fu_184_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond2_fu_173_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_sig_bdd_85 | ((exitcond_reg_249 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_stream_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (exitcond_fu_184_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond2_fu_173_p2 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_sig_bdd_85 | ((exitcond_reg_249 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_stream_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(exitcond_fu_184_p2 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_85 | ((exitcond_reg_249 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_stream_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (exitcond_fu_184_p2 == ap_const_lv1_0))) begin
        p_2_reg_146 <= j_V_fu_189_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond2_fu_173_p2 == ap_const_lv1_0))) begin
        p_2_reg_146 <= ap_const_lv12_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_3)) begin
        p_s_reg_135 <= i_V_reg_244;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_52)) begin
        p_s_reg_135 <= ap_const_lv12_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (exitcond_reg_249 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_85 | ((exitcond_reg_249 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_stream_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        tmp_user_V_fu_84 <= ap_const_lv1_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_52)) begin
        tmp_user_V_fu_84 <= ap_const_lv1_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_sig_bdd_85 | ((exitcond_reg_249 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_stream_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (exitcond_fu_184_p2 == ap_const_lv1_0))) begin
        axi_last_V_reg_258 <= axi_last_V_fu_199_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_sig_bdd_85 | ((exitcond_reg_249 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_stream_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        exitcond_reg_249 <= exitcond_fu_184_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_V_reg_244 <= i_V_fu_178_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_52)) begin
        r_V_reg_235 <= r_V_fu_162_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or exitcond2_fu_173_p2 or ap_sig_cseq_ST_st2_fsm_1)
begin
    if (((ap_const_logic_1 == ap_done_reg) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond2_fu_173_p2 == ap_const_lv1_0)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (exitcond2_fu_173_p2 or ap_sig_cseq_ST_st2_fsm_1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond2_fu_173_p2 == ap_const_lv1_0))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_2 assign process. ///
always @ (ap_sig_bdd_77)
begin
    if (ap_sig_bdd_77) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_23)
begin
    if (ap_sig_bdd_23) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_66)
begin
    if (ap_sig_bdd_66) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_3 assign process. ///
always @ (ap_sig_bdd_116)
begin
    if (ap_sig_bdd_116) begin
        ap_sig_cseq_ST_st5_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_ioackin_output_stream_TREADY assign process. ///
always @ (output_stream_TREADY or ap_reg_ioackin_output_stream_TREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_output_stream_TREADY)) begin
        ap_sig_ioackin_output_stream_TREADY = output_stream_TREADY;
    end else begin
        ap_sig_ioackin_output_stream_TREADY = ap_const_logic_1;
    end
end

/// img_data_stream_V_read assign process. ///
always @ (exitcond_reg_249 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_85 or ap_sig_ioackin_output_stream_TREADY or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (exitcond_reg_249 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_85 | ((exitcond_reg_249 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_stream_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        img_data_stream_V_read = ap_const_logic_1;
    end else begin
        img_data_stream_V_read = ap_const_logic_0;
    end
end

/// output_stream_TVALID assign process. ///
always @ (exitcond_reg_249 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_85 or ap_reg_ppiten_pp0_it1 or ap_reg_ioackin_output_stream_TREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (exitcond_reg_249 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_85 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_logic_0 == ap_reg_ioackin_output_stream_TREADY))) begin
        output_stream_TVALID = ap_const_logic_1;
    end else begin
        output_stream_TVALID = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_CS_fsm or ap_sig_bdd_52 or exitcond2_fu_173_p2 or exitcond_fu_184_p2 or exitcond_reg_249 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_85 or ap_sig_ioackin_output_stream_TREADY or ap_reg_ppiten_pp0_it1)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_52) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(exitcond2_fu_173_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_pp0_stg0_fsm_2 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_85 | ((exitcond_reg_249 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_stream_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(exitcond_fu_184_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_85 | ((exitcond_reg_249 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_stream_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(exitcond_fu_184_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st5_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_st5_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_116 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_116 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_23 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_23 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_52 assign process. ///
always @ (ap_start or ap_done_reg)
begin
    ap_sig_bdd_52 = ((ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end

/// ap_sig_bdd_66 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_66 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_77 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_77 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_85 assign process. ///
always @ (img_data_stream_V_empty_n or exitcond_reg_249)
begin
    ap_sig_bdd_85 = ((img_data_stream_V_empty_n == ap_const_logic_0) & (exitcond_reg_249 == ap_const_lv1_0));
end
assign axi_last_V_fu_199_p2 = (tmp_cast_fu_195_p1 == r_V_reg_235? 1'b1: 1'b0);
assign exitcond2_fu_173_p2 = (p_s_reg_135 == img_rows_V_read? 1'b1: 1'b0);
assign exitcond_fu_184_p2 = (p_2_reg_146 == img_cols_V_read? 1'b1: 1'b0);
assign i_V_fu_178_p2 = (p_s_reg_135 + ap_const_lv12_1);
assign j_V_fu_189_p2 = (p_2_reg_146 + ap_const_lv12_1);
assign lhs_V_cast_fu_158_p1 = img_cols_V_read;
assign output_stream_TDATA = img_data_stream_V_dout;
assign output_stream_TDEST = ap_const_lv1_0;
assign output_stream_TID = ap_const_lv1_0;
assign output_stream_TKEEP = ap_const_lv4_F;
assign output_stream_TLAST = axi_last_V_reg_258;
assign output_stream_TSTRB = ap_const_lv4_0;
assign output_stream_TUSER = tmp_user_V_fu_84;
assign r_V_fu_162_p2 = ($signed(lhs_V_cast_fu_158_p1) + $signed(ap_const_lv13_1FFF));
assign tmp_cast_fu_195_p1 = p_2_reg_146;


endmodule //image_filter_fh_Mat2AXIvideo_32_480_640_5_s

